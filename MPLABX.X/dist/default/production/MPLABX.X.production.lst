

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Nov 01 17:55:37 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataCOMRAM
    37  000CCE                     __pidataCOMRAM:
    38                           	opt stack 0
    39                           
    40                           ;initializer for _hexPatterns
    41  000CCE  77                 	db	119
    42  000CCF  14                 	db	20
    43  000CD0  B3                 	db	179
    44  000CD1  B6                 	db	182
    45  000CD2  D4                 	db	212
    46  000CD3  E6                 	db	230
    47  000CD4  E7                 	db	231
    48  000CD5  34                 	db	52
    49  000CD6  F7                 	db	247
    50  000CD7  F4                 	db	244
    51  000CD8  F5                 	db	245
    52  000CD9  C7                 	db	199
    53  000CDA  63                 	db	99
    54  000CDB  97                 	db	151
    55  000CDC  E3                 	db	227
    56  000CDD  E1                 	db	225
    57  0000                     _INTCONbits	set	4082
    58  0000                     _OSCCONbits	set	4051
    59  0000                     _PIE1	set	3997
    60  0000                     _PIE1bits	set	3997
    61  0000                     _PIR1bits	set	3998
    62  0000                     _PORTBbits	set	3969
    63  0000                     _PORTCbits	set	3970
    64  0000                     _RCREG	set	4014
    65  0000                     _RCSTA	set	4011
    66  0000                     _RCSTAbits	set	4011
    67  0000                     _SPBRG	set	4015
    68  0000                     _SPBRGH	set	4016
    69  0000                     _SSPBUF	set	4041
    70  0000                     _SSPCON1	set	4038
    71  0000                     _SSPCON1bits	set	4038
    72  0000                     _SSPSTAT	set	4039
    73  0000                     _SSPSTATbits	set	4039
    74  0000                     _T0CON	set	4053
    75  0000                     _T0CONbits	set	4053
    76  0000                     _TMR0H	set	4055
    77  0000                     _TMR0L	set	4054
    78  0000                     _TRISAbits	set	3986
    79  0000                     _TRISBbits	set	3987
    80  0000                     _TRISCbits	set	3988
    81  0000                     _TXREG	set	4013
    82  0000                     _TXSTA	set	4012
    83  0000                     _TXSTAbits	set	4012
    84                           
    85                           	psect	smallconst
    86  000600                     __psmallconst:
    87                           	opt stack 0
    88  000600  00                 	db	0
    89  000601                     __stringdata:
    90                           	opt stack 0
    91  000601  74                 	db	116	;'t'
    92  000602  61                 	db	97	;'a'
    93  000603  6B                 	db	107	;'k'
    94  000604  20                 	db	32
    95  000605  6A                 	db	106	;'j'
    96  000606  61                 	db	97	;'a'
    97  000607  64                 	db	100	;'d'
    98  000608  69                 	db	105	;'i'
    99  000609  20                 	db	32
   100  00060A  79                 	db	121	;'y'
   101  00060B  69                 	db	105	;'i'
   102  00060C  65                 	db	101	;'e'
   103  00060D  6C                 	db	108	;'l'
   104  00060E  64                 	db	100	;'d'
   105  00060F  32                 	db	50	;'2'
   106  000610  0A                 	db	10
   107  000611  00                 	db	0
   108  000612  62                 	db	98	;'b'
   109  000613  65                 	db	101	;'e'
   110  000614  66                 	db	102	;'f'
   111  000615  6F                 	db	111	;'o'
   112  000616  72                 	db	114	;'r'
   113  000617  65                 	db	101	;'e'
   114  000618  20                 	db	32
   115  000619  79                 	db	121	;'y'
   116  00061A  69                 	db	105	;'i'
   117  00061B  65                 	db	101	;'e'
   118  00061C  6C                 	db	108	;'l'
   119  00061D  64                 	db	100	;'d'
   120  00061E  31                 	db	49	;'1'
   121  00061F  0A                 	db	10
   122  000620  00                 	db	0
   123  000621  61                 	db	97	;'a'
   124  000622  66                 	db	102	;'f'
   125  000623  74                 	db	116	;'t'
   126  000624  65                 	db	101	;'e'
   127  000625  72                 	db	114	;'r'
   128  000626  20                 	db	32
   129  000627  79                 	db	121	;'y'
   130  000628  69                 	db	105	;'i'
   131  000629  65                 	db	101	;'e'
   132  00062A  6C                 	db	108	;'l'
   133  00062B  64                 	db	100	;'d'
   134  00062C  20                 	db	32
   135  00062D  32                 	db	50	;'2'
   136  00062E  0A                 	db	10
   137  00062F  00                 	db	0
   138  000630  62                 	db	98	;'b'
   139  000631  65                 	db	101	;'e'
   140  000632  66                 	db	102	;'f'
   141  000633  6F                 	db	111	;'o'
   142  000634  72                 	db	114	;'r'
   143  000635  65                 	db	101	;'e'
   144  000636  20                 	db	32
   145  000637  79                 	db	121	;'y'
   146  000638  69                 	db	105	;'i'
   147  000639  65                 	db	101	;'e'
   148  00063A  6C                 	db	108	;'l'
   149  00063B  64                 	db	100	;'d'
   150  00063C  32                 	db	50	;'2'
   151  00063D  0A                 	db	10
   152  00063E  00                 	db	0
   153  00063F  61                 	db	97	;'a'
   154  000640  66                 	db	102	;'f'
   155  000641  74                 	db	116	;'t'
   156  000642  65                 	db	101	;'e'
   157  000643  72                 	db	114	;'r'
   158  000644  20                 	db	32
   159  000645  79                 	db	121	;'y'
   160  000646  69                 	db	105	;'i'
   161  000647  65                 	db	101	;'e'
   162  000648  6C                 	db	108	;'l'
   163  000649  64                 	db	100	;'d'
   164  00064A  31                 	db	49	;'1'
   165  00064B  0A                 	db	10
   166  00064C  00                 	db	0
   167  00064D  4C                 	db	76	;'L'
   168  00064E  45                 	db	69	;'E'
   169  00064F  44                 	db	68	;'D'
   170  000650  32                 	db	50	;'2'
   171  000651  5F                 	db	95	;'_'
   172  000652  49                 	db	73	;'I'
   173  000653  4E                 	db	78	;'N'
   174  000654  49                 	db	73	;'I'
   175  000655  54                 	db	84	;'T'
   176  000656  0A                 	db	10
   177  000657  00                 	db	0
   178  000658                     __end_of__stringdata:
   179                           	opt stack 0
   180                           
   181                           ; #config settings
   182  000658  00                 	db	0	; dummy byte at the end
   183  0000                     
   184                           	psect	cinit
   185  000BD4                     __pcinit:
   186                           	opt stack 0
   187  000BD4                     start_initialization:
   188                           	opt stack 0
   189  000BD4                     __initialization:
   190                           	opt stack 0
   191                           
   192                           ; Clear objects allocated to COMRAM (5 bytes)
   193  000BD4  6A45               	clrf	(__pbssCOMRAM+4)& (0+255),c
   194  000BD6  6A44               	clrf	(__pbssCOMRAM+3)& (0+255),c
   195  000BD8  6A43               	clrf	(__pbssCOMRAM+2)& (0+255),c
   196  000BDA  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
   197  000BDC  6A41               	clrf	__pbssCOMRAM& (0+255),c
   198                           
   199                           ; Initialize objects allocated to COMRAM (16 bytes)
   200                           ; load TBLPTR registers with __pidataCOMRAM
   201  000BDE  0ECE               	movlw	low __pidataCOMRAM
   202  000BE0  6EF6               	movwf	tblptrl,c
   203  000BE2  0E0C               	movlw	high __pidataCOMRAM
   204  000BE4  6EF7               	movwf	tblptrh,c
   205  000BE6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   206  000BE8  6EF8               	movwf	tblptru,c
   207  000BEA  EE00  F031         	lfsr	0,__pdataCOMRAM
   208  000BEE  EE10 F010          	lfsr	1,16
   209  000BF2                     copy_data0:
   210  000BF2  0009               	tblrd		*+
   211  000BF4  CFF5 FFEE          	movff	tablat,postinc0
   212  000BF8  50E5               	movf	postdec1,w,c
   213  000BFA  50E1               	movf	fsr1l,w,c
   214  000BFC  E1FA               	bnz	copy_data0
   215  000BFE                     end_of_initialization:
   216                           	opt stack 0
   217  000BFE                     __end_of__initialization:
   218                           	opt stack 0
   219  000BFE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   220  000C00  6EF8               	movwf	tblptru,c
   221  000C02  0100               	movlb	0
   222  000C04  EFED  F004         	goto	_main	;jump to C main() function
   223                           tblptru	equ	0xFF8
   224                           tblptrh	equ	0xFF7
   225                           tblptrl	equ	0xFF6
   226                           tablat	equ	0xFF5
   227                           postinc0	equ	0xFEE
   228                           postdec1	equ	0xFE5
   229                           fsr1l	equ	0xFE1
   230                           
   231                           	psect	bssCOMRAM
   232  000041                     __pbssCOMRAM:
   233                           	opt stack 0
   234  000041                     _clock:
   235                           	opt stack 0
   236  000041                     	ds	4
   237  000045                     _USART_Status:
   238                           	opt stack 0
   239  000045                     	ds	1
   240                           tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           tblptrl	equ	0xFF6
   243                           tablat	equ	0xFF5
   244                           postinc0	equ	0xFEE
   245                           postdec1	equ	0xFE5
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	dataCOMRAM
   249  000031                     __pdataCOMRAM:
   250                           	opt stack 0
   251  000031                     _hexPatterns:
   252                           	opt stack 0
   253  000031                     	ds	16
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           postdec1	equ	0xFE5
   260                           fsr1l	equ	0xFE1
   261                           
   262                           	psect	cstackCOMRAM
   263  000001                     __pcstackCOMRAM:
   264                           	opt stack 0
   265  000001                     ??_interruptSR:
   266  000001                     
   267                           ; 1 bytes @ 0x0
   268  000001                     	ds	14
   269  00000F                     ?_getClock:
   270                           	opt stack 0
   271  00000F                     OpenSPI@bus_mode:
   272                           	opt stack 0
   273  00000F                     WriteSPI@TempVar:
   274                           	opt stack 0
   275  00000F                     OpenTimer0@config:
   276                           	opt stack 0
   277  00000F                     ReadUSART@data:
   278                           	opt stack 0
   279  00000F                     WriteUSART@data:
   280                           	opt stack 0
   281  00000F                     initUartLoopback@data:
   282                           	opt stack 0
   283  00000F                     initSevenSeg@data:
   284                           	opt stack 0
   285  00000F                     OpenUSART@spbrg:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0xE
   289  00000F                     	ds	1
   290  000010                     OpenSPI@smp_phase:
   291                           	opt stack 0
   292  000010                     WriteSPI@data_out:
   293                           	opt stack 0
   294  000010                     uartLoopbackSM@data:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0xF
   298  000010                     	ds	1
   299  000011                     ??_OpenUSART:
   300  000011                     OpenSPI@sync_mode:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x10
   304  000011                     	ds	1
   305  000012                     
   306                           ; 0 bytes @ 0x11
   307  000012                     	ds	1
   308  000013                     sevenSegSM@data:
   309                           	opt stack 0
   310  000013                     led2SM@data:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x12
   314  000013                     	ds	1
   315  000014                     OpenUSART@config:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x13
   319  000014                     	ds	1
   320  000015                     ??_led2SM:
   321  000015                     ??_sevenSegSM:
   322                           
   323                           ; 0 bytes @ 0x14
   324  000015                     	ds	12
   325  000021                     main@led2Data:
   326                           	opt stack 0
   327                           
   328                           ; 7 bytes @ 0x20
   329  000021                     	ds	7
   330  000028                     main@loopbackData:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x27
   334  000028                     	ds	2
   335  00002A                     main@sevenSegData:
   336                           	opt stack 0
   337                           
   338                           ; 7 bytes @ 0x29
   339  00002A                     	ds	7
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           postinc0	equ	0xFEE
   345                           postdec1	equ	0xFE5
   346                           fsr1l	equ	0xFE1
   347                           
   348 ;;
   349 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   350 ;;
   351 ;; *************** function _main *****************
   352 ;; Defined at:
   353 ;;		line 29 in file "../src/PIC18/main.c"
   354 ;; Parameters:    Size  Location     Type
   355 ;;		None
   356 ;; Auto vars:     Size  Location     Type
   357 ;;  sevenSegData    7   41[COMRAM] struct SevenSegData
   358 ;;  led2Data        7   32[COMRAM] struct Led2Data
   359 ;;  loopbackData    2   39[COMRAM] struct LoopbackData
   360 ;; Return value:  Size  Location     Type
   361 ;;		None               void
   362 ;; Registers used:
   363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   369 ;;      Params:         0       0       0       0       0       0       0
   370 ;;      Locals:        16       0       0       0       0       0       0
   371 ;;      Temps:          0       0       0       0       0       0       0
   372 ;;      Totals:        16       0       0       0       0       0       0
   373 ;;Total ram usage:       16 bytes
   374 ;; Hardware stack levels required when called:    5
   375 ;; This function calls:
   376 ;;		_OpenSPI
   377 ;;		_OpenUSART
   378 ;;		_configureLED
   379 ;;		_initClock
   380 ;;		_initSevenSeg
   381 ;;		_initUartLoopback
   382 ;;		_led2SM
   383 ;;		_sevenSegSM
   384 ;;		_turnOnSevenSeg
   385 ;;		_uartLoopbackSM
   386 ;; This function is called by:
   387 ;;		Startup code after reset
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           	psect	text0
   392  0009DA                     __ptext0:
   393                           	opt stack 0
   394  0009DA                     _main:
   395                           	opt stack 26
   396                           
   397                           ;main.c: 30: (OSCCONbits.IRCF = 7);
   398                           
   399                           ;incstack = 0
   400  0009DA  88D3               	bsf	4051,4,c	;volatile
   401  0009DC  8AD3               	bsf	4051,5,c	;volatile
   402  0009DE  8CD3               	bsf	4051,6,c	;volatile
   403                           
   404                           ;main.c: 31: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111, 51);;
   405  0009E0  0E00               	movlw	0
   406  0009E2  6E10               	movwf	OpenUSART@spbrg+1,c
   407  0009E4  0E33               	movlw	51
   408  0009E6  6E0F               	movwf	OpenUSART@spbrg,c
   409  0009E8  0E3C               	movlw	60
   410  0009EA  EC59  F005         	call	_OpenUSART
   411                           
   412                           ;main.c: 32: OpenSPI(0b00000000, 0b00000011, 0b10000000);
   413  0009EE  0E03               	movlw	3
   414  0009F0  6E0F               	movwf	OpenSPI@bus_mode,c
   415  0009F2  0E80               	movlw	128
   416  0009F4  6E10               	movwf	OpenSPI@smp_phase,c
   417  0009F6  0E00               	movlw	0
   418  0009F8  ECBD  F005         	call	_OpenSPI
   419                           
   420                           ;main.c: 33: configureLED();
   421  0009FC  EC7D  F006         	call	_configureLED	;wreg free
   422                           
   423                           ;main.c: 34: LoopbackData loopbackData;
   424                           ;main.c: 36: Led2Data led2Data;
   425                           ;main.c: 37: SevenSegData sevenSegData;
   426                           ;main.c: 39: initClock();
   427  000A00  EC32  F006         	call	_initClock	;wreg free
   428                           
   429                           ;main.c: 40: initUartLoopback(&loopbackData);
   430  000A04  0E00               	movlw	high main@loopbackData
   431  000A06  6E10               	movwf	initUartLoopback@data+1,c
   432  000A08  0E28               	movlw	low main@loopbackData
   433  000A0A  6E0F               	movwf	initUartLoopback@data,c
   434  000A0C  EC23  F006         	call	_initUartLoopback	;wreg free
   435                           
   436                           ;main.c: 41: initSevenSeg(&sevenSegData);
   437  000A10  0E00               	movlw	high main@sevenSegData
   438  000A12  6E10               	movwf	initSevenSeg@data+1,c
   439  000A14  0E2A               	movlw	low main@sevenSegData
   440  000A16  6E0F               	movwf	initSevenSeg@data,c
   441  000A18  EC6F  F006         	call	_initSevenSeg	;wreg free
   442                           
   443                           ;main.c: 42: turnOnSevenSeg();
   444  000A1C  EC77  F006         	call	_turnOnSevenSeg	;wreg free
   445  000A20                     l1159:
   446                           
   447                           ;main.c: 46: uartLoopbackSM(&loopbackData);
   448  000A20  0E00               	movlw	high main@loopbackData
   449  000A22  6E11               	movwf	uartLoopbackSM@data+1,c
   450  000A24  0E28               	movlw	low main@loopbackData
   451  000A26  6E10               	movwf	uartLoopbackSM@data,c
   452  000A28  EC8D  F005         	call	_uartLoopbackSM	;wreg free
   453                           
   454                           ;main.c: 48: led2SM(&led2Data);
   455  000A2C  0E00               	movlw	high main@led2Data
   456  000A2E  6E14               	movwf	led2SM@data+1,c
   457  000A30  0E21               	movlw	low main@led2Data
   458  000A32  6E13               	movwf	led2SM@data,c
   459  000A34  EC2D  F003         	call	_led2SM	;wreg free
   460                           
   461                           ;main.c: 49: sevenSegSM(&sevenSegData);
   462  000A38  0E00               	movlw	high main@sevenSegData
   463  000A3A  6E14               	movwf	sevenSegSM@data+1,c
   464  000A3C  0E2A               	movlw	low main@sevenSegData
   465  000A3E  6E13               	movwf	sevenSegSM@data,c
   466  000A40  EC1F  F004         	call	_sevenSegSM	;wreg free
   467  000A44  D7ED               	goto	l1159
   468  000A46                     __end_of_main:
   469                           	opt stack 0
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           postdec1	equ	0xFE5
   476                           fsr1l	equ	0xFE1
   477                           
   478 ;; *************** function _uartLoopbackSM *****************
   479 ;; Defined at:
   480 ;;		line 9 in file "../src/PIC18/UARTLoopback.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;  data            2   15[COMRAM] PTR struct LoopbackData
   483 ;;		 -> main@loopbackData(2), 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;		None
   486 ;; Return value:  Size  Location     Type
   487 ;;		None               void
   488 ;; Registers used:
   489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   495 ;;      Params:         2       0       0       0       0       0       0
   496 ;;      Locals:         0       0       0       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0       0       0
   498 ;;      Totals:         2       0       0       0       0       0       0
   499 ;;Total ram usage:        2 bytes
   500 ;; Hardware stack levels used:    1
   501 ;; Hardware stack levels required when called:    4
   502 ;; This function calls:
   503 ;;		_ReadUSART
   504 ;;		_WriteUSART
   505 ;; This function is called by:
   506 ;;		_main
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510                           	psect	text1
   511  000B1A                     __ptext1:
   512                           	opt stack 0
   513  000B1A                     _uartLoopbackSM:
   514                           	opt stack 26
   515                           
   516                           ;UARTLoopback.c: 11: switch(data->state){
   517                           
   518                           ;incstack = 0
   519  000B1A  D023               	goto	l1065
   520  000B1C                     l116:
   521                           
   522                           ;UARTLoopback.c: 13: if((PIR1bits.RCIF) == 0)
   523  000B1C  AA9E               	btfss	3998,5,c	;volatile
   524  000B1E  D02C               	goto	l122
   525                           
   526                           ;UARTLoopback.c: 15: data->dataByte = ReadUSART();
   527                           
   528                           ;UARTLoopback.c: 14: break;
   529  000B20  EE20 F001          	lfsr	2,1
   530  000B24  5010               	movf	uartLoopbackSM@data,w,c
   531  000B26  26D9               	addwf	fsr2l,f,c
   532  000B28  5011               	movf	uartLoopbackSM@data+1,w,c
   533  000B2A  22DA               	addwfc	fsr2h,f,c
   534  000B2C  EC14  F006         	call	_ReadUSART	;wreg free
   535  000B30  6EDF               	movwf	indf2,c
   536                           
   537                           ;UARTLoopback.c: 16: data->state = WAIT_TO_TX;
   538  000B32  C010  FFD9         	movff	uartLoopbackSM@data,fsr2l
   539  000B36  C011  FFDA         	movff	uartLoopbackSM@data+1,fsr2h
   540  000B3A  0E01               	movlw	1
   541  000B3C  D010               	goto	L1
   542  000B3E                     l119:
   543                           
   544                           ;UARTLoopback.c: 20: if((!TXSTAbits.TRMT) == 1)
   545  000B3E  A2AC               	btfss	4012,1,c	;volatile
   546  000B40  D01B               	goto	l122
   547                           
   548                           ;UARTLoopback.c: 22: WriteUSART(data->dataByte);
   549                           
   550                           ;UARTLoopback.c: 21: break;
   551  000B42  EE20 F001          	lfsr	2,1
   552  000B46  5010               	movf	uartLoopbackSM@data,w,c
   553  000B48  26D9               	addwf	fsr2l,f,c
   554  000B4A  5011               	movf	uartLoopbackSM@data+1,w,c
   555  000B4C  22DA               	addwfc	fsr2h,f,c
   556  000B4E  50DF               	movf	indf2,w,c
   557  000B50  EC4C  F006         	call	_WriteUSART
   558                           
   559                           ;UARTLoopback.c: 23: data->state = WAIT_DATA;
   560  000B54  C010  FFD9         	movff	uartLoopbackSM@data,fsr2l
   561  000B58  C011  FFDA         	movff	uartLoopbackSM@data+1,fsr2h
   562  000B5C  0E00               	movlw	0
   563  000B5E                     L1:
   564  000B5E  6EDF               	movwf	indf2,c
   565                           
   566                           ;UARTLoopback.c: 24: break;
   567  000B60  D00B               	goto	l122
   568  000B62                     l1065:
   569  000B62  C010  FFD9         	movff	uartLoopbackSM@data,fsr2l
   570  000B66  C011  FFDA         	movff	uartLoopbackSM@data+1,fsr2h
   571  000B6A  50DF               	movf	indf2,w,c
   572                           
   573                           ; Switch size 1, requested type "space"
   574                           ; Number of cases is 2, Range of values is 0 to 1
   575                           ; switch strategies available:
   576                           ; Name         Instructions Cycles
   577                           ; simple_byte            7     4 (average)
   578                           ;	Chosen strategy is simple_byte
   579  000B6C  0A00               	xorlw	0	; case 0
   580  000B6E  B4D8               	btfsc	status,2,c
   581  000B70  D7D5               	goto	l116
   582  000B72  0A01               	xorlw	1	; case 1
   583  000B74  B4D8               	btfsc	status,2,c
   584  000B76  D7E3               	goto	l119
   585  000B78                     l122:
   586  000B78  0012               	return	
   587  000B7A                     __end_of_uartLoopbackSM:
   588                           	opt stack 0
   589                           tblptru	equ	0xFF8
   590                           tblptrh	equ	0xFF7
   591                           tblptrl	equ	0xFF6
   592                           tablat	equ	0xFF5
   593                           postinc0	equ	0xFEE
   594                           postdec1	equ	0xFE5
   595                           fsr1l	equ	0xFE1
   596                           indf2	equ	0xFDF
   597                           fsr2h	equ	0xFDA
   598                           fsr2l	equ	0xFD9
   599                           status	equ	0xFD8
   600                           
   601 ;; *************** function _WriteUSART *****************
   602 ;; Defined at:
   603 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;  data            1    wreg     unsigned char 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  data            1   14[COMRAM] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;		None               void
   610 ;; Registers used:
   611 ;;		wreg
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   617 ;;      Params:         0       0       0       0       0       0       0
   618 ;;      Locals:         1       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0
   620 ;;      Totals:         1       0       0       0       0       0       0
   621 ;;Total ram usage:        1 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; Hardware stack levels required when called:    3
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_uartLoopbackSM
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text2
   632  000C98                     __ptext2:
   633                           	opt stack 0
   634  000C98                     _WriteUSART:
   635                           	opt stack 26
   636                           
   637                           ;incstack = 0
   638                           ;WriteUSART@data stored from wreg
   639  000C98  6E0F               	movwf	WriteUSART@data,c
   640  000C9A  ACAC               	btfss	4012,6,c	;volatile
   641  000C9C  D003               	goto	l949
   642  000C9E  90AC               	bcf	4012,0,c	;volatile
   643  000CA0  B245               	btfsc	_USART_Status,1,c
   644  000CA2  80AC               	bsf	4012,0,c	;volatile
   645  000CA4                     l949:
   646  000CA4  C00F  FFAD         	movff	WriteUSART@data,4013	;volatile
   647  000CA8  0012               	return	
   648  000CAA                     __end_of_WriteUSART:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           postdec1	equ	0xFE5
   656                           fsr1l	equ	0xFE1
   657                           indf2	equ	0xFDF
   658                           fsr2h	equ	0xFDA
   659                           fsr2l	equ	0xFD9
   660                           status	equ	0xFD8
   661                           
   662 ;; *************** function _ReadUSART *****************
   663 ;; Defined at:
   664 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;  data            1   14[COMRAM] unsigned char 
   669 ;; Return value:  Size  Location     Type
   670 ;;                  1    wreg      unsigned char 
   671 ;; Registers used:
   672 ;;		wreg, status,2, status,0
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   678 ;;      Params:         0       0       0       0       0       0       0
   679 ;;      Locals:         1       0       0       0       0       0       0
   680 ;;      Temps:          0       0       0       0       0       0       0
   681 ;;      Totals:         1       0       0       0       0       0       0
   682 ;;Total ram usage:        1 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    3
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_uartLoopbackSM
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text3
   693  000C28                     __ptext3:
   694                           	opt stack 0
   695  000C28                     _ReadUSART:
   696                           	opt stack 26
   697                           
   698                           ;incstack = 0
   699  000C28  0EF2               	movlw	242
   700  000C2A  1645               	andwf	_USART_Status,f,c
   701  000C2C  ACAB               	btfss	4011,6,c	;volatile
   702  000C2E  D003               	goto	l303
   703  000C30  9045               	bcf	_USART_Status,0,c
   704  000C32  B0AB               	btfsc	4011,0,c	;volatile
   705  000C34  8045               	bsf	_USART_Status,0,c
   706  000C36                     l303:
   707  000C36  B4AB               	btfsc	4011,2,c	;volatile
   708  000C38  8445               	bsf	_USART_Status,2,c
   709  000C3A  B2AB               	btfsc	4011,1,c	;volatile
   710  000C3C  8645               	bsf	_USART_Status,3,c
   711  000C3E  CFAE F00F          	movff	4014,ReadUSART@data	;volatile
   712  000C42  500F               	movf	ReadUSART@data,w,c
   713  000C44  0012               	return	
   714  000C46                     __end_of_ReadUSART:
   715                           	opt stack 0
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           tblptrl	equ	0xFF6
   719                           tablat	equ	0xFF5
   720                           postinc0	equ	0xFEE
   721                           postdec1	equ	0xFE5
   722                           fsr1l	equ	0xFE1
   723                           indf2	equ	0xFDF
   724                           fsr2h	equ	0xFDA
   725                           fsr2l	equ	0xFD9
   726                           status	equ	0xFD8
   727                           
   728 ;; *************** function _turnOnSevenSeg *****************
   729 ;; Defined at:
   730 ;;		line 30 in file "../src/PIC18/SevenSeg.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;		None               void
   737 ;; Registers used:
   738 ;;		None
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   744 ;;      Params:         0       0       0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0
   747 ;;      Totals:         0       0       0       0       0       0       0
   748 ;;Total ram usage:        0 bytes
   749 ;; Hardware stack levels used:    1
   750 ;; Hardware stack levels required when called:    3
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text4
   759  000CEE                     __ptext4:
   760                           	opt stack 0
   761  000CEE                     _turnOnSevenSeg:
   762                           	opt stack 27
   763                           
   764                           ;SevenSeg.c: 31: PORTCbits.RC2 = 1;
   765                           
   766                           ;incstack = 0
   767  000CEE  8482               	bsf	3970,2,c	;volatile
   768  000CF0  0012               	return	
   769  000CF2                     __end_of_turnOnSevenSeg:
   770                           	opt stack 0
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           tblptrl	equ	0xFF6
   774                           tablat	equ	0xFF5
   775                           postinc0	equ	0xFEE
   776                           postdec1	equ	0xFE5
   777                           fsr1l	equ	0xFE1
   778                           indf2	equ	0xFDF
   779                           fsr2h	equ	0xFDA
   780                           fsr2l	equ	0xFD9
   781                           status	equ	0xFD8
   782                           
   783 ;; *************** function _sevenSegSM *****************
   784 ;; Defined at:
   785 ;;		line 38 in file "../src/PIC18/SevenSeg.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;  data            2   18[COMRAM] PTR struct SevenSegData
   788 ;;		 -> main@sevenSegData(7), 
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;		None               void
   793 ;; Registers used:
   794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   800 ;;      Params:         2       0       0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0       0       0
   802 ;;      Temps:         12       0       0       0       0       0       0
   803 ;;      Totals:        14       0       0       0       0       0       0
   804 ;;Total ram usage:       14 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    4
   807 ;; This function calls:
   808 ;;		_WriteSPI
   809 ;;		_getClock
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text5
   816  00083E                     __ptext5:
   817                           	opt stack 0
   818  00083E                     _sevenSegSM:
   819                           	opt stack 26
   820                           
   821                           ;SevenSeg.c: 39: switch(data->state){
   822                           
   823                           ;incstack = 0
   824  00083E  D0C1               	goto	l1127
   825  000840                     l1105:
   826                           
   827                           ;SevenSeg.c: 41: data->counter = 0;
   828  000840  EE20 F001          	lfsr	2,1
   829  000844  5013               	movf	sevenSegSM@data,w,c
   830  000846  26D9               	addwf	fsr2l,f,c
   831  000848  5014               	movf	sevenSegSM@data+1,w,c
   832  00084A  22DA               	addwfc	fsr2h,f,c
   833  00084C  0E00               	movlw	0
   834  00084E  6EDE               	movwf	postinc2,c
   835  000850  0E00               	movlw	0
   836  000852  6EDD               	movwf	postdec2,c
   837                           
   838                           ;SevenSeg.c: 42: data->currClock = getClock();
   839  000854  EC55  F006         	call	_getClock	;wreg free
   840  000858  C00F  F015         	movff	?_getClock,??_sevenSegSM
   841  00085C  C010  F016         	movff	?_getClock+1,??_sevenSegSM+1
   842  000860  C011  F017         	movff	?_getClock+2,??_sevenSegSM+2
   843  000864  C012  F018         	movff	?_getClock+3,??_sevenSegSM+3
   844  000868  EE20 F003          	lfsr	2,3
   845  00086C  5013               	movf	sevenSegSM@data,w,c
   846  00086E  26D9               	addwf	fsr2l,f,c
   847  000870  5014               	movf	sevenSegSM@data+1,w,c
   848  000872  22DA               	addwfc	fsr2h,f,c
   849  000874  C015  FFDE         	movff	??_sevenSegSM,postinc2
   850  000878  C016  FFDE         	movff	??_sevenSegSM+1,postinc2
   851  00087C  C017  FFDE         	movff	??_sevenSegSM+2,postinc2
   852  000880  C018  FFDD         	movff	??_sevenSegSM+3,postdec2
   853  000884  06D9               	decf	fsr2l,f,c
   854  000886  06D9               	decf	fsr2l,f,c
   855                           
   856                           ;SevenSeg.c: 43: WriteSPI(hexPatterns[data->counter]);
   857  000888  EE20 F001          	lfsr	2,1
   858  00088C  5013               	movf	sevenSegSM@data,w,c
   859  00088E  26D9               	addwf	fsr2l,f,c
   860  000890  5014               	movf	sevenSegSM@data+1,w,c
   861  000892  22DA               	addwfc	fsr2h,f,c
   862  000894  CFDE F015          	movff	postinc2,??_sevenSegSM
   863  000898  CFDD F016          	movff	postdec2,??_sevenSegSM+1
   864  00089C  0E31               	movlw	low _hexPatterns
   865  00089E  2415               	addwf	??_sevenSegSM,w,c
   866  0008A0  6ED9               	movwf	fsr2l,c
   867  0008A2  0E00               	movlw	high _hexPatterns
   868  0008A4  2016               	addwfc	??_sevenSegSM+1,w,c
   869  0008A6  6EDA               	movwf	fsr2h,c
   870  0008A8  50DF               	movf	indf2,w,c
   871  0008AA  EC40  F006         	call	_WriteSPI
   872  0008AE  D082               	goto	l1123
   873  0008B0                     l1113:
   874                           
   875                           ;SevenSeg.c: 48: if(getClock() - data->currClock >= 488){
   876  0008B0  EE20 F003          	lfsr	2,3
   877  0008B4  5013               	movf	sevenSegSM@data,w,c
   878  0008B6  26D9               	addwf	fsr2l,f,c
   879  0008B8  5014               	movf	sevenSegSM@data+1,w,c
   880  0008BA  22DA               	addwfc	fsr2h,f,c
   881  0008BC  CFDE F015          	movff	postinc2,??_sevenSegSM
   882  0008C0  CFDE F016          	movff	postinc2,??_sevenSegSM+1
   883  0008C4  CFDE F017          	movff	postinc2,??_sevenSegSM+2
   884  0008C8  CFDE F018          	movff	postinc2,??_sevenSegSM+3
   885  0008CC  1E15               	comf	??_sevenSegSM,f,c
   886  0008CE  1E16               	comf	??_sevenSegSM+1,f,c
   887  0008D0  1E17               	comf	??_sevenSegSM+2,f,c
   888  0008D2  1E18               	comf	??_sevenSegSM+3,f,c
   889  0008D4  2A15               	incf	??_sevenSegSM,f,c
   890  0008D6  0E00               	movlw	0
   891  0008D8  2216               	addwfc	??_sevenSegSM+1,f,c
   892  0008DA  2217               	addwfc	??_sevenSegSM+2,f,c
   893  0008DC  2218               	addwfc	??_sevenSegSM+3,f,c
   894  0008DE  EC55  F006         	call	_getClock	;wreg free
   895  0008E2  C00F  F019         	movff	?_getClock,??_sevenSegSM+4
   896  0008E6  C010  F01A         	movff	?_getClock+1,??_sevenSegSM+5
   897  0008EA  C011  F01B         	movff	?_getClock+2,??_sevenSegSM+6
   898  0008EE  C012  F01C         	movff	?_getClock+3,??_sevenSegSM+7
   899  0008F2  5015               	movf	??_sevenSegSM,w,c
   900  0008F4  2419               	addwf	??_sevenSegSM+4,w,c
   901  0008F6  6E1D               	movwf	(??_sevenSegSM+8)& (0+255),c
   902  0008F8  5016               	movf	??_sevenSegSM+1,w,c
   903  0008FA  201A               	addwfc	??_sevenSegSM+5,w,c
   904  0008FC  6E1E               	movwf	(??_sevenSegSM+9)& (0+255),c
   905  0008FE  5017               	movf	??_sevenSegSM+2,w,c
   906  000900  201B               	addwfc	??_sevenSegSM+6,w,c
   907  000902  6E1F               	movwf	(??_sevenSegSM+10)& (0+255),c
   908  000904  5018               	movf	??_sevenSegSM+3,w,c
   909  000906  201C               	addwfc	??_sevenSegSM+7,w,c
   910  000908  6E20               	movwf	(??_sevenSegSM+11)& (0+255),c
   911  00090A  0EE8               	movlw	232
   912  00090C  5C1D               	subwf	??_sevenSegSM+8,w,c
   913  00090E  0E01               	movlw	1
   914  000910  581E               	subwfb	??_sevenSegSM+9,w,c
   915  000912  0E00               	movlw	0
   916  000914  581F               	subwfb	??_sevenSegSM+10,w,c
   917  000916  0E00               	movlw	0
   918  000918  5820               	subwfb	??_sevenSegSM+11,w,c
   919  00091A  A0D8               	btfss	status,0,c
   920  00091C  D036               	goto	l1119
   921                           
   922                           ;SevenSeg.c: 49: data->currClock = getClock();
   923  00091E  EC55  F006         	call	_getClock	;wreg free
   924  000922  C00F  F015         	movff	?_getClock,??_sevenSegSM
   925  000926  C010  F016         	movff	?_getClock+1,??_sevenSegSM+1
   926  00092A  C011  F017         	movff	?_getClock+2,??_sevenSegSM+2
   927  00092E  C012  F018         	movff	?_getClock+3,??_sevenSegSM+3
   928  000932  EE20 F003          	lfsr	2,3
   929  000936  5013               	movf	sevenSegSM@data,w,c
   930  000938  26D9               	addwf	fsr2l,f,c
   931  00093A  5014               	movf	sevenSegSM@data+1,w,c
   932  00093C  22DA               	addwfc	fsr2h,f,c
   933  00093E  C015  FFDE         	movff	??_sevenSegSM,postinc2
   934  000942  C016  FFDE         	movff	??_sevenSegSM+1,postinc2
   935  000946  C017  FFDE         	movff	??_sevenSegSM+2,postinc2
   936  00094A  C018  FFDD         	movff	??_sevenSegSM+3,postdec2
   937  00094E  06D9               	decf	fsr2l,f,c
   938  000950  06D9               	decf	fsr2l,f,c
   939                           
   940                           ;SevenSeg.c: 50: WriteSPI(hexPatterns[data->counter]);
   941  000952  EE20 F001          	lfsr	2,1
   942  000956  5013               	movf	sevenSegSM@data,w,c
   943  000958  26D9               	addwf	fsr2l,f,c
   944  00095A  5014               	movf	sevenSegSM@data+1,w,c
   945  00095C  22DA               	addwfc	fsr2h,f,c
   946  00095E  CFDE F015          	movff	postinc2,??_sevenSegSM
   947  000962  CFDD F016          	movff	postdec2,??_sevenSegSM+1
   948  000966  0E31               	movlw	low _hexPatterns
   949  000968  2415               	addwf	??_sevenSegSM,w,c
   950  00096A  6ED9               	movwf	fsr2l,c
   951  00096C  0E00               	movlw	high _hexPatterns
   952  00096E  2016               	addwfc	??_sevenSegSM+1,w,c
   953  000970  6EDA               	movwf	fsr2h,c
   954  000972  50DF               	movf	indf2,w,c
   955  000974  EC40  F006         	call	_WriteSPI
   956                           
   957                           ;SevenSeg.c: 51: data->counter++;
   958  000978  EE20 F001          	lfsr	2,1
   959  00097C  5013               	movf	sevenSegSM@data,w,c
   960  00097E  26D9               	addwf	fsr2l,f,c
   961  000980  5014               	movf	sevenSegSM@data+1,w,c
   962  000982  22DA               	addwfc	fsr2h,f,c
   963  000984  2ADE               	incf	postinc2,f,c
   964  000986  0E00               	movlw	0
   965  000988  22DD               	addwfc	postdec2,f,c
   966  00098A                     l1119:
   967                           
   968                           ;SevenSeg.c: 52: }
   969                           ;SevenSeg.c: 53: if(data->counter == 16)
   970  00098A  EE20 F001          	lfsr	2,1
   971  00098E  5013               	movf	sevenSegSM@data,w,c
   972  000990  26D9               	addwf	fsr2l,f,c
   973  000992  5014               	movf	sevenSegSM@data+1,w,c
   974  000994  22DA               	addwfc	fsr2h,f,c
   975  000996  50DE               	movf	postinc2,w,c
   976  000998  0A10               	xorlw	16
   977  00099A  10DD               	iorwf	postdec2,w,c
   978  00099C  A4D8               	btfss	status,2,c
   979  00099E  D00A               	goto	l1123
   980                           
   981                           ;SevenSeg.c: 54: data->counter = 0;
   982  0009A0  EE20 F001          	lfsr	2,1
   983  0009A4  5013               	movf	sevenSegSM@data,w,c
   984  0009A6  26D9               	addwf	fsr2l,f,c
   985  0009A8  5014               	movf	sevenSegSM@data+1,w,c
   986  0009AA  22DA               	addwfc	fsr2h,f,c
   987  0009AC  0E00               	movlw	0
   988  0009AE  6EDE               	movwf	postinc2,c
   989  0009B0  0E00               	movlw	0
   990  0009B2  6EDD               	movwf	postdec2,c
   991  0009B4                     l1123:
   992                           
   993                           ;SevenSeg.c: 56: data->state = _7Seg_WAITING;
   994  0009B4  C013  FFD9         	movff	sevenSegSM@data,fsr2l
   995  0009B8  C014  FFDA         	movff	sevenSegSM@data+1,fsr2h
   996  0009BC  0E01               	movlw	1
   997  0009BE  6EDF               	movwf	indf2,c
   998                           
   999                           ;SevenSeg.c: 57: break;
  1000  0009C0  D00B               	goto	l151
  1001  0009C2                     l1127:
  1002  0009C2  C013  FFD9         	movff	sevenSegSM@data,fsr2l
  1003  0009C6  C014  FFDA         	movff	sevenSegSM@data+1,fsr2h
  1004  0009CA  50DF               	movf	indf2,w,c
  1005                           
  1006                           ; Switch size 1, requested type "space"
  1007                           ; Number of cases is 2, Range of values is 0 to 1
  1008                           ; switch strategies available:
  1009                           ; Name         Instructions Cycles
  1010                           ; simple_byte            7     4 (average)
  1011                           ;	Chosen strategy is simple_byte
  1012  0009CC  0A00               	xorlw	0	; case 0
  1013  0009CE  B4D8               	btfsc	status,2,c
  1014  0009D0  D737               	goto	l1105
  1015  0009D2  0A01               	xorlw	1	; case 1
  1016  0009D4  B4D8               	btfsc	status,2,c
  1017  0009D6  D76C               	goto	l1113
  1018  0009D8                     l151:
  1019  0009D8  0012               	return	
  1020  0009DA                     __end_of_sevenSegSM:
  1021                           	opt stack 0
  1022                           tblptru	equ	0xFF8
  1023                           tblptrh	equ	0xFF7
  1024                           tblptrl	equ	0xFF6
  1025                           tablat	equ	0xFF5
  1026                           postinc0	equ	0xFEE
  1027                           postdec1	equ	0xFE5
  1028                           fsr1l	equ	0xFE1
  1029                           indf2	equ	0xFDF
  1030                           postinc2	equ	0xFDE
  1031                           postdec2	equ	0xFDD
  1032                           fsr2h	equ	0xFDA
  1033                           fsr2l	equ	0xFD9
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _WriteSPI *****************
  1037 ;; Defined at:
  1038 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_writ.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  data_out        1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  data_out        1   15[COMRAM] unsigned char 
  1043 ;;  TempVar         1   14[COMRAM] unsigned char 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      char 
  1046 ;; Registers used:
  1047 ;;		wreg
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1053 ;;      Params:         0       0       0       0       0       0       0
  1054 ;;      Locals:         2       0       0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0
  1056 ;;      Totals:         2       0       0       0       0       0       0
  1057 ;;Total ram usage:        2 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    3
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_sevenSegSM
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text6
  1068  000C80                     __ptext6:
  1069                           	opt stack 0
  1070  000C80                     _WriteSPI:
  1071                           	opt stack 26
  1072                           
  1073                           ;incstack = 0
  1074                           ;WriteSPI@data_out stored from wreg
  1075  000C80  6E10               	movwf	WriteSPI@data_out,c
  1076  000C82  CFC9 F00F          	movff	4041,WriteSPI@TempVar	;volatile
  1077  000C86  969E               	bcf	3998,3,c	;volatile
  1078  000C88  9EC6               	bcf	4038,7,c	;volatile
  1079  000C8A  C010  FFC9         	movff	WriteSPI@data_out,4041	;volatile
  1080  000C8E  BEC6               	btfsc	4038,7,c	;volatile
  1081  000C90  D002               	goto	l242
  1082  000C92                     l244:
  1083  000C92  A69E               	btfss	3998,3,c	;volatile
  1084  000C94  D7FE               	goto	l244
  1085  000C96                     l242:
  1086  000C96  0012               	return	
  1087  000C98                     __end_of_WriteSPI:
  1088                           	opt stack 0
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           postinc0	equ	0xFEE
  1094                           postdec1	equ	0xFE5
  1095                           fsr1l	equ	0xFE1
  1096                           indf2	equ	0xFDF
  1097                           postinc2	equ	0xFDE
  1098                           postdec2	equ	0xFDD
  1099                           fsr2h	equ	0xFDA
  1100                           fsr2l	equ	0xFD9
  1101                           status	equ	0xFD8
  1102                           
  1103 ;; *************** function _led2SM *****************
  1104 ;; Defined at:
  1105 ;;		line 25 in file "../src/PIC18/Led2.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;  data            2   18[COMRAM] PTR struct Led2Data
  1108 ;;		 -> main@led2Data(7), 
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;		None               void
  1113 ;; Registers used:
  1114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1120 ;;      Params:         2       0       0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0       0       0
  1122 ;;      Temps:         12       0       0       0       0       0       0
  1123 ;;      Totals:        14       0       0       0       0       0       0
  1124 ;;Total ram usage:       14 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    4
  1127 ;; This function calls:
  1128 ;;		_getClock
  1129 ;;		_offLED
  1130 ;;		_onLED
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text7
  1137  00065A                     __ptext7:
  1138                           	opt stack 0
  1139  00065A                     _led2SM:
  1140                           	opt stack 26
  1141                           
  1142                           ;Led2.c: 28: switch(data->state){ case 0:;
  1143                           
  1144                           ;incstack = 0
  1145  00065A  D0D7               	goto	l1097
  1146  00065C                     l1069:
  1147                           
  1148                           ;Led2.c: 29: data->ledStatus = LED2_ON;
  1149  00065C  EE20 F002          	lfsr	2,2
  1150  000660  5013               	movf	led2SM@data,w,c
  1151  000662  26D9               	addwf	fsr2l,f,c
  1152  000664  5014               	movf	led2SM@data+1,w,c
  1153  000666  22DA               	addwfc	fsr2h,f,c
  1154  000668  0E01               	movlw	1
  1155  00066A  6EDF               	movwf	indf2,c
  1156                           
  1157                           ;Led2.c: 30: onLED();
  1158  00066C  EC79  F006         	call	_onLED	;wreg free
  1159                           
  1160                           ;Led2.c: 31: data->state = 31; return; case 31:;
  1161  000670  C013  FFD9         	movff	led2SM@data,fsr2l
  1162  000674  C014  FFDA         	movff	led2SM@data+1,fsr2h
  1163  000678  0E1F               	movlw	31
  1164  00067A  D067               	goto	L3
  1165  00067C                     l1077:
  1166                           
  1167                           ;Led2.c: 34: data->state = 34; return; case 34:;
  1168  00067C  C013  FFD9         	movff	led2SM@data,fsr2l
  1169  000680  C014  FFDA         	movff	led2SM@data+1,fsr2h
  1170  000684  0E22               	movlw	34
  1171  000686  D061               	goto	L3
  1172  000688                     l1081:
  1173  000688  EE20 F003          	lfsr	2,3
  1174  00068C  5013               	movf	led2SM@data,w,c
  1175  00068E  26D9               	addwf	fsr2l,f,c
  1176  000690  5014               	movf	led2SM@data+1,w,c
  1177  000692  22DA               	addwfc	fsr2h,f,c
  1178  000694  CFDE F015          	movff	postinc2,??_led2SM
  1179  000698  CFDE F016          	movff	postinc2,??_led2SM+1
  1180  00069C  CFDE F017          	movff	postinc2,??_led2SM+2
  1181  0006A0  CFDE F018          	movff	postinc2,??_led2SM+3
  1182  0006A4  1E15               	comf	??_led2SM,f,c
  1183  0006A6  1E16               	comf	??_led2SM+1,f,c
  1184  0006A8  1E17               	comf	??_led2SM+2,f,c
  1185  0006AA  1E18               	comf	??_led2SM+3,f,c
  1186  0006AC  2A15               	incf	??_led2SM,f,c
  1187  0006AE  0E00               	movlw	0
  1188  0006B0  2216               	addwfc	??_led2SM+1,f,c
  1189  0006B2  2217               	addwfc	??_led2SM+2,f,c
  1190  0006B4  2218               	addwfc	??_led2SM+3,f,c
  1191  0006B6  EC55  F006         	call	_getClock	;wreg free
  1192  0006BA  C00F  F019         	movff	?_getClock,??_led2SM+4
  1193  0006BE  C010  F01A         	movff	?_getClock+1,??_led2SM+5
  1194  0006C2  C011  F01B         	movff	?_getClock+2,??_led2SM+6
  1195  0006C6  C012  F01C         	movff	?_getClock+3,??_led2SM+7
  1196  0006CA  5015               	movf	??_led2SM,w,c
  1197  0006CC  2419               	addwf	??_led2SM+4,w,c
  1198  0006CE  6E1D               	movwf	(??_led2SM+8)& (0+255),c
  1199  0006D0  5016               	movf	??_led2SM+1,w,c
  1200  0006D2  201A               	addwfc	??_led2SM+5,w,c
  1201  0006D4  6E1E               	movwf	(??_led2SM+9)& (0+255),c
  1202  0006D6  5017               	movf	??_led2SM+2,w,c
  1203  0006D8  201B               	addwfc	??_led2SM+6,w,c
  1204  0006DA  6E1F               	movwf	(??_led2SM+10)& (0+255),c
  1205  0006DC  5018               	movf	??_led2SM+3,w,c
  1206  0006DE  201C               	addwfc	??_led2SM+7,w,c
  1207  0006E0  6E20               	movwf	(??_led2SM+11)& (0+255),c
  1208  0006E2  0EE9               	movlw	233
  1209  0006E4  5C1D               	subwf	??_led2SM+8,w,c
  1210  0006E6  0E01               	movlw	1
  1211  0006E8  581E               	subwfb	??_led2SM+9,w,c
  1212  0006EA  0E00               	movlw	0
  1213  0006EC  581F               	subwfb	??_led2SM+10,w,c
  1214  0006EE  0E00               	movlw	0
  1215  0006F0  5820               	subwfb	??_led2SM+11,w,c
  1216  0006F2  A0D8               	btfss	status,0,c
  1217  0006F4  D7C3               	goto	l1077
  1218                           
  1219                           ;Led2.c: 35: }
  1220                           ;Led2.c: 36: offLED();
  1221  0006F6  EC7B  F006         	call	_offLED	;wreg free
  1222                           
  1223                           ;Led2.c: 37: data->currentClock = getClock();
  1224  0006FA  EC55  F006         	call	_getClock	;wreg free
  1225  0006FE  C00F  F015         	movff	?_getClock,??_led2SM
  1226  000702  C010  F016         	movff	?_getClock+1,??_led2SM+1
  1227  000706  C011  F017         	movff	?_getClock+2,??_led2SM+2
  1228  00070A  C012  F018         	movff	?_getClock+3,??_led2SM+3
  1229  00070E  EE20 F003          	lfsr	2,3
  1230  000712  5013               	movf	led2SM@data,w,c
  1231  000714  26D9               	addwf	fsr2l,f,c
  1232  000716  5014               	movf	led2SM@data+1,w,c
  1233  000718  22DA               	addwfc	fsr2h,f,c
  1234  00071A  C015  FFDE         	movff	??_led2SM,postinc2
  1235  00071E  C016  FFDE         	movff	??_led2SM+1,postinc2
  1236  000722  C017  FFDE         	movff	??_led2SM+2,postinc2
  1237  000726  C018  FFDD         	movff	??_led2SM+3,postdec2
  1238  00072A  06D9               	decf	fsr2l,f,c
  1239  00072C  06D9               	decf	fsr2l,f,c
  1240                           
  1241                           ;Led2.c: 38: data->ledStatus = LED2_OFF;
  1242  00072E  EE20 F002          	lfsr	2,2
  1243  000732  5013               	movf	led2SM@data,w,c
  1244  000734  26D9               	addwf	fsr2l,f,c
  1245  000736  5014               	movf	led2SM@data+1,w,c
  1246  000738  22DA               	addwfc	fsr2h,f,c
  1247  00073A  0E02               	movlw	2
  1248  00073C  6EDF               	movwf	indf2,c
  1249                           
  1250                           ;Led2.c: 40: while(getClock() - data->currentClock <= 488){
  1251  00073E  D009               	goto	l1091
  1252  000740                     l1087:
  1253                           
  1254                           ;Led2.c: 41: data->state = 41; return; case 41:;
  1255  000740  C013  FFD9         	movff	led2SM@data,fsr2l
  1256  000744  C014  FFDA         	movff	led2SM@data+1,fsr2h
  1257  000748  0E29               	movlw	41
  1258  00074A                     L3:
  1259  00074A  6EDE               	movwf	postinc2,c
  1260  00074C  0E00               	movlw	0
  1261  00074E  6EDD               	movwf	postdec2,c
  1262  000750  D075               	goto	l174
  1263  000752                     l1091:
  1264  000752  EE20 F003          	lfsr	2,3
  1265  000756  5013               	movf	led2SM@data,w,c
  1266  000758  26D9               	addwf	fsr2l,f,c
  1267  00075A  5014               	movf	led2SM@data+1,w,c
  1268  00075C  22DA               	addwfc	fsr2h,f,c
  1269  00075E  CFDE F015          	movff	postinc2,??_led2SM
  1270  000762  CFDE F016          	movff	postinc2,??_led2SM+1
  1271  000766  CFDE F017          	movff	postinc2,??_led2SM+2
  1272  00076A  CFDE F018          	movff	postinc2,??_led2SM+3
  1273  00076E  1E15               	comf	??_led2SM,f,c
  1274  000770  1E16               	comf	??_led2SM+1,f,c
  1275  000772  1E17               	comf	??_led2SM+2,f,c
  1276  000774  1E18               	comf	??_led2SM+3,f,c
  1277  000776  2A15               	incf	??_led2SM,f,c
  1278  000778  0E00               	movlw	0
  1279  00077A  2216               	addwfc	??_led2SM+1,f,c
  1280  00077C  2217               	addwfc	??_led2SM+2,f,c
  1281  00077E  2218               	addwfc	??_led2SM+3,f,c
  1282  000780  EC55  F006         	call	_getClock	;wreg free
  1283  000784  C00F  F019         	movff	?_getClock,??_led2SM+4
  1284  000788  C010  F01A         	movff	?_getClock+1,??_led2SM+5
  1285  00078C  C011  F01B         	movff	?_getClock+2,??_led2SM+6
  1286  000790  C012  F01C         	movff	?_getClock+3,??_led2SM+7
  1287  000794  5015               	movf	??_led2SM,w,c
  1288  000796  2419               	addwf	??_led2SM+4,w,c
  1289  000798  6E1D               	movwf	(??_led2SM+8)& (0+255),c
  1290  00079A  5016               	movf	??_led2SM+1,w,c
  1291  00079C  201A               	addwfc	??_led2SM+5,w,c
  1292  00079E  6E1E               	movwf	(??_led2SM+9)& (0+255),c
  1293  0007A0  5017               	movf	??_led2SM+2,w,c
  1294  0007A2  201B               	addwfc	??_led2SM+6,w,c
  1295  0007A4  6E1F               	movwf	(??_led2SM+10)& (0+255),c
  1296  0007A6  5018               	movf	??_led2SM+3,w,c
  1297  0007A8  201C               	addwfc	??_led2SM+7,w,c
  1298  0007AA  6E20               	movwf	(??_led2SM+11)& (0+255),c
  1299  0007AC  0EE9               	movlw	233
  1300  0007AE  5C1D               	subwf	??_led2SM+8,w,c
  1301  0007B0  0E01               	movlw	1
  1302  0007B2  581E               	subwfb	??_led2SM+9,w,c
  1303  0007B4  0E00               	movlw	0
  1304  0007B6  581F               	subwfb	??_led2SM+10,w,c
  1305  0007B8  0E00               	movlw	0
  1306  0007BA  5820               	subwfb	??_led2SM+11,w,c
  1307  0007BC  A0D8               	btfss	status,0,c
  1308  0007BE  D7C0               	goto	l1087
  1309                           
  1310                           ;Led2.c: 42: }
  1311                           ;Led2.c: 43: onLED();
  1312  0007C0  EC79  F006         	call	_onLED	;wreg free
  1313                           
  1314                           ;Led2.c: 44: data->currentClock = getClock();
  1315  0007C4  EC55  F006         	call	_getClock	;wreg free
  1316  0007C8  C00F  F015         	movff	?_getClock,??_led2SM
  1317  0007CC  C010  F016         	movff	?_getClock+1,??_led2SM+1
  1318  0007D0  C011  F017         	movff	?_getClock+2,??_led2SM+2
  1319  0007D4  C012  F018         	movff	?_getClock+3,??_led2SM+3
  1320  0007D8  EE20 F003          	lfsr	2,3
  1321  0007DC  5013               	movf	led2SM@data,w,c
  1322  0007DE  26D9               	addwf	fsr2l,f,c
  1323  0007E0  5014               	movf	led2SM@data+1,w,c
  1324  0007E2  22DA               	addwfc	fsr2h,f,c
  1325  0007E4  C015  FFDE         	movff	??_led2SM,postinc2
  1326  0007E8  C016  FFDE         	movff	??_led2SM+1,postinc2
  1327  0007EC  C017  FFDE         	movff	??_led2SM+2,postinc2
  1328  0007F0  C018  FFDD         	movff	??_led2SM+3,postdec2
  1329  0007F4  06D9               	decf	fsr2l,f,c
  1330  0007F6  06D9               	decf	fsr2l,f,c
  1331                           
  1332                           ;Led2.c: 45: data->ledStatus = LED2_ON;
  1333  0007F8  EE20 F002          	lfsr	2,2
  1334  0007FC  5013               	movf	led2SM@data,w,c
  1335  0007FE  26D9               	addwf	fsr2l,f,c
  1336  000800  5014               	movf	led2SM@data+1,w,c
  1337  000802  22DA               	addwfc	fsr2h,f,c
  1338  000804  0E01               	movlw	1
  1339  000806  6EDF               	movwf	indf2,c
  1340  000808  D73F               	goto	l1081
  1341  00080A                     l1097:
  1342  00080A  C013  FFD9         	movff	led2SM@data,fsr2l
  1343  00080E  C014  FFDA         	movff	led2SM@data+1,fsr2h
  1344  000812  CFDE F015          	movff	postinc2,??_led2SM
  1345  000816  CFDD F016          	movff	postdec2,??_led2SM+1
  1346                           
  1347                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1348                           ; Switch size 1, requested type "space"
  1349                           ; Number of cases is 1, Range of values is 0 to 0
  1350                           ; switch strategies available:
  1351                           ; Name         Instructions Cycles
  1352                           ; simple_byte            4     3 (average)
  1353                           ;	Chosen strategy is simple_byte
  1354  00081A  5016               	movf	??_led2SM+1,w,c
  1355  00081C  0A00               	xorlw	0	; case 0
  1356  00081E  A4D8               	btfss	status,2,c
  1357  000820  D00D               	goto	l174
  1358                           
  1359                           ; Switch size 1, requested type "space"
  1360                           ; Number of cases is 4, Range of values is 0 to 41
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte           13     7 (average)
  1364                           ;	Chosen strategy is simple_byte
  1365  000822  5015               	movf	??_led2SM,w,c
  1366  000824  0A00               	xorlw	0	; case 0
  1367  000826  B4D8               	btfsc	status,2,c
  1368  000828  D719               	goto	l1069
  1369  00082A  0A1F               	xorlw	31	; case 31
  1370  00082C  B4D8               	btfsc	status,2,c
  1371  00082E  D72C               	goto	l1081
  1372  000830  0A3D               	xorlw	61	; case 34
  1373  000832  B4D8               	btfsc	status,2,c
  1374  000834  D729               	goto	l1081
  1375  000836  0A0B               	xorlw	11	; case 41
  1376  000838  B4D8               	btfsc	status,2,c
  1377  00083A  D78B               	goto	l1091
  1378  00083C                     l174:
  1379  00083C  0012               	return	
  1380  00083E                     __end_of_led2SM:
  1381                           	opt stack 0
  1382                           tblptru	equ	0xFF8
  1383                           tblptrh	equ	0xFF7
  1384                           tblptrl	equ	0xFF6
  1385                           tablat	equ	0xFF5
  1386                           postinc0	equ	0xFEE
  1387                           postdec1	equ	0xFE5
  1388                           fsr1l	equ	0xFE1
  1389                           indf2	equ	0xFDF
  1390                           postinc2	equ	0xFDE
  1391                           postdec2	equ	0xFDD
  1392                           fsr2h	equ	0xFDA
  1393                           fsr2l	equ	0xFD9
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _onLED *****************
  1397 ;; Defined at:
  1398 ;;		line 19 in file "../src/PIC18/Blinky.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;		None               void
  1405 ;; Registers used:
  1406 ;;		None
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1412 ;;      Params:         0       0       0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0
  1415 ;;      Totals:         0       0       0       0       0       0       0
  1416 ;;Total ram usage:        0 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    3
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_led2SM
  1423 ;;		_LEDStateMachine
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text8
  1428  000CF2                     __ptext8:
  1429                           	opt stack 0
  1430  000CF2                     _onLED:
  1431                           	opt stack 26
  1432                           
  1433                           ;Blinky.c: 20: PORTBbits.RB0 = 1;
  1434                           
  1435                           ;incstack = 0
  1436  000CF2  8081               	bsf	3969,0,c	;volatile
  1437  000CF4  0012               	return	
  1438  000CF6                     __end_of_onLED:
  1439                           	opt stack 0
  1440                           tblptru	equ	0xFF8
  1441                           tblptrh	equ	0xFF7
  1442                           tblptrl	equ	0xFF6
  1443                           tablat	equ	0xFF5
  1444                           postinc0	equ	0xFEE
  1445                           postdec1	equ	0xFE5
  1446                           fsr1l	equ	0xFE1
  1447                           indf2	equ	0xFDF
  1448                           postinc2	equ	0xFDE
  1449                           postdec2	equ	0xFDD
  1450                           fsr2h	equ	0xFDA
  1451                           fsr2l	equ	0xFD9
  1452                           status	equ	0xFD8
  1453                           
  1454 ;; *************** function _offLED *****************
  1455 ;; Defined at:
  1456 ;;		line 23 in file "../src/PIC18/Blinky.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;		None               void
  1463 ;; Registers used:
  1464 ;;		None
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1470 ;;      Params:         0       0       0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0
  1473 ;;      Totals:         0       0       0       0       0       0       0
  1474 ;;Total ram usage:        0 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    3
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_led2SM
  1481 ;;		_LEDStateMachine
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text9
  1486  000CF6                     __ptext9:
  1487                           	opt stack 0
  1488  000CF6                     _offLED:
  1489                           	opt stack 26
  1490                           
  1491                           ;Blinky.c: 24: PORTBbits.RB0 = 0;
  1492                           
  1493                           ;incstack = 0
  1494  000CF6  9081               	bcf	3969,0,c	;volatile
  1495  000CF8  0012               	return	
  1496  000CFA                     __end_of_offLED:
  1497                           	opt stack 0
  1498                           tblptru	equ	0xFF8
  1499                           tblptrh	equ	0xFF7
  1500                           tblptrl	equ	0xFF6
  1501                           tablat	equ	0xFF5
  1502                           postinc0	equ	0xFEE
  1503                           postdec1	equ	0xFE5
  1504                           fsr1l	equ	0xFE1
  1505                           indf2	equ	0xFDF
  1506                           postinc2	equ	0xFDE
  1507                           postdec2	equ	0xFDD
  1508                           fsr2h	equ	0xFDA
  1509                           fsr2l	equ	0xFD9
  1510                           status	equ	0xFD8
  1511                           
  1512 ;; *************** function _getClock *****************
  1513 ;; Defined at:
  1514 ;;		line 21 in file "../src/PIC18/Clock.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  4   14[COMRAM] unsigned long 
  1521 ;; Registers used:
  1522 ;;		None
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1528 ;;      Params:         4       0       0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0
  1531 ;;      Totals:         4       0       0       0       0       0       0
  1532 ;;Total ram usage:        4 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    3
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_sevenSegSM
  1539 ;;		_led2SM
  1540 ;;		_LEDStateMachine
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text10
  1545  000CAA                     __ptext10:
  1546                           	opt stack 0
  1547  000CAA                     _getClock:
  1548                           	opt stack 26
  1549                           
  1550                           ;Clock.c: 26: return clock;
  1551                           
  1552                           ;incstack = 0
  1553  000CAA  C041  F00F         	movff	_clock,?_getClock	;volatile
  1554  000CAE  C042  F010         	movff	_clock+1,?_getClock+1	;volatile
  1555  000CB2  C043  F011         	movff	_clock+2,?_getClock+2	;volatile
  1556  000CB6  C044  F012         	movff	_clock+3,?_getClock+3	;volatile
  1557  000CBA  0012               	return	
  1558  000CBC                     __end_of_getClock:
  1559                           	opt stack 0
  1560                           tblptru	equ	0xFF8
  1561                           tblptrh	equ	0xFF7
  1562                           tblptrl	equ	0xFF6
  1563                           tablat	equ	0xFF5
  1564                           postinc0	equ	0xFEE
  1565                           postdec1	equ	0xFE5
  1566                           fsr1l	equ	0xFE1
  1567                           indf2	equ	0xFDF
  1568                           postinc2	equ	0xFDE
  1569                           postdec2	equ	0xFDD
  1570                           fsr2h	equ	0xFDA
  1571                           fsr2l	equ	0xFD9
  1572                           status	equ	0xFD8
  1573                           
  1574 ;; *************** function _initUartLoopback *****************
  1575 ;; Defined at:
  1576 ;;		line 4 in file "../src/PIC18/UARTLoopback.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  data            2   14[COMRAM] PTR struct LoopbackData
  1579 ;;		 -> main@loopbackData(2), 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;		None               void
  1584 ;; Registers used:
  1585 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1591 ;;      Params:         2       0       0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0
  1594 ;;      Totals:         2       0       0       0       0       0       0
  1595 ;;Total ram usage:        2 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    3
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_main
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text11
  1606  000C46                     __ptext11:
  1607                           	opt stack 0
  1608  000C46                     _initUartLoopback:
  1609                           	opt stack 27
  1610                           
  1611                           ;UARTLoopback.c: 5: data->state = WAIT_DATA;
  1612                           
  1613                           ;incstack = 0
  1614  000C46  C00F  FFD9         	movff	initUartLoopback@data,fsr2l
  1615  000C4A  C010  FFDA         	movff	initUartLoopback@data+1,fsr2h
  1616  000C4E  0E00               	movlw	0
  1617  000C50  6EDF               	movwf	indf2,c
  1618                           
  1619                           ;UARTLoopback.c: 6: data->dataByte = 0;
  1620  000C52  EE20 F001          	lfsr	2,1
  1621  000C56  500F               	movf	initUartLoopback@data,w,c
  1622  000C58  26D9               	addwf	fsr2l,f,c
  1623  000C5A  5010               	movf	initUartLoopback@data+1,w,c
  1624  000C5C  22DA               	addwfc	fsr2h,f,c
  1625  000C5E  0E00               	movlw	0
  1626  000C60  6EDF               	movwf	indf2,c
  1627  000C62  0012               	return	
  1628  000C64                     __end_of_initUartLoopback:
  1629                           	opt stack 0
  1630                           tblptru	equ	0xFF8
  1631                           tblptrh	equ	0xFF7
  1632                           tblptrl	equ	0xFF6
  1633                           tablat	equ	0xFF5
  1634                           postinc0	equ	0xFEE
  1635                           postdec1	equ	0xFE5
  1636                           fsr1l	equ	0xFE1
  1637                           indf2	equ	0xFDF
  1638                           postinc2	equ	0xFDE
  1639                           postdec2	equ	0xFDD
  1640                           fsr2h	equ	0xFDA
  1641                           fsr2l	equ	0xFD9
  1642                           status	equ	0xFD8
  1643                           
  1644 ;; *************** function _initSevenSeg *****************
  1645 ;; Defined at:
  1646 ;;		line 25 in file "../src/PIC18/SevenSeg.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  data            2   14[COMRAM] PTR struct SevenSegData
  1649 ;;		 -> main@sevenSegData(7), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;		None               void
  1654 ;; Registers used:
  1655 ;;		wreg, fsr2l, fsr2h
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1661 ;;      Params:         2       0       0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    3
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text12
  1676  000CDE                     __ptext12:
  1677                           	opt stack 0
  1678  000CDE                     _initSevenSeg:
  1679                           	opt stack 27
  1680                           
  1681                           ;SevenSeg.c: 26: TRISCbits.TRISC2 = 0;
  1682                           
  1683                           ;incstack = 0
  1684  000CDE  9494               	bcf	3988,2,c	;volatile
  1685                           
  1686                           ;SevenSeg.c: 27: data->state = _7Seg_INIT;
  1687  000CE0  C00F  FFD9         	movff	initSevenSeg@data,fsr2l
  1688  000CE4  C010  FFDA         	movff	initSevenSeg@data+1,fsr2h
  1689  000CE8  0E00               	movlw	0
  1690  000CEA  6EDF               	movwf	indf2,c
  1691  000CEC  0012               	return	
  1692  000CEE                     __end_of_initSevenSeg:
  1693                           	opt stack 0
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           postinc0	equ	0xFEE
  1699                           postdec1	equ	0xFE5
  1700                           fsr1l	equ	0xFE1
  1701                           indf2	equ	0xFDF
  1702                           postinc2	equ	0xFDE
  1703                           postdec2	equ	0xFDD
  1704                           fsr2h	equ	0xFDA
  1705                           fsr2l	equ	0xFD9
  1706                           status	equ	0xFD8
  1707                           
  1708 ;; *************** function _initClock *****************
  1709 ;; Defined at:
  1710 ;;		line 6 in file "../src/PIC18/Clock.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;		None               void
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1724 ;;      Params:         0       0       0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    4
  1731 ;; This function calls:
  1732 ;;		_OpenTimer0
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text13
  1739  000C64                     __ptext13:
  1740                           	opt stack 0
  1741  000C64                     _initClock:
  1742                           	opt stack 26
  1743                           
  1744                           ;Clock.c: 7: clock = 0;
  1745                           
  1746                           ;incstack = 0
  1747  000C64  0E00               	movlw	0
  1748  000C66  6E41               	movwf	_clock,c	;volatile
  1749  000C68  0E00               	movlw	0
  1750  000C6A  6E42               	movwf	_clock+1,c	;volatile
  1751  000C6C  0E00               	movlw	0
  1752  000C6E  6E43               	movwf	_clock+2,c	;volatile
  1753  000C70  0E00               	movlw	0
  1754  000C72  6E44               	movwf	_clock+3,c	;volatile
  1755                           
  1756                           ;Clock.c: 8: (INTCONbits.GIE = 1);
  1757  000C74  8EF2               	bsf	intcon,7,c	;volatile
  1758                           
  1759                           ;Clock.c: 9: OpenTimer0( 0b11111111 &
  1760                           ;Clock.c: 10: 0b11111111 &
  1761                           ;Clock.c: 11: 0b11011111 &
  1762                           ;Clock.c: 12: 0b11110010 );
  1763  000C76  0ED2               	movlw	210
  1764  000C78  EC04  F006         	call	_OpenTimer0
  1765                           
  1766                           ;Clock.c: 14: INTCONbits.TMR0IF = 0;
  1767  000C7C  94F2               	bcf	intcon,2,c	;volatile
  1768  000C7E  0012               	return	
  1769  000C80                     __end_of_initClock:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           intcon	equ	0xFF2
  1776                           postinc0	equ	0xFEE
  1777                           postdec1	equ	0xFE5
  1778                           fsr1l	equ	0xFE1
  1779                           indf2	equ	0xFDF
  1780                           postinc2	equ	0xFDE
  1781                           postdec2	equ	0xFDD
  1782                           fsr2h	equ	0xFDA
  1783                           fsr2l	equ	0xFD9
  1784                           status	equ	0xFD8
  1785                           
  1786 ;; *************** function _OpenTimer0 *****************
  1787 ;; Defined at:
  1788 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  config          1    wreg     unsigned char 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  config          1   14[COMRAM] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;		None               void
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1802 ;;      Params:         0       0       0       0       0       0       0
  1803 ;;      Locals:         1       0       0       0       0       0       0
  1804 ;;      Temps:          0       0       0       0       0       0       0
  1805 ;;      Totals:         1       0       0       0       0       0       0
  1806 ;;Total ram usage:        1 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    3
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_initClock
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text14
  1817  000C08                     __ptext14:
  1818                           	opt stack 0
  1819  000C08                     _OpenTimer0:
  1820                           	opt stack 26
  1821                           
  1822                           ;incstack = 0
  1823                           ;OpenTimer0@config stored from wreg
  1824  000C08  6E0F               	movwf	OpenTimer0@config,c
  1825  000C0A  500F               	movf	OpenTimer0@config,w,c
  1826  000C0C  0B7F               	andlw	127
  1827  000C0E  6ED5               	movwf	4053,c	;volatile
  1828  000C10  0E00               	movlw	0
  1829  000C12  6ED7               	movwf	4055,c	;volatile
  1830  000C14  0E00               	movlw	0
  1831  000C16  6ED6               	movwf	4054,c	;volatile
  1832  000C18  94F2               	bcf	intcon,2,c	;volatile
  1833  000C1A  AE0F               	btfss	OpenTimer0@config,7,c
  1834  000C1C  D002               	goto	l259
  1835  000C1E  8AF2               	bsf	intcon,5,c	;volatile
  1836  000C20  D001               	goto	l260
  1837  000C22                     l259:
  1838  000C22  9AF2               	bcf	intcon,5,c	;volatile
  1839  000C24                     l260:
  1840  000C24  8ED5               	bsf	4053,7,c	;volatile
  1841  000C26  0012               	return	
  1842  000C28                     __end_of_OpenTimer0:
  1843                           	opt stack 0
  1844                           tblptru	equ	0xFF8
  1845                           tblptrh	equ	0xFF7
  1846                           tblptrl	equ	0xFF6
  1847                           tablat	equ	0xFF5
  1848                           intcon	equ	0xFF2
  1849                           postinc0	equ	0xFEE
  1850                           postdec1	equ	0xFE5
  1851                           fsr1l	equ	0xFE1
  1852                           indf2	equ	0xFDF
  1853                           postinc2	equ	0xFDE
  1854                           postdec2	equ	0xFDD
  1855                           fsr2h	equ	0xFDA
  1856                           fsr2l	equ	0xFD9
  1857                           status	equ	0xFD8
  1858                           
  1859 ;; *************** function _configureLED *****************
  1860 ;; Defined at:
  1861 ;;		line 15 in file "../src/PIC18/Blinky.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;		None               void
  1868 ;; Registers used:
  1869 ;;		None
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1875 ;;      Params:         0       0       0       0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0
  1878 ;;      Totals:         0       0       0       0       0       0       0
  1879 ;;Total ram usage:        0 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    3
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;;		_initLEDStateMachine
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text15
  1891  000CFA                     __ptext15:
  1892                           	opt stack 0
  1893  000CFA                     _configureLED:
  1894                           	opt stack 27
  1895                           
  1896                           ;Blinky.c: 16: TRISBbits.TRISB0 = 0;
  1897                           
  1898                           ;incstack = 0
  1899  000CFA  9093               	bcf	3987,0,c	;volatile
  1900  000CFC  0012               	return	
  1901  000CFE                     __end_of_configureLED:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           intcon	equ	0xFF2
  1908                           postinc0	equ	0xFEE
  1909                           postdec1	equ	0xFE5
  1910                           fsr1l	equ	0xFE1
  1911                           indf2	equ	0xFDF
  1912                           postinc2	equ	0xFDE
  1913                           postdec2	equ	0xFDD
  1914                           fsr2h	equ	0xFDA
  1915                           fsr2l	equ	0xFD9
  1916                           status	equ	0xFD8
  1917                           
  1918 ;; *************** function _OpenUSART *****************
  1919 ;; Defined at:
  1920 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  config          1    wreg     unsigned char 
  1923 ;;  spbrg           2   14[COMRAM] unsigned int 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  config          1   19[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;		None               void
  1928 ;; Registers used:
  1929 ;;		wreg, status,2
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1935 ;;      Params:         2       0       0       0       0       0       0
  1936 ;;      Locals:         1       0       0       0       0       0       0
  1937 ;;      Temps:          3       0       0       0       0       0       0
  1938 ;;      Totals:         6       0       0       0       0       0       0
  1939 ;;Total ram usage:        6 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    3
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           	psect	text16
  1950  000AB2                     __ptext16:
  1951                           	opt stack 0
  1952  000AB2                     _OpenUSART:
  1953                           	opt stack 27
  1954                           
  1955                           ;incstack = 0
  1956                           ;OpenUSART@config stored from wreg
  1957  000AB2  6E14               	movwf	OpenUSART@config,c
  1958  000AB4  0E00               	movlw	0
  1959  000AB6  6EAC               	movwf	4012,c	;volatile
  1960  000AB8  0E00               	movlw	0
  1961  000ABA  6EAB               	movwf	4011,c	;volatile
  1962  000ABC  B014               	btfsc	OpenUSART@config,0,c
  1963  000ABE  88AC               	bsf	4012,4,c	;volatile
  1964  000AC0  A214               	btfss	OpenUSART@config,1,c
  1965  000AC2  D002               	goto	l973
  1966  000AC4  8CAC               	bsf	4012,6,c	;volatile
  1967  000AC6  8CAB               	bsf	4011,6,c	;volatile
  1968  000AC8                     l973:
  1969  000AC8  B414               	btfsc	OpenUSART@config,2,c
  1970  000ACA  8EAC               	bsf	4012,7,c	;volatile
  1971  000ACC  A614               	btfss	OpenUSART@config,3,c
  1972  000ACE  D002               	goto	l285
  1973  000AD0  88AB               	bsf	4011,4,c	;volatile
  1974  000AD2  D001               	goto	l981
  1975  000AD4                     l285:
  1976  000AD4  8AAB               	bsf	4011,5,c	;volatile
  1977  000AD6                     l981:
  1978  000AD6  B814               	btfsc	OpenUSART@config,4,c
  1979  000AD8  84AC               	bsf	4012,2,c	;volatile
  1980  000ADA  989E               	bcf	3998,4,c	;volatile
  1981  000ADC  BA14               	btfsc	OpenUSART@config,5,c
  1982  000ADE  86AB               	bsf	4011,3,c	;volatile
  1983  000AE0  AC14               	btfss	OpenUSART@config,6,c
  1984  000AE2  D002               	goto	l289
  1985  000AE4  8A9D               	bsf	3997,5,c	;volatile
  1986  000AE6  D001               	goto	l290
  1987  000AE8                     l289:
  1988  000AE8  9A9D               	bcf	3997,5,c	;volatile
  1989  000AEA                     l290:
  1990  000AEA  9A9E               	bcf	3998,5,c	;volatile
  1991  000AEC  AE14               	btfss	OpenUSART@config,7,c
  1992  000AEE  D002               	goto	l291
  1993  000AF0  889D               	bsf	3997,4,c	;volatile
  1994  000AF2  D001               	goto	l292
  1995  000AF4                     l291:
  1996  000AF4  989D               	bcf	3997,4,c	;volatile
  1997  000AF6                     l292:
  1998  000AF6  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1999  000AFA  C010  F011         	movff	OpenUSART@spbrg+1,??_OpenUSART
  2000  000AFE  C011  F012         	movff	??_OpenUSART,??_OpenUSART+1
  2001  000B02  6A13               	clrf	(??_OpenUSART+2)& (0+255),c
  2002  000B04  5012               	movf	??_OpenUSART+1,w,c
  2003  000B06  6EB0               	movwf	4016,c	;volatile
  2004  000B08  8AAC               	bsf	4012,5,c	;volatile
  2005  000B0A  8EAB               	bsf	4011,7,c	;volatile
  2006  000B0C  9C94               	bcf	3988,6,c	;volatile
  2007  000B0E  8E94               	bsf	3988,7,c	;volatile
  2008  000B10  B8AC               	btfsc	4012,4,c	;volatile
  2009  000B12  BEAC               	btfsc	4012,7,c	;volatile
  2010  000B14  D001               	goto	l294
  2011  000B16  8C94               	bsf	3988,6,c	;volatile
  2012  000B18                     l294:
  2013  000B18  0012               	return	
  2014  000B1A                     __end_of_OpenUSART:
  2015                           	opt stack 0
  2016                           tblptru	equ	0xFF8
  2017                           tblptrh	equ	0xFF7
  2018                           tblptrl	equ	0xFF6
  2019                           tablat	equ	0xFF5
  2020                           intcon	equ	0xFF2
  2021                           postinc0	equ	0xFEE
  2022                           postdec1	equ	0xFE5
  2023                           fsr1l	equ	0xFE1
  2024                           indf2	equ	0xFDF
  2025                           postinc2	equ	0xFDE
  2026                           postdec2	equ	0xFDD
  2027                           fsr2h	equ	0xFDA
  2028                           fsr2l	equ	0xFD9
  2029                           status	equ	0xFD8
  2030                           
  2031 ;; *************** function _OpenSPI *****************
  2032 ;; Defined at:
  2033 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_open.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  sync_mode       1    wreg     unsigned char 
  2036 ;;  bus_mode        1   14[COMRAM] unsigned char 
  2037 ;;  smp_phase       1   15[COMRAM] unsigned char 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  sync_mode       1   16[COMRAM] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;		None               void
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2049 ;;      Params:         2       0       0       0       0       0       0
  2050 ;;      Locals:         1       0       0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0       0       0
  2052 ;;      Totals:         3       0       0       0       0       0       0
  2053 ;;Total ram usage:        3 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    3
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           	psect	text17
  2064  000B7A                     __ptext17:
  2065                           	opt stack 0
  2066  000B7A                     _OpenSPI:
  2067                           	opt stack 27
  2068                           
  2069                           ;incstack = 0
  2070                           ;OpenSPI@sync_mode stored from wreg
  2071  000B7A  6E11               	movwf	OpenSPI@sync_mode,c
  2072  000B7C  0E3F               	movlw	63
  2073  000B7E  16C7               	andwf	4039,f,c	;volatile
  2074  000B80  0E00               	movlw	0
  2075  000B82  6EC6               	movwf	4038,c	;volatile
  2076  000B84  5011               	movf	OpenSPI@sync_mode,w,c
  2077  000B86  12C6               	iorwf	4038,f,c	;volatile
  2078  000B88  5010               	movf	OpenSPI@smp_phase,w,c
  2079  000B8A  12C7               	iorwf	4039,f,c	;volatile
  2080  000B8C  D005               	goto	l1023
  2081  000B8E                     l220:
  2082  000B8E  8CC7               	bsf	4039,6,c	;volatile
  2083  000B90  D015               	goto	l1027
  2084  000B92                     l222:
  2085  000B92  8CC7               	bsf	4039,6,c	;volatile
  2086  000B94                     l223:
  2087  000B94  88C6               	bsf	4038,4,c	;volatile
  2088  000B96  D012               	goto	l1027
  2089  000B98                     l1023:
  2090  000B98  500F               	movf	OpenSPI@bus_mode,w,c
  2091                           
  2092                           ; Switch size 1, requested type "space"
  2093                           ; Number of cases is 3, Range of values is 0 to 3
  2094                           ; switch strategies available:
  2095                           ; Name         Instructions Cycles
  2096                           ; simple_byte           10     6 (average)
  2097                           ;	Chosen strategy is simple_byte
  2098  000B9A  0A00               	xorlw	0	; case 0
  2099  000B9C  B4D8               	btfsc	status,2,c
  2100  000B9E  D7F7               	goto	l220
  2101  000BA0  0A02               	xorlw	2	; case 2
  2102  000BA2  B4D8               	btfsc	status,2,c
  2103  000BA4  D7F6               	goto	l222
  2104  000BA6  0A01               	xorlw	1	; case 3
  2105  000BA8  B4D8               	btfsc	status,2,c
  2106  000BAA  D7F4               	goto	l223
  2107  000BAC  D007               	goto	l1027
  2108  000BAE                     l226:
  2109  000BAE  8694               	bsf	3988,3,c	;volatile
  2110  000BB0  8A92               	bsf	3986,5,c	;volatile
  2111  000BB2  D00C               	goto	l227
  2112  000BB4                     l228:
  2113  000BB4  8694               	bsf	3988,3,c	;volatile
  2114  000BB6  D00A               	goto	l227
  2115  000BB8                     l229:
  2116  000BB8  9694               	bcf	3988,3,c	;volatile
  2117  000BBA  D008               	goto	l227
  2118  000BBC                     l1027:
  2119  000BBC  5011               	movf	OpenSPI@sync_mode,w,c
  2120                           
  2121                           ; Switch size 1, requested type "space"
  2122                           ; Number of cases is 2, Range of values is 4 to 5
  2123                           ; switch strategies available:
  2124                           ; Name         Instructions Cycles
  2125                           ; simple_byte            7     4 (average)
  2126                           ;	Chosen strategy is simple_byte
  2127  000BBE  0A04               	xorlw	4	; case 4
  2128  000BC0  B4D8               	btfsc	status,2,c
  2129  000BC2  D7F5               	goto	l226
  2130  000BC4  0A01               	xorlw	1	; case 5
  2131  000BC6  B4D8               	btfsc	status,2,c
  2132  000BC8  D7F5               	goto	l228
  2133  000BCA  D7F6               	goto	l229
  2134  000BCC                     l227:
  2135  000BCC  8894               	bsf	3988,4,c	;volatile
  2136  000BCE  9A94               	bcf	3988,5,c	;volatile
  2137  000BD0  8AC6               	bsf	4038,5,c	;volatile
  2138  000BD2  0012               	return	
  2139  000BD4                     __end_of_OpenSPI:
  2140                           	opt stack 0
  2141                           tblptru	equ	0xFF8
  2142                           tblptrh	equ	0xFF7
  2143                           tblptrl	equ	0xFF6
  2144                           tablat	equ	0xFF5
  2145                           intcon	equ	0xFF2
  2146                           postinc0	equ	0xFEE
  2147                           postdec1	equ	0xFE5
  2148                           fsr1l	equ	0xFE1
  2149                           indf2	equ	0xFDF
  2150                           postinc2	equ	0xFDE
  2151                           postdec2	equ	0xFDD
  2152                           fsr2h	equ	0xFDA
  2153                           fsr2l	equ	0xFD9
  2154                           status	equ	0xFD8
  2155                           
  2156 ;; *************** function _interruptSR *****************
  2157 ;; Defined at:
  2158 ;;		line 4 in file "../src/PIC18/Interrupt.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;		None               void
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2172 ;;      Params:         0       0       0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0
  2174 ;;      Temps:         14       0       0       0       0       0       0
  2175 ;;      Totals:        14       0       0       0       0       0       0
  2176 ;;Total ram usage:       14 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:    2
  2179 ;; This function calls:
  2180 ;;		_timer0isr
  2181 ;; This function is called by:
  2182 ;;		Interrupt level 2
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	intcode
  2187  000008                     __pintcode:
  2188                           	opt stack 0
  2189  000008                     _interruptSR:
  2190                           	opt stack 26
  2191                           
  2192                           ;incstack = 0
  2193  000008  CFFA F001          	movff	pclath,??_interruptSR
  2194  00000C  CFFB F002          	movff	pclatu,??_interruptSR+1
  2195  000010  CFE9 F003          	movff	fsr0l,??_interruptSR+2
  2196  000014  ED23  F005         	call	int_func,f	;refresh shadow registers
  2197                           pclatu	equ	0xFFB
  2198                           pclath	equ	0xFFA
  2199                           tblptru	equ	0xFF8
  2200                           tblptrh	equ	0xFF7
  2201                           tblptrl	equ	0xFF6
  2202                           tablat	equ	0xFF5
  2203                           intcon	equ	0xFF2
  2204                           postinc0	equ	0xFEE
  2205                           fsr0l	equ	0xFE9
  2206                           postdec1	equ	0xFE5
  2207                           fsr1l	equ	0xFE1
  2208                           indf2	equ	0xFDF
  2209                           postinc2	equ	0xFDE
  2210                           postdec2	equ	0xFDD
  2211                           fsr2h	equ	0xFDA
  2212                           fsr2l	equ	0xFD9
  2213                           status	equ	0xFD8
  2214                           
  2215                           	psect	intcode_body
  2216  000A46                     __pintcode_body:
  2217                           	opt stack 26
  2218  000A46                     int_func:
  2219                           	opt stack 26
  2220  000A46  0006               	pop		; remove dummy address from shadow register refresh
  2221  000A48  CFEA F004          	movff	fsr0h,??_interruptSR+3
  2222  000A4C  CFE1 F005          	movff	fsr1l,??_interruptSR+4
  2223  000A50  CFE2 F006          	movff	fsr1h,??_interruptSR+5
  2224  000A54  CFD9 F007          	movff	fsr2l,??_interruptSR+6
  2225  000A58  CFDA F008          	movff	fsr2h,??_interruptSR+7
  2226  000A5C  CFF3 F009          	movff	prodl,??_interruptSR+8
  2227  000A60  CFF4 F00A          	movff	prodh,??_interruptSR+9
  2228  000A64  CFF6 F00B          	movff	tblptrl,??_interruptSR+10
  2229  000A68  CFF7 F00C          	movff	tblptrh,??_interruptSR+11
  2230  000A6C  CFF8 F00D          	movff	tblptru,??_interruptSR+12
  2231  000A70  CFF5 F00E          	movff	tablat,??_interruptSR+13
  2232                           
  2233                           ;Interrupt.c: 5: timer0isr();
  2234  000A74  EC5E  F006         	call	_timer0isr	;wreg free
  2235  000A78  C00E  FFF5         	movff	??_interruptSR+13,tablat
  2236  000A7C  C00D  FFF8         	movff	??_interruptSR+12,tblptru
  2237  000A80  C00C  FFF7         	movff	??_interruptSR+11,tblptrh
  2238  000A84  C00B  FFF6         	movff	??_interruptSR+10,tblptrl
  2239  000A88  C00A  FFF4         	movff	??_interruptSR+9,prodh
  2240  000A8C  C009  FFF3         	movff	??_interruptSR+8,prodl
  2241  000A90  C008  FFDA         	movff	??_interruptSR+7,fsr2h
  2242  000A94  C007  FFD9         	movff	??_interruptSR+6,fsr2l
  2243  000A98  C006  FFE2         	movff	??_interruptSR+5,fsr1h
  2244  000A9C  C005  FFE1         	movff	??_interruptSR+4,fsr1l
  2245  000AA0  C004  FFEA         	movff	??_interruptSR+3,fsr0h
  2246  000AA4  C003  FFE9         	movff	??_interruptSR+2,fsr0l
  2247  000AA8  C002  FFFB         	movff	??_interruptSR+1,pclatu
  2248  000AAC  C001  FFFA         	movff	??_interruptSR,pclath
  2249  000AB0  0011               	retfie		f
  2250  000AB2                     __end_of_interruptSR:
  2251                           	opt stack 0
  2252                           pclatu	equ	0xFFB
  2253                           pclath	equ	0xFFA
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           intcon	equ	0xFF2
  2261                           postinc0	equ	0xFEE
  2262                           fsr0h	equ	0xFEA
  2263                           fsr0l	equ	0xFE9
  2264                           postdec1	equ	0xFE5
  2265                           fsr1h	equ	0xFE2
  2266                           fsr1l	equ	0xFE1
  2267                           indf2	equ	0xFDF
  2268                           postinc2	equ	0xFDE
  2269                           postdec2	equ	0xFDD
  2270                           fsr2h	equ	0xFDA
  2271                           fsr2l	equ	0xFD9
  2272                           status	equ	0xFD8
  2273                           
  2274 ;; *************** function _timer0isr *****************
  2275 ;; Defined at:
  2276 ;;		line 29 in file "../src/PIC18/Clock.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;		None
  2281 ;; Return value:  Size  Location     Type
  2282 ;;		None               void
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2290 ;;      Params:         0       0       0       0       0       0       0
  2291 ;;      Locals:         0       0       0       0       0       0       0
  2292 ;;      Temps:          0       0       0       0       0       0       0
  2293 ;;      Totals:         0       0       0       0       0       0       0
  2294 ;;Total ram usage:        0 bytes
  2295 ;; Hardware stack levels used:    1
  2296 ;; Hardware stack levels required when called:    1
  2297 ;; This function calls:
  2298 ;;		_clearTimer0OverflowFlag
  2299 ;; This function is called by:
  2300 ;;		_interruptSR
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text19
  2305  000CBC                     __ptext19:
  2306                           	opt stack 0
  2307  000CBC                     _timer0isr:
  2308                           	opt stack 26
  2309                           
  2310                           ;Clock.c: 30: clock++;
  2311                           
  2312                           ;incstack = 0
  2313  000CBC  0E01               	movlw	1
  2314  000CBE  2641               	addwf	_clock,f,c	;volatile
  2315  000CC0  0E00               	movlw	0
  2316  000CC2  2242               	addwfc	_clock+1,f,c	;volatile
  2317  000CC4  2243               	addwfc	_clock+2,f,c	;volatile
  2318  000CC6  2244               	addwfc	_clock+3,f,c	;volatile
  2319                           
  2320                           ;Clock.c: 31: clearTimer0OverflowFlag();
  2321  000CC8  EC7F  F006         	call	_clearTimer0OverflowFlag	;wreg free
  2322  000CCC  0012               	return	
  2323  000CCE                     __end_of_timer0isr:
  2324                           	opt stack 0
  2325                           pclatu	equ	0xFFB
  2326                           pclath	equ	0xFFA
  2327                           tblptru	equ	0xFF8
  2328                           tblptrh	equ	0xFF7
  2329                           tblptrl	equ	0xFF6
  2330                           tablat	equ	0xFF5
  2331                           prodh	equ	0xFF4
  2332                           prodl	equ	0xFF3
  2333                           intcon	equ	0xFF2
  2334                           postinc0	equ	0xFEE
  2335                           fsr0h	equ	0xFEA
  2336                           fsr0l	equ	0xFE9
  2337                           postdec1	equ	0xFE5
  2338                           fsr1h	equ	0xFE2
  2339                           fsr1l	equ	0xFE1
  2340                           indf2	equ	0xFDF
  2341                           postinc2	equ	0xFDE
  2342                           postdec2	equ	0xFDD
  2343                           fsr2h	equ	0xFDA
  2344                           fsr2l	equ	0xFD9
  2345                           status	equ	0xFD8
  2346                           
  2347 ;; *************** function _clearTimer0OverflowFlag *****************
  2348 ;; Defined at:
  2349 ;;		line 41 in file "../src/PIC18/Clock.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;		None
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;		None
  2354 ;; Return value:  Size  Location     Type
  2355 ;;		None               void
  2356 ;; Registers used:
  2357 ;;		None
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2363 ;;      Params:         0       0       0       0       0       0       0
  2364 ;;      Locals:         0       0       0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0
  2366 ;;      Totals:         0       0       0       0       0       0       0
  2367 ;;Total ram usage:        0 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_timer0isr
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text20
  2377  000CFE                     __ptext20:
  2378                           	opt stack 0
  2379  000CFE                     _clearTimer0OverflowFlag:
  2380                           	opt stack 26
  2381                           
  2382                           ;Clock.c: 42: INTCONbits.TMR0IF = 0;
  2383                           
  2384                           ;incstack = 0
  2385  000CFE  94F2               	bcf	intcon,2,c	;volatile
  2386  000D00  0012               	return	
  2387  000D02                     __end_of_clearTimer0OverflowFlag:
  2388                           	opt stack 0
  2389                           pclatu	equ	0xFFB
  2390                           pclath	equ	0xFFA
  2391                           tblptru	equ	0xFF8
  2392                           tblptrh	equ	0xFF7
  2393                           tblptrl	equ	0xFF6
  2394                           tablat	equ	0xFF5
  2395                           prodh	equ	0xFF4
  2396                           prodl	equ	0xFF3
  2397                           intcon	equ	0xFF2
  2398                           postinc0	equ	0xFEE
  2399                           fsr0h	equ	0xFEA
  2400                           fsr0l	equ	0xFE9
  2401                           postdec1	equ	0xFE5
  2402                           fsr1h	equ	0xFE2
  2403                           fsr1l	equ	0xFE1
  2404                           indf2	equ	0xFDF
  2405                           postinc2	equ	0xFDE
  2406                           postdec2	equ	0xFDD
  2407                           fsr2h	equ	0xFDA
  2408                           fsr2l	equ	0xFD9
  2409                           status	equ	0xFD8
  2410                           pclatu	equ	0xFFB
  2411                           pclath	equ	0xFFA
  2412                           tblptru	equ	0xFF8
  2413                           tblptrh	equ	0xFF7
  2414                           tblptrl	equ	0xFF6
  2415                           tablat	equ	0xFF5
  2416                           prodh	equ	0xFF4
  2417                           prodl	equ	0xFF3
  2418                           intcon	equ	0xFF2
  2419                           postinc0	equ	0xFEE
  2420                           fsr0h	equ	0xFEA
  2421                           fsr0l	equ	0xFE9
  2422                           postdec1	equ	0xFE5
  2423                           fsr1h	equ	0xFE2
  2424                           fsr1l	equ	0xFE1
  2425                           indf2	equ	0xFDF
  2426                           postinc2	equ	0xFDE
  2427                           postdec2	equ	0xFDD
  2428                           fsr2h	equ	0xFDA
  2429                           fsr2l	equ	0xFD9
  2430                           status	equ	0xFD8
  2431                           
  2432                           	psect	rparam
  2433  0000                     pclatu	equ	0xFFB
  2434                           pclath	equ	0xFFA
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           prodh	equ	0xFF4
  2440                           prodl	equ	0xFF3
  2441                           intcon	equ	0xFF2
  2442                           postinc0	equ	0xFEE
  2443                           fsr0h	equ	0xFEA
  2444                           fsr0l	equ	0xFE9
  2445                           postdec1	equ	0xFE5
  2446                           fsr1h	equ	0xFE2
  2447                           fsr1l	equ	0xFE1
  2448                           indf2	equ	0xFDF
  2449                           postinc2	equ	0xFDE
  2450                           postdec2	equ	0xFDD
  2451                           fsr2h	equ	0xFDA
  2452                           fsr2l	equ	0xFD9
  2453                           status	equ	0xFD8


Data Sizes:
    Strings     87
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     48      69
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    S842$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    led2SM@data	PTR struct Led2Data size(2) Largest target is 7
		 -> main@led2Data(COMRAM[7]), 

    sevenSegSM@data	PTR struct SevenSegData size(2) Largest target is 7
		 -> main@sevenSegData(COMRAM[7]), 

    initSevenSeg@data	PTR struct SevenSegData size(2) Largest target is 7
		 -> main@sevenSegData(COMRAM[7]), 

    uartLoopbackSM@data	PTR struct LoopbackData size(2) Largest target is 2
		 -> main@loopbackData(COMRAM[2]), 

    initUartLoopback@data	PTR struct LoopbackData size(2) Largest target is 2
		 -> main@loopbackData(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_led2SM
    _main->_sevenSegSM
    _uartLoopbackSM->_ReadUSART
    _uartLoopbackSM->_WriteUSART
    _sevenSegSM->_getClock
    _led2SM->_getClock
    _initClock->_OpenTimer0

Critical Paths under _interruptSR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptSR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptSR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptSR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptSR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptSR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptSR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    1169
                                             32 COMRAM    16    16      0
                            _OpenSPI
                          _OpenUSART
                       _configureLED
                          _initClock
                       _initSevenSeg
                   _initUartLoopback
                             _led2SM
                         _sevenSegSM
                     _turnOnSevenSeg
                     _uartLoopbackSM
 ---------------------------------------------------------------------------------
 (1) _uartLoopbackSM                                       2     0      2     148
                                             15 COMRAM     2     0      2
                          _ReadUSART
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _turnOnSevenSeg                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sevenSegSM                                          14    12      2     238
                                             18 COMRAM    14    12      2
                           _WriteSPI
                           _getClock
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _led2SM                                              14    12      2     208
                                             18 COMRAM    14    12      2
                           _getClock
                             _offLED
                              _onLED
 ---------------------------------------------------------------------------------
 (2) _onLED                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _offLED                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getClock                                             4     0      4       0
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initUartLoopback                                     2     0      2      73
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initSevenSeg                                         2     0      2      58
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0      30
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configureLED                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     193
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenSPI                                              3     1      2     146
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interruptSR                                         14    14      0       0
                                              0 COMRAM    14    14      0
                          _timer0isr
 ---------------------------------------------------------------------------------
 (4) _timer0isr                                            0     0      0       0
            _clearTimer0OverflowFlag
 ---------------------------------------------------------------------------------
 (5) _clearTimer0OverflowFlag                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenSPI
   _OpenUSART
   _configureLED
   _initClock
     _OpenTimer0
   _initSevenSeg
   _initUartLoopback
   _led2SM
     _getClock
     _offLED
     _onLED
   _sevenSegSM
     _WriteSPI
     _getClock
   _turnOnSevenSeg
   _uartLoopbackSM
     _ReadUSART
     _WriteUSART

 _interruptSR (ROOT)
   _timer0isr
     _clearTimer0OverflowFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     30      45       1       54.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      45      15        0.0%
DATA                 0      0      45       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Nov 01 17:55:37 2014

                   ?_configureLED 0001                       _SSPSTATbits 000FC7  
                             l122 0B78                               l220 0B8E  
                             l116 0B1C                               l222 0B92  
                             l223 0B94                               l151 09D8  
                             l303 0C36                               l119 0B3E  
                             l226 0BAE                               l242 0C96  
                             l227 0BCC                               l228 0BB4  
                             l260 0C24                               l244 0C92  
                             l229 0BB8                               l174 083C  
                             l290 0AEA                               l291 0AF4  
                             l259 0C22                               l292 0AF6  
                             l285 0AD4                               l294 0B18  
                             l289 0AE8                               l981 0AD6  
                             l973 0AC8                               l949 0CA4  
                             fsr2 000FD9                  _initUartLoopback 0C46  
                    __CFG_LVP$OFF 000000                      __CFG_WDT$OFF 000000  
                            l1023 0B98                              l1113 08B0  
                            l1105 0840                              l1027 0BBC  
                            l1123 09B4                              l1119 098A  
                            l1127 09C2                              l1081 0688  
                            l1065 0B62                              l1091 0752  
                            l1077 067C                              l1069 065C  
                            l1087 0740                              l1159 0A20  
                            l1097 080A                              STR_1 064D  
                            STR_2 0612                              STR_3 063F  
                            STR_4 0630                              STR_5 0621  
                            STR_6 0601                     __CFG_DEBUG$ON 000000  
                            _PIE1 000F9D                      __CFG_PWRT$ON 000000  
                            _main 09DA                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 0018  
                  ??_configureLED 000F                      main@led2Data 0021  
                 __end_of_OpenSPI 0BD4                             ?_main 0001  
                           _T0CON 000FD5                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           _onLED 0CF2                             _clock 0041  
                           tablat 000FF5                             status 000FD8  
                  WriteUSART@data 000F                   __initialization 0BD4  
                    ?_interruptSR 0001                      __end_of_main 0A46  
                          ??_main 0021                     __activetblptr 000002  
                   ?_initSevenSeg 000F                            ?_onLED 0001  
                __end_of_WriteSPI 0C98                        _OpenTimer0 0C08  
              __size_of_ReadUSART 001E                            _SPBRGH 000FB0  
                          _SSPBUF 000FC9                  __end_of_getClock 0CBC  
                       ??_OpenSPI 0011                __size_of_OpenUSART 0068  
                          _led2SM 065A                  OpenTimer0@config 000F  
                          _offLED 0CF6                   WriteSPI@TempVar 000F  
                  ??_initSevenSeg 0011                  initSevenSeg@data 000F  
                    __pdataCOMRAM 0031                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8              __end_of_configureLED 0CFE  
                      __accesstop 0080           __end_of__initialization 0BFE  
        ?_clearTimer0OverflowFlag 0001          __end_of_initUartLoopback 0C64  
                      _WriteUSART 0C98                    __pcstackCOMRAM 0001  
                   __end_of_onLED 0CF6                 __end_of_ReadUSART 0C46  
                   ReadUSART@data 000F                           ??_onLED 000F  
               __end_of_OpenUSART 0B1A                       ?_OpenTimer0 0001  
              __size_of_initClock 001C           __size_of_uartLoopbackSM 0060  
                         ?_led2SM 0013                           ?_offLED 0001  
            __size_of_interruptSR 0AAA                         ?_WriteSPI 0001  
              __size_of_timer0isr 0012                         ?_getClock 000F  
                         _SSPCON1 000FC6                           _SSPSTAT 000FC7  
                      led2SM@data 0013              __end_of_initSevenSeg 0CEE  
                         _OpenSPI 0B7A                           __Hparam 0000  
                         __Lparam 0000                       ?_WriteUSART 0001  
                 __size_of_led2SM 01E4                      __psmallconst 0600  
                 __size_of_offLED 0004                           __pcinit 0BD4  
                         __ramtop 0600                        ??_WriteSPI 000F  
         __size_of_turnOnSevenSeg 0004               __size_of_OpenTimer0 0020  
                         __ptext0 09DA                           __ptext1 0B1A  
                         __ptext2 0C98                           __ptext3 0C28  
                         __ptext4 0CEE                           __ptext5 083E  
                         __ptext6 0C80                           __ptext7 065A  
                         __ptext8 0CF2                           __ptext9 0CF6  
               __end_of_initClock 0C80                         _T0CONbits 000FD5  
           __size_of_configureLED 0004                        ??_getClock 0013  
                  __pintcode_body 0A46              end_of_initialization 0BFE  
                   __Lmediumconst 0000                           int_func 0A46  
               __end_of_timer0isr 0CCE                         _RCSTAbits 000FAB  
                      _sevenSegSM 083E                           postdec1 000FE5  
                         postdec2 000FDD                  WriteSPI@data_out 0010  
                    _configureLED 0CFA                           postinc0 000FEE  
                         postinc2 000FDE                         _PORTBbits 000F81  
                       _PORTCbits 000F82                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
             __size_of_WriteUSART 0012                         _TXSTAbits 000FAC  
               ?_initUartLoopback 000F                    _uartLoopbackSM 0B1A  
            initUartLoopback@data 000F                ??_initUartLoopback 0011  
                  __end_of_led2SM 083E                     __pidataCOMRAM 0CCE  
                  __end_of_offLED 0CFA                  OpenSPI@smp_phase 0010  
__size_of_clearTimer0OverflowFlag 0004               start_initialization 0BD4  
                       _ReadUSART 0C28                  OpenSPI@sync_mode 0011  
           __size_of_initSevenSeg 0010                      ??_OpenTimer0 000F  
                       _OpenUSART 0AB2                  __CFG_OSC$INTIO67 000000  
          __end_of_uartLoopbackSM 0B7A                       ?_sevenSegSM 0013  
                        ??_led2SM 0015                          ??_offLED 000F  
                  _turnOnSevenSeg 0CEE                    sevenSegSM@data 0013  
              __end_of_OpenTimer0 0C28                 __size_of_WriteSPI 0018  
                    _initSevenSeg 0CDE                       __pbssCOMRAM 0041  
                      ?_ReadUSART 0001               __end_of__stringdata 0658  
               __size_of_getClock 0012                        ?_OpenUSART 000F  
                main@loopbackData 0028                   ?_uartLoopbackSM 0010  
                        ?_OpenSPI 000F                     ??_interruptSR 0001  
                    ??_WriteUSART 000F                         __pintcode 0008  
          __end_of_turnOnSevenSeg 0CF2                       __smallconst 0600  
                       _initClock 0C64                    __size_of_onLED 0004  
             __size_of_sevenSegSM 019C                __end_of_WriteUSART 0CAA  
                        _PIE1bits 000F9D                       _hexPatterns 0031  
                        _PIR1bits 000F9E                         _timer0isr 0CBC  
                 ?_turnOnSevenSeg 0001                uartLoopbackSM@data 0010  
         _clearTimer0OverflowFlag 0CFE                  main@sevenSegData 002A  
                 OpenSPI@bus_mode 000F               __end_of_interruptSR 0AB2  
                     __stringdata 0601                       ??_ReadUSART 000F  
                      ?_initClock 0001                         copy_data0 0BF2  
                     ??_OpenUSART 0011                   OpenUSART@config 0014  
                        __Hrparam 0000                          __Lrparam 0000  
                __size_of_OpenSPI 005A                        ?_timer0isr 0001  
                        _WriteSPI 0C80         __size_of_initUartLoopback 001E  
                        _getClock 0CAA                          __ptext10 0CAA  
                        __ptext11 0C46                          __ptext20 0CFE  
                        __ptext12 0CDE                          __ptext13 0C64  
                        __ptext14 0C08                          __ptext15 0CFA  
                        __ptext16 0AB2                          __ptext17 0B7A  
                        __ptext19 0CBC                     __size_of_main 006C  
                     _interruptSR 0008                      ??_sevenSegSM 0015  
       ??_clearTimer0OverflowFlag 0001                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 000F                       ??_initClock 0010  
                        intlevel2 0000                __end_of_sevenSegSM 09DA  
                ??_uartLoopbackSM 0012                        _OSCCONbits 000FD3  
                     ??_timer0isr 0001                       _SSPCON1bits 000FC6  
 __end_of_clearTimer0OverflowFlag 0D02                  ??_turnOnSevenSeg 000F  
                    _USART_Status 0045  
