

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Oct 30 12:18:07 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    33  0000                     
    34                           	psect	idataCOMRAM
    35  0079EE                     __pidataCOMRAM:
    36                           	opt stack 0
    37                           
    38                           ;initializer for _hexPatterns
    39  0079EE  77                 	db	119
    40  0079EF  14                 	db	20
    41  0079F0  B3                 	db	179
    42  0079F1  B6                 	db	182
    43  0079F2  D4                 	db	212
    44  0079F3  E6                 	db	230
    45  0079F4  E7                 	db	231
    46  0079F5  34                 	db	52
    47  0079F6  F7                 	db	247
    48  0079F7  F6                 	db	246
    49  0079F8  F5                 	db	245
    50  0079F9  C7                 	db	199
    51  0079FA  83                 	db	131
    52  0079FB  97                 	db	151
    53  0079FC  E3                 	db	227
    54  0079FD  E1                 	db	225
    55  0000                     _INTCONbits	set	4082
    56  0000                     _OSCCONbits	set	4051
    57  0000                     _PIE1	set	3997
    58  0000                     _PIE1bits	set	3997
    59  0000                     _PIR1bits	set	3998
    60  0000                     _PORTBbits	set	3969
    61  0000                     _PORTCbits	set	3970
    62  0000                     _RCREG	set	4014
    63  0000                     _RCSTA	set	4011
    64  0000                     _RCSTAbits	set	4011
    65  0000                     _SPBRG	set	4015
    66  0000                     _SPBRGH	set	4016
    67  0000                     _SSPBUF	set	4041
    68  0000                     _SSPCON1	set	4038
    69  0000                     _SSPCON1bits	set	4038
    70  0000                     _SSPSTAT	set	4039
    71  0000                     _SSPSTATbits	set	4039
    72  0000                     _T0CON	set	4053
    73  0000                     _T0CONbits	set	4053
    74  0000                     _TMR0H	set	4055
    75  0000                     _TMR0L	set	4054
    76  0000                     _TRISAbits	set	3986
    77  0000                     _TRISBbits	set	3987
    78  0000                     _TRISCbits	set	3988
    79  0000                     _TXREG	set	4013
    80  0000                     _TXSTA	set	4012
    81  0000                     _TXSTAbits	set	4012
    82                           
    83                           ; #config settings
    84  0000                     
    85                           	psect	cinit
    86  007AF0                     __pcinit:
    87                           	opt stack 0
    88  007AF0                     start_initialization:
    89                           	opt stack 0
    90  007AF0                     __initialization:
    91                           	opt stack 0
    92                           
    93                           ; Clear objects allocated to COMRAM (9 bytes)
    94  007AF0  EE00  F031         	lfsr	0,__pbssCOMRAM
    95  007AF4  0E09               	movlw	9
    96  007AF6                     clear_0:
    97  007AF6  6AEE               	clrf	postinc0,c
    98  007AF8  06E8               	decf	wreg,f,c
    99  007AFA  E1FD               	bnz	clear_0
   100                           
   101                           ; Initialize objects allocated to COMRAM (16 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103  007AFC  0EEE               	movlw	low __pidataCOMRAM
   104  007AFE  6EF6               	movwf	tblptrl,c
   105  007B00  0E79               	movlw	high __pidataCOMRAM
   106  007B02  6EF7               	movwf	tblptrh,c
   107  007B04  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108  007B06  6EF8               	movwf	tblptru,c
   109  007B08  EE00  F021         	lfsr	0,__pdataCOMRAM
   110  007B0C  EE10 F010          	lfsr	1,16
   111  007B10                     copy_data0:
   112  007B10  0009               	tblrd		*+
   113  007B12  CFF5 FFEE          	movff	tablat,postinc0
   114  007B16  50E5               	movf	postdec1,w,c
   115  007B18  50E1               	movf	fsr1l,w,c
   116  007B1A  E1FA               	bnz	copy_data0
   117  007B1C                     end_of_initialization:
   118                           	opt stack 0
   119  007B1C                     __end_of__initialization:
   120                           	opt stack 0
   121  007B1C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   122  007B1E  6EF8               	movwf	tblptru,c
   123  007B20  0100               	movlb	0
   124  007B22  EF24  F03E         	goto	_main	;jump to C main() function
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           tblptrl	equ	0xFF6
   128                           tablat	equ	0xFF5
   129                           postinc0	equ	0xFEE
   130                           wreg	equ	0xFE8
   131                           postdec1	equ	0xFE5
   132                           fsr1l	equ	0xFE1
   133                           
   134                           	psect	bssCOMRAM
   135  000031                     __pbssCOMRAM:
   136                           	opt stack 0
   137  000031                     Clock@clock:
   138                           	opt stack 0
   139  000031                     	ds	4
   140  000035                     _clock:
   141                           	opt stack 0
   142  000035                     	ds	4
   143  000039                     _USART_Status:
   144                           	opt stack 0
   145  000039                     	ds	1
   146                           tblptru	equ	0xFF8
   147                           tblptrh	equ	0xFF7
   148                           tblptrl	equ	0xFF6
   149                           tablat	equ	0xFF5
   150                           postinc0	equ	0xFEE
   151                           wreg	equ	0xFE8
   152                           postdec1	equ	0xFE5
   153                           fsr1l	equ	0xFE1
   154                           
   155                           	psect	dataCOMRAM
   156  000021                     __pdataCOMRAM:
   157                           	opt stack 0
   158  000021                     _hexPatterns:
   159                           	opt stack 0
   160  000021                     	ds	16
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           tblptrl	equ	0xFF6
   164                           tablat	equ	0xFF5
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           postdec1	equ	0xFE5
   168                           fsr1l	equ	0xFE1
   169                           
   170                           	psect	cstackCOMRAM
   171  000001                     __pcstackCOMRAM:
   172                           	opt stack 0
   173  000001                     ?_getClock:
   174                           	opt stack 0
   175  000001                     OpenSPI@bus_mode:
   176                           	opt stack 0
   177  000001                     WriteSPI@TempVar:
   178                           	opt stack 0
   179  000001                     OpenTimer0@config:
   180                           	opt stack 0
   181  000001                     ReadUSART@data:
   182                           	opt stack 0
   183  000001                     WriteUSART@data:
   184                           	opt stack 0
   185  000001                     initLEDStateMachine@data:
   186                           	opt stack 0
   187  000001                     initUartLoopback@data:
   188                           	opt stack 0
   189  000001                     initSevenSeg@data:
   190                           	opt stack 0
   191  000001                     OpenUSART@spbrg:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0x0
   195  000001                     	ds	1
   196  000002                     OpenSPI@smp_phase:
   197                           	opt stack 0
   198  000002                     WriteSPI@data_out:
   199                           	opt stack 0
   200  000002                     uartLoopbackSM@data:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0x1
   204  000002                     	ds	1
   205  000003                     ??_OpenUSART:
   206  000003                     OpenSPI@sync_mode:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x2
   210  000003                     	ds	1
   211  000004                     
   212                           ; 0 bytes @ 0x3
   213  000004                     	ds	1
   214  000005                     LEDStateMachine@data:
   215                           	opt stack 0
   216  000005                     sevenSegSM@data:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0x4
   220  000005                     	ds	1
   221  000006                     OpenUSART@config:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x5
   225  000006                     	ds	1
   226  000007                     ??_LEDStateMachine:
   227  000007                     ??_sevenSegSM:
   228                           
   229                           ; 0 bytes @ 0x6
   230  000007                     	ds	12
   231  000013                     main@loopbackData:
   232                           	opt stack 0
   233                           
   234                           ; 2 bytes @ 0x12
   235  000013                     	ds	2
   236  000015                     main@ledData:
   237                           	opt stack 0
   238                           
   239                           ; 5 bytes @ 0x14
   240  000015                     	ds	5
   241  00001A                     main@sevenSegData:
   242                           	opt stack 0
   243                           
   244                           ; 7 bytes @ 0x19
   245  00001A                     	ds	7
   246                           tblptru	equ	0xFF8
   247                           tblptrh	equ	0xFF7
   248                           tblptrl	equ	0xFF6
   249                           tablat	equ	0xFF5
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           postdec1	equ	0xFE5
   253                           fsr1l	equ	0xFE1
   254                           
   255 ;;
   256 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   257 ;;
   258 ;; *************** function _main *****************
   259 ;; Defined at:
   260 ;;		line 28 in file "../src/PIC18/main.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  sevenSegData    7   25[COMRAM] struct SevenSegData
   265 ;;  ledData         5   20[COMRAM] struct LEDData
   266 ;;  loopbackData    2   18[COMRAM] struct LoopbackData
   267 ;; Return value:  Size  Location     Type
   268 ;;		None               void
   269 ;; Registers used:
   270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   276 ;;      Params:         0       0       0       0       0       0       0
   277 ;;      Locals:        14       0       0       0       0       0       0
   278 ;;      Temps:          0       0       0       0       0       0       0
   279 ;;      Totals:        14       0       0       0       0       0       0
   280 ;;Total ram usage:       14 bytes
   281 ;; Hardware stack levels required when called:    3
   282 ;; This function calls:
   283 ;;		_LEDStateMachine
   284 ;;		_OpenSPI
   285 ;;		_OpenUSART
   286 ;;		_initClock
   287 ;;		_initLEDStateMachine
   288 ;;		_initSevenSeg
   289 ;;		_initUartLoopback
   290 ;;		_sevenSegSM
   291 ;;		_turnOnSevenSeg
   292 ;;		_uartLoopbackSM
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           
   298                           	psect	text0
   299  007C48                     __ptext0:
   300                           	opt stack 0
   301  007C48                     _main:
   302                           	opt stack 28
   303                           
   304                           ;main.c: 29: (OSCCONbits.IRCF = 7);
   305                           
   306                           ;incstack = 0
   307  007C48  88D3               	bsf	4051,4,c	;volatile
   308  007C4A  8AD3               	bsf	4051,5,c	;volatile
   309  007C4C  8CD3               	bsf	4051,6,c	;volatile
   310                           
   311                           ;main.c: 30: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111, 51);;
   312  007C4E  0E00               	movlw	0
   313  007C50  6E02               	movwf	OpenUSART@spbrg+1,c
   314  007C52  0E33               	movlw	51
   315  007C54  6E01               	movwf	OpenUSART@spbrg,c
   316  007C56  0E3C               	movlw	60
   317  007C58  ECF0  F03D         	call	_OpenUSART
   318                           
   319                           ;main.c: 31: OpenSPI(0b00000000, 0b00000011, 0b10000000);
   320  007C5C  0E03               	movlw	3
   321  007C5E  6E01               	movwf	OpenSPI@bus_mode,c
   322  007C60  0E80               	movlw	128
   323  007C62  6E02               	movwf	OpenSPI@smp_phase,c
   324  007C64  0E00               	movlw	0
   325  007C66  EC93  F03D         	call	_OpenSPI
   326                           
   327                           ;main.c: 32: LoopbackData loopbackData;
   328                           ;main.c: 33: LEDData ledData;
   329                           ;main.c: 34: SevenSegData sevenSegData;
   330                           ;main.c: 35: initLEDStateMachine(&ledData);
   331  007C6A  0E00               	movlw	high main@ledData
   332  007C6C  6E02               	movwf	initLEDStateMachine@data+1,c
   333  007C6E  0E15               	movlw	low main@ledData
   334  007C70  6E01               	movwf	initLEDStateMachine@data,c
   335  007C72  EC4F  F03D         	call	_initLEDStateMachine	;wreg free
   336                           
   337                           ;main.c: 36: initClock();
   338  007C76  EC14  F03D         	call	_initClock	;wreg free
   339                           
   340                           ;main.c: 37: initUartLoopback(&loopbackData);
   341  007C7A  0E00               	movlw	high main@loopbackData
   342  007C7C  6E02               	movwf	initUartLoopback@data+1,c
   343  007C7E  0E13               	movlw	low main@loopbackData
   344  007C80  6E01               	movwf	initUartLoopback@data,c
   345  007C82  EC21  F03D         	call	_initUartLoopback	;wreg free
   346                           
   347                           ;main.c: 38: initSevenSeg(&sevenSegData);
   348  007C86  0E00               	movlw	high main@sevenSegData
   349  007C88  6E02               	movwf	initSevenSeg@data+1,c
   350  007C8A  0E1A               	movlw	low main@sevenSegData
   351  007C8C  6E01               	movwf	initSevenSeg@data,c
   352  007C8E  ECEF  F03C         	call	_initSevenSeg	;wreg free
   353                           
   354                           ;main.c: 39: turnOnSevenSeg();
   355  007C92  ECE7  F03C         	call	_turnOnSevenSeg	;wreg free
   356  007C96                     l1105:
   357                           
   358                           ;main.c: 43: uartLoopbackSM(&loopbackData);
   359  007C96  0E00               	movlw	high main@loopbackData
   360  007C98  6E03               	movwf	uartLoopbackSM@data+1,c
   361  007C9A  0E13               	movlw	low main@loopbackData
   362  007C9C  6E02               	movwf	uartLoopbackSM@data,c
   363  007C9E  ECC0  F03D         	call	_uartLoopbackSM	;wreg free
   364                           
   365                           ;main.c: 44: LEDStateMachine(&ledData);
   366  007CA2  0E00               	movlw	high main@ledData
   367  007CA4  6E06               	movwf	LEDStateMachine@data+1,c
   368  007CA6  0E15               	movlw	low main@ledData
   369  007CA8  6E05               	movwf	LEDStateMachine@data,c
   370  007CAA  EC2C  F03F         	call	_LEDStateMachine	;wreg free
   371                           
   372                           ;main.c: 45: sevenSegSM(&sevenSegData);
   373  007CAE  0E00               	movlw	high main@sevenSegData
   374  007CB0  6E06               	movwf	sevenSegSM@data+1,c
   375  007CB2  0E1A               	movlw	low main@sevenSegData
   376  007CB4  6E05               	movwf	sevenSegSM@data,c
   377  007CB6  EC5E  F03E         	call	_sevenSegSM	;wreg free
   378  007CBA  D7ED               	goto	l1105
   379  007CBC                     __end_of_main:
   380                           	opt stack 0
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           postinc0	equ	0xFEE
   386                           wreg	equ	0xFE8
   387                           postdec1	equ	0xFE5
   388                           fsr1l	equ	0xFE1
   389                           
   390 ;; *************** function _uartLoopbackSM *****************
   391 ;; Defined at:
   392 ;;		line 9 in file "../src/PIC18/UARTLoopback.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  data            2    1[COMRAM] PTR struct LoopbackData
   395 ;;		 -> main@loopbackData(2), 
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;		None               void
   400 ;; Registers used:
   401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   407 ;;      Params:         2       0       0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0
   410 ;;      Totals:         2       0       0       0       0       0       0
   411 ;;Total ram usage:        2 bytes
   412 ;; Hardware stack levels used:    1
   413 ;; Hardware stack levels required when called:    1
   414 ;; This function calls:
   415 ;;		_ReadUSART
   416 ;;		_WriteUSART
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text1
   423  007B80                     __ptext1:
   424                           	opt stack 0
   425  007B80                     _uartLoopbackSM:
   426                           	opt stack 29
   427                           
   428                           ;UARTLoopback.c: 11: switch(data->state){
   429                           
   430                           ;incstack = 0
   431  007B80  D023               	goto	l1025
   432  007B82                     l116:
   433                           
   434                           ;UARTLoopback.c: 13: if((PIR1bits.RCIF) == 0)
   435  007B82  AA9E               	btfss	3998,5,c	;volatile
   436  007B84  D02C               	goto	l122
   437                           
   438                           ;UARTLoopback.c: 15: data->dataByte = ReadUSART();
   439                           
   440                           ;UARTLoopback.c: 14: break;
   441  007B86  EE20 F001          	lfsr	2,1
   442  007B8A  5002               	movf	uartLoopbackSM@data,w,c
   443  007B8C  26D9               	addwf	fsr2l,f,c
   444  007B8E  5003               	movf	uartLoopbackSM@data+1,w,c
   445  007B90  22DA               	addwfc	fsr2h,f,c
   446  007B92  EC30  F03D         	call	_ReadUSART	;wreg free
   447  007B96  6EDF               	movwf	indf2,c
   448                           
   449                           ;UARTLoopback.c: 16: data->state = WAIT_TO_TX;
   450  007B98  C002  FFD9         	movff	uartLoopbackSM@data,fsr2l
   451  007B9C  C003  FFDA         	movff	uartLoopbackSM@data+1,fsr2h
   452  007BA0  0E01               	movlw	1
   453  007BA2  D010               	goto	L1
   454  007BA4                     l119:
   455                           
   456                           ;UARTLoopback.c: 20: if((!TXSTAbits.TRMT) == 1)
   457  007BA4  A2AC               	btfss	4012,1,c	;volatile
   458  007BA6  D01B               	goto	l122
   459                           
   460                           ;UARTLoopback.c: 22: WriteUSART(data->dataByte);
   461                           
   462                           ;UARTLoopback.c: 21: break;
   463  007BA8  EE20 F001          	lfsr	2,1
   464  007BAC  5002               	movf	uartLoopbackSM@data,w,c
   465  007BAE  26D9               	addwf	fsr2l,f,c
   466  007BB0  5003               	movf	uartLoopbackSM@data+1,w,c
   467  007BB2  22DA               	addwfc	fsr2h,f,c
   468  007BB4  50DF               	movf	indf2,w,c
   469  007BB6  ECFF  F03C         	call	_WriteUSART
   470                           
   471                           ;UARTLoopback.c: 23: data->state = WAIT_DATA;
   472  007BBA  C002  FFD9         	movff	uartLoopbackSM@data,fsr2l
   473  007BBE  C003  FFDA         	movff	uartLoopbackSM@data+1,fsr2h
   474  007BC2  0E00               	movlw	0
   475  007BC4                     L1:
   476  007BC4  6EDF               	movwf	indf2,c
   477                           
   478                           ;UARTLoopback.c: 24: break;
   479  007BC6  D00B               	goto	l122
   480  007BC8                     l1025:
   481  007BC8  C002  FFD9         	movff	uartLoopbackSM@data,fsr2l
   482  007BCC  C003  FFDA         	movff	uartLoopbackSM@data+1,fsr2h
   483  007BD0  50DF               	movf	indf2,w,c
   484                           
   485                           ; Switch size 1, requested type "space"
   486                           ; Number of cases is 2, Range of values is 0 to 1
   487                           ; switch strategies available:
   488                           ; Name         Instructions Cycles
   489                           ; simple_byte            7     4 (average)
   490                           ;	Chosen strategy is simple_byte
   491  007BD2  0A00               	xorlw	0	; case 0
   492  007BD4  B4D8               	btfsc	status,2,c
   493  007BD6  D7D5               	goto	l116
   494  007BD8  0A01               	xorlw	1	; case 1
   495  007BDA  B4D8               	btfsc	status,2,c
   496  007BDC  D7E3               	goto	l119
   497  007BDE                     l122:
   498  007BDE  0012               	return	
   499  007BE0                     __end_of_uartLoopbackSM:
   500                           	opt stack 0
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           postinc0	equ	0xFEE
   506                           wreg	equ	0xFE8
   507                           postdec1	equ	0xFE5
   508                           fsr1l	equ	0xFE1
   509                           indf2	equ	0xFDF
   510                           fsr2h	equ	0xFDA
   511                           fsr2l	equ	0xFD9
   512                           status	equ	0xFD8
   513                           
   514 ;; *************** function _WriteUSART *****************
   515 ;; Defined at:
   516 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  data            1    wreg     unsigned char 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  data            1    0[COMRAM] unsigned char 
   521 ;; Return value:  Size  Location     Type
   522 ;;		None               void
   523 ;; Registers used:
   524 ;;		wreg
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   530 ;;      Params:         0       0       0       0       0       0       0
   531 ;;      Locals:         1       0       0       0       0       0       0
   532 ;;      Temps:          0       0       0       0       0       0       0
   533 ;;      Totals:         1       0       0       0       0       0       0
   534 ;;Total ram usage:        1 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_uartLoopbackSM
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544  0079FE                     __ptext2:
   545                           	opt stack 0
   546  0079FE                     _WriteUSART:
   547                           	opt stack 29
   548                           
   549                           ;incstack = 0
   550                           ;WriteUSART@data stored from wreg
   551  0079FE  6E01               	movwf	WriteUSART@data,c
   552  007A00  ACAC               	btfss	4012,6,c	;volatile
   553  007A02  D003               	goto	l907
   554  007A04  90AC               	bcf	4012,0,c	;volatile
   555  007A06  B239               	btfsc	_USART_Status,1,c
   556  007A08  80AC               	bsf	4012,0,c	;volatile
   557  007A0A                     l907:
   558  007A0A  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
   559  007A0E  0012               	return	
   560  007A10                     __end_of_WriteUSART:
   561                           	opt stack 0
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           postdec1	equ	0xFE5
   569                           fsr1l	equ	0xFE1
   570                           indf2	equ	0xFDF
   571                           fsr2h	equ	0xFDA
   572                           fsr2l	equ	0xFD9
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _ReadUSART *****************
   576 ;; Defined at:
   577 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  data            1    0[COMRAM] unsigned char 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      unsigned char 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   591 ;;      Params:         0       0       0       0       0       0       0
   592 ;;      Locals:         1       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0
   594 ;;      Totals:         1       0       0       0       0       0       0
   595 ;;Total ram usage:        1 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_uartLoopbackSM
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text3
   605  007A60                     __ptext3:
   606                           	opt stack 0
   607  007A60                     _ReadUSART:
   608                           	opt stack 29
   609                           
   610                           ;incstack = 0
   611  007A60  0EF2               	movlw	242
   612  007A62  1639               	andwf	_USART_Status,f,c
   613  007A64  ACAB               	btfss	4011,6,c	;volatile
   614  007A66  D003               	goto	l250
   615  007A68  9039               	bcf	_USART_Status,0,c
   616  007A6A  B0AB               	btfsc	4011,0,c	;volatile
   617  007A6C  8039               	bsf	_USART_Status,0,c
   618  007A6E                     l250:
   619  007A6E  B4AB               	btfsc	4011,2,c	;volatile
   620  007A70  8439               	bsf	_USART_Status,2,c
   621  007A72  B2AB               	btfsc	4011,1,c	;volatile
   622  007A74  8639               	bsf	_USART_Status,3,c
   623  007A76  CFAE F001          	movff	4014,ReadUSART@data	;volatile
   624  007A7A  5001               	movf	ReadUSART@data,w,c
   625  007A7C  0012               	return	
   626  007A7E                     __end_of_ReadUSART:
   627                           	opt stack 0
   628                           tblptru	equ	0xFF8
   629                           tblptrh	equ	0xFF7
   630                           tblptrl	equ	0xFF6
   631                           tablat	equ	0xFF5
   632                           postinc0	equ	0xFEE
   633                           wreg	equ	0xFE8
   634                           postdec1	equ	0xFE5
   635                           fsr1l	equ	0xFE1
   636                           indf2	equ	0xFDF
   637                           fsr2h	equ	0xFDA
   638                           fsr2l	equ	0xFD9
   639                           status	equ	0xFD8
   640                           
   641 ;; *************** function _turnOnSevenSeg *****************
   642 ;; Defined at:
   643 ;;		line 30 in file "../src/PIC18/SevenSeg.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;		None               void
   650 ;; Registers used:
   651 ;;		None
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   657 ;;      Params:         0       0       0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; This function calls:
   664 ;;		Nothing
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text4
   671  0079CE                     __ptext4:
   672                           	opt stack 0
   673  0079CE                     _turnOnSevenSeg:
   674                           	opt stack 30
   675                           
   676                           ;SevenSeg.c: 31: PORTCbits.RC2 = 1;
   677                           
   678                           ;incstack = 0
   679  0079CE  8482               	bsf	3970,2,c	;volatile
   680  0079D0  0012               	return	
   681  0079D2                     __end_of_turnOnSevenSeg:
   682                           	opt stack 0
   683                           tblptru	equ	0xFF8
   684                           tblptrh	equ	0xFF7
   685                           tblptrl	equ	0xFF6
   686                           tablat	equ	0xFF5
   687                           postinc0	equ	0xFEE
   688                           wreg	equ	0xFE8
   689                           postdec1	equ	0xFE5
   690                           fsr1l	equ	0xFE1
   691                           indf2	equ	0xFDF
   692                           fsr2h	equ	0xFDA
   693                           fsr2l	equ	0xFD9
   694                           status	equ	0xFD8
   695                           
   696 ;; *************** function _sevenSegSM *****************
   697 ;; Defined at:
   698 ;;		line 38 in file "../src/PIC18/SevenSeg.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;  data            2    4[COMRAM] PTR struct SevenSegData
   701 ;;		 -> main@sevenSegData(7), 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;		None               void
   706 ;; Registers used:
   707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   713 ;;      Params:         2       0       0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0
   715 ;;      Temps:         12       0       0       0       0       0       0
   716 ;;      Totals:        14       0       0       0       0       0       0
   717 ;;Total ram usage:       14 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    2
   720 ;; This function calls:
   721 ;;		_WriteSPI
   722 ;;		_getClock
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text5
   729  007CBC                     __ptext5:
   730                           	opt stack 0
   731  007CBC                     _sevenSegSM:
   732                           	opt stack 28
   733                           
   734                           ;SevenSeg.c: 39: switch(data->state){
   735                           
   736                           ;incstack = 0
   737  007CBC  D0C1               	goto	l1077
   738  007CBE                     l1055:
   739                           
   740                           ;SevenSeg.c: 41: data->counter = 0;
   741  007CBE  EE20 F001          	lfsr	2,1
   742  007CC2  5005               	movf	sevenSegSM@data,w,c
   743  007CC4  26D9               	addwf	fsr2l,f,c
   744  007CC6  5006               	movf	sevenSegSM@data+1,w,c
   745  007CC8  22DA               	addwfc	fsr2h,f,c
   746  007CCA  0E00               	movlw	0
   747  007CCC  6EDE               	movwf	postinc2,c
   748  007CCE  0E00               	movlw	0
   749  007CD0  6EDD               	movwf	postdec2,c
   750                           
   751                           ;SevenSeg.c: 42: data->currClock = getClock();
   752  007CD2  EC62  F03D         	call	_getClock	;wreg free
   753  007CD6  C001  F007         	movff	?_getClock,??_sevenSegSM
   754  007CDA  C002  F008         	movff	?_getClock+1,??_sevenSegSM+1
   755  007CDE  C003  F009         	movff	?_getClock+2,??_sevenSegSM+2
   756  007CE2  C004  F00A         	movff	?_getClock+3,??_sevenSegSM+3
   757  007CE6  EE20 F003          	lfsr	2,3
   758  007CEA  5005               	movf	sevenSegSM@data,w,c
   759  007CEC  26D9               	addwf	fsr2l,f,c
   760  007CEE  5006               	movf	sevenSegSM@data+1,w,c
   761  007CF0  22DA               	addwfc	fsr2h,f,c
   762  007CF2  C007  FFDE         	movff	??_sevenSegSM,postinc2
   763  007CF6  C008  FFDE         	movff	??_sevenSegSM+1,postinc2
   764  007CFA  C009  FFDE         	movff	??_sevenSegSM+2,postinc2
   765  007CFE  C00A  FFDD         	movff	??_sevenSegSM+3,postdec2
   766  007D02  06D9               	decf	fsr2l,f,c
   767  007D04  06D9               	decf	fsr2l,f,c
   768                           
   769                           ;SevenSeg.c: 43: WriteSPI(hexPatterns[data->counter]);
   770  007D06  EE20 F001          	lfsr	2,1
   771  007D0A  5005               	movf	sevenSegSM@data,w,c
   772  007D0C  26D9               	addwf	fsr2l,f,c
   773  007D0E  5006               	movf	sevenSegSM@data+1,w,c
   774  007D10  22DA               	addwfc	fsr2h,f,c
   775  007D12  CFDE F007          	movff	postinc2,??_sevenSegSM
   776  007D16  CFDD F008          	movff	postdec2,??_sevenSegSM+1
   777  007D1A  0E21               	movlw	low _hexPatterns
   778  007D1C  2407               	addwf	??_sevenSegSM,w,c
   779  007D1E  6ED9               	movwf	fsr2l,c
   780  007D20  0E00               	movlw	high _hexPatterns
   781  007D22  2008               	addwfc	??_sevenSegSM+1,w,c
   782  007D24  6EDA               	movwf	fsr2h,c
   783  007D26  50DF               	movf	indf2,w,c
   784  007D28  EC08  F03D         	call	_WriteSPI
   785  007D2C  D082               	goto	l1073
   786  007D2E                     l1063:
   787                           
   788                           ;SevenSeg.c: 48: if(getClock() - data->currClock >= 488){
   789  007D2E  EE20 F003          	lfsr	2,3
   790  007D32  5005               	movf	sevenSegSM@data,w,c
   791  007D34  26D9               	addwf	fsr2l,f,c
   792  007D36  5006               	movf	sevenSegSM@data+1,w,c
   793  007D38  22DA               	addwfc	fsr2h,f,c
   794  007D3A  CFDE F007          	movff	postinc2,??_sevenSegSM
   795  007D3E  CFDE F008          	movff	postinc2,??_sevenSegSM+1
   796  007D42  CFDE F009          	movff	postinc2,??_sevenSegSM+2
   797  007D46  CFDE F00A          	movff	postinc2,??_sevenSegSM+3
   798  007D4A  1E07               	comf	??_sevenSegSM,f,c
   799  007D4C  1E08               	comf	??_sevenSegSM+1,f,c
   800  007D4E  1E09               	comf	??_sevenSegSM+2,f,c
   801  007D50  1E0A               	comf	??_sevenSegSM+3,f,c
   802  007D52  2A07               	incf	??_sevenSegSM,f,c
   803  007D54  0E00               	movlw	0
   804  007D56  2208               	addwfc	??_sevenSegSM+1,f,c
   805  007D58  2209               	addwfc	??_sevenSegSM+2,f,c
   806  007D5A  220A               	addwfc	??_sevenSegSM+3,f,c
   807  007D5C  EC62  F03D         	call	_getClock	;wreg free
   808  007D60  C001  F00B         	movff	?_getClock,??_sevenSegSM+4
   809  007D64  C002  F00C         	movff	?_getClock+1,??_sevenSegSM+5
   810  007D68  C003  F00D         	movff	?_getClock+2,??_sevenSegSM+6
   811  007D6C  C004  F00E         	movff	?_getClock+3,??_sevenSegSM+7
   812  007D70  5007               	movf	??_sevenSegSM,w,c
   813  007D72  240B               	addwf	??_sevenSegSM+4,w,c
   814  007D74  6E0F               	movwf	(??_sevenSegSM+8)& (0+255),c
   815  007D76  5008               	movf	??_sevenSegSM+1,w,c
   816  007D78  200C               	addwfc	??_sevenSegSM+5,w,c
   817  007D7A  6E10               	movwf	(??_sevenSegSM+9)& (0+255),c
   818  007D7C  5009               	movf	??_sevenSegSM+2,w,c
   819  007D7E  200D               	addwfc	??_sevenSegSM+6,w,c
   820  007D80  6E11               	movwf	(??_sevenSegSM+10)& (0+255),c
   821  007D82  500A               	movf	??_sevenSegSM+3,w,c
   822  007D84  200E               	addwfc	??_sevenSegSM+7,w,c
   823  007D86  6E12               	movwf	(??_sevenSegSM+11)& (0+255),c
   824  007D88  0EE8               	movlw	232
   825  007D8A  5C0F               	subwf	??_sevenSegSM+8,w,c
   826  007D8C  0E01               	movlw	1
   827  007D8E  5810               	subwfb	??_sevenSegSM+9,w,c
   828  007D90  0E00               	movlw	0
   829  007D92  5811               	subwfb	??_sevenSegSM+10,w,c
   830  007D94  0E00               	movlw	0
   831  007D96  5812               	subwfb	??_sevenSegSM+11,w,c
   832  007D98  A0D8               	btfss	status,0,c
   833  007D9A  D036               	goto	l1069
   834                           
   835                           ;SevenSeg.c: 49: data->currClock = getClock();
   836  007D9C  EC62  F03D         	call	_getClock	;wreg free
   837  007DA0  C001  F007         	movff	?_getClock,??_sevenSegSM
   838  007DA4  C002  F008         	movff	?_getClock+1,??_sevenSegSM+1
   839  007DA8  C003  F009         	movff	?_getClock+2,??_sevenSegSM+2
   840  007DAC  C004  F00A         	movff	?_getClock+3,??_sevenSegSM+3
   841  007DB0  EE20 F003          	lfsr	2,3
   842  007DB4  5005               	movf	sevenSegSM@data,w,c
   843  007DB6  26D9               	addwf	fsr2l,f,c
   844  007DB8  5006               	movf	sevenSegSM@data+1,w,c
   845  007DBA  22DA               	addwfc	fsr2h,f,c
   846  007DBC  C007  FFDE         	movff	??_sevenSegSM,postinc2
   847  007DC0  C008  FFDE         	movff	??_sevenSegSM+1,postinc2
   848  007DC4  C009  FFDE         	movff	??_sevenSegSM+2,postinc2
   849  007DC8  C00A  FFDD         	movff	??_sevenSegSM+3,postdec2
   850  007DCC  06D9               	decf	fsr2l,f,c
   851  007DCE  06D9               	decf	fsr2l,f,c
   852                           
   853                           ;SevenSeg.c: 50: WriteSPI(hexPatterns[data->counter]);
   854  007DD0  EE20 F001          	lfsr	2,1
   855  007DD4  5005               	movf	sevenSegSM@data,w,c
   856  007DD6  26D9               	addwf	fsr2l,f,c
   857  007DD8  5006               	movf	sevenSegSM@data+1,w,c
   858  007DDA  22DA               	addwfc	fsr2h,f,c
   859  007DDC  CFDE F007          	movff	postinc2,??_sevenSegSM
   860  007DE0  CFDD F008          	movff	postdec2,??_sevenSegSM+1
   861  007DE4  0E21               	movlw	low _hexPatterns
   862  007DE6  2407               	addwf	??_sevenSegSM,w,c
   863  007DE8  6ED9               	movwf	fsr2l,c
   864  007DEA  0E00               	movlw	high _hexPatterns
   865  007DEC  2008               	addwfc	??_sevenSegSM+1,w,c
   866  007DEE  6EDA               	movwf	fsr2h,c
   867  007DF0  50DF               	movf	indf2,w,c
   868  007DF2  EC08  F03D         	call	_WriteSPI
   869                           
   870                           ;SevenSeg.c: 51: data->counter++;
   871  007DF6  EE20 F001          	lfsr	2,1
   872  007DFA  5005               	movf	sevenSegSM@data,w,c
   873  007DFC  26D9               	addwf	fsr2l,f,c
   874  007DFE  5006               	movf	sevenSegSM@data+1,w,c
   875  007E00  22DA               	addwfc	fsr2h,f,c
   876  007E02  2ADE               	incf	postinc2,f,c
   877  007E04  0E00               	movlw	0
   878  007E06  22DD               	addwfc	postdec2,f,c
   879  007E08                     l1069:
   880                           
   881                           ;SevenSeg.c: 52: }
   882                           ;SevenSeg.c: 53: if(data->counter == 16)
   883  007E08  EE20 F001          	lfsr	2,1
   884  007E0C  5005               	movf	sevenSegSM@data,w,c
   885  007E0E  26D9               	addwf	fsr2l,f,c
   886  007E10  5006               	movf	sevenSegSM@data+1,w,c
   887  007E12  22DA               	addwfc	fsr2h,f,c
   888  007E14  50DE               	movf	postinc2,w,c
   889  007E16  0A10               	xorlw	16
   890  007E18  10DD               	iorwf	postdec2,w,c
   891  007E1A  A4D8               	btfss	status,2,c
   892  007E1C  D00A               	goto	l1073
   893                           
   894                           ;SevenSeg.c: 54: data->counter = 0;
   895  007E1E  EE20 F001          	lfsr	2,1
   896  007E22  5005               	movf	sevenSegSM@data,w,c
   897  007E24  26D9               	addwf	fsr2l,f,c
   898  007E26  5006               	movf	sevenSegSM@data+1,w,c
   899  007E28  22DA               	addwfc	fsr2h,f,c
   900  007E2A  0E00               	movlw	0
   901  007E2C  6EDE               	movwf	postinc2,c
   902  007E2E  0E00               	movlw	0
   903  007E30  6EDD               	movwf	postdec2,c
   904  007E32                     l1073:
   905                           
   906                           ;SevenSeg.c: 56: data->state = _7Seg_WAITING;
   907  007E32  C005  FFD9         	movff	sevenSegSM@data,fsr2l
   908  007E36  C006  FFDA         	movff	sevenSegSM@data+1,fsr2h
   909  007E3A  0E01               	movlw	1
   910  007E3C  6EDF               	movwf	indf2,c
   911                           
   912                           ;SevenSeg.c: 57: break;
   913  007E3E  D00B               	goto	l151
   914  007E40                     l1077:
   915  007E40  C005  FFD9         	movff	sevenSegSM@data,fsr2l
   916  007E44  C006  FFDA         	movff	sevenSegSM@data+1,fsr2h
   917  007E48  50DF               	movf	indf2,w,c
   918                           
   919                           ; Switch size 1, requested type "space"
   920                           ; Number of cases is 2, Range of values is 0 to 1
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            7     4 (average)
   924                           ;	Chosen strategy is simple_byte
   925  007E4A  0A00               	xorlw	0	; case 0
   926  007E4C  B4D8               	btfsc	status,2,c
   927  007E4E  D737               	goto	l1055
   928  007E50  0A01               	xorlw	1	; case 1
   929  007E52  B4D8               	btfsc	status,2,c
   930  007E54  D76C               	goto	l1063
   931  007E56                     l151:
   932  007E56  0012               	return	
   933  007E58                     __end_of_sevenSegSM:
   934                           	opt stack 0
   935                           tblptru	equ	0xFF8
   936                           tblptrh	equ	0xFF7
   937                           tblptrl	equ	0xFF6
   938                           tablat	equ	0xFF5
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           postdec1	equ	0xFE5
   942                           fsr1l	equ	0xFE1
   943                           indf2	equ	0xFDF
   944                           postinc2	equ	0xFDE
   945                           postdec2	equ	0xFDD
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           status	equ	0xFD8
   949                           
   950 ;; *************** function _WriteSPI *****************
   951 ;; Defined at:
   952 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_writ.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  data_out        1    wreg     unsigned char 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  data_out        1    1[COMRAM] unsigned char 
   957 ;;  TempVar         1    0[COMRAM] unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      char 
   960 ;; Registers used:
   961 ;;		wreg
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   967 ;;      Params:         0       0       0       0       0       0       0
   968 ;;      Locals:         2       0       0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0       0       0
   970 ;;      Totals:         2       0       0       0       0       0       0
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_sevenSegSM
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text6
   981  007A10                     __ptext6:
   982                           	opt stack 0
   983  007A10                     _WriteSPI:
   984                           	opt stack 29
   985                           
   986                           ;incstack = 0
   987                           ;WriteSPI@data_out stored from wreg
   988  007A10  6E02               	movwf	WriteSPI@data_out,c
   989  007A12  CFC9 F001          	movff	4041,WriteSPI@TempVar	;volatile
   990  007A16  969E               	bcf	3998,3,c	;volatile
   991  007A18  9EC6               	bcf	4038,7,c	;volatile
   992  007A1A  C002  FFC9         	movff	WriteSPI@data_out,4041	;volatile
   993  007A1E  BEC6               	btfsc	4038,7,c	;volatile
   994  007A20  D002               	goto	l189
   995  007A22                     l191:
   996  007A22  A69E               	btfss	3998,3,c	;volatile
   997  007A24  D7FE               	goto	l191
   998  007A26                     l189:
   999  007A26  0012               	return	
  1000  007A28                     __end_of_WriteSPI:
  1001                           	opt stack 0
  1002                           tblptru	equ	0xFF8
  1003                           tblptrh	equ	0xFF7
  1004                           tblptrl	equ	0xFF6
  1005                           tablat	equ	0xFF5
  1006                           postinc0	equ	0xFEE
  1007                           wreg	equ	0xFE8
  1008                           postdec1	equ	0xFE5
  1009                           fsr1l	equ	0xFE1
  1010                           indf2	equ	0xFDF
  1011                           postinc2	equ	0xFDE
  1012                           postdec2	equ	0xFDD
  1013                           fsr2h	equ	0xFDA
  1014                           fsr2l	equ	0xFD9
  1015                           status	equ	0xFD8
  1016                           
  1017 ;; *************** function _initUartLoopback *****************
  1018 ;; Defined at:
  1019 ;;		line 4 in file "../src/PIC18/UARTLoopback.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  data            2    0[COMRAM] PTR struct LoopbackData
  1022 ;;		 -> main@loopbackData(2), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;		None               void
  1027 ;; Registers used:
  1028 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1034 ;;      Params:         2       0       0       0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0
  1037 ;;      Totals:         2       0       0       0       0       0       0
  1038 ;;Total ram usage:        2 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text7
  1048  007A42                     __ptext7:
  1049                           	opt stack 0
  1050  007A42                     _initUartLoopback:
  1051                           	opt stack 30
  1052                           
  1053                           ;UARTLoopback.c: 5: data->state = WAIT_DATA;
  1054                           
  1055                           ;incstack = 0
  1056  007A42  C001  FFD9         	movff	initUartLoopback@data,fsr2l
  1057  007A46  C002  FFDA         	movff	initUartLoopback@data+1,fsr2h
  1058  007A4A  0E00               	movlw	0
  1059  007A4C  6EDF               	movwf	indf2,c
  1060                           
  1061                           ;UARTLoopback.c: 6: data->dataByte = 0;
  1062  007A4E  EE20 F001          	lfsr	2,1
  1063  007A52  5001               	movf	initUartLoopback@data,w,c
  1064  007A54  26D9               	addwf	fsr2l,f,c
  1065  007A56  5002               	movf	initUartLoopback@data+1,w,c
  1066  007A58  22DA               	addwfc	fsr2h,f,c
  1067  007A5A  0E00               	movlw	0
  1068  007A5C  6EDF               	movwf	indf2,c
  1069  007A5E  0012               	return	
  1070  007A60                     __end_of_initUartLoopback:
  1071                           	opt stack 0
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           wreg	equ	0xFE8
  1078                           postdec1	equ	0xFE5
  1079                           fsr1l	equ	0xFE1
  1080                           indf2	equ	0xFDF
  1081                           postinc2	equ	0xFDE
  1082                           postdec2	equ	0xFDD
  1083                           fsr2h	equ	0xFDA
  1084                           fsr2l	equ	0xFD9
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function _initSevenSeg *****************
  1088 ;; Defined at:
  1089 ;;		line 25 in file "../src/PIC18/SevenSeg.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  data            2    0[COMRAM] PTR struct SevenSegData
  1092 ;;		 -> main@sevenSegData(7), 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;		None               void
  1097 ;; Registers used:
  1098 ;;		wreg, fsr2l, fsr2h
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1104 ;;      Params:         2       0       0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0
  1107 ;;      Totals:         2       0       0       0       0       0       0
  1108 ;;Total ram usage:        2 bytes
  1109 ;; Hardware stack levels used:    1
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text8
  1118  0079DE                     __ptext8:
  1119                           	opt stack 0
  1120  0079DE                     _initSevenSeg:
  1121                           	opt stack 30
  1122                           
  1123                           ;SevenSeg.c: 26: TRISCbits.TRISC2 = 0;
  1124                           
  1125                           ;incstack = 0
  1126  0079DE  9494               	bcf	3988,2,c	;volatile
  1127                           
  1128                           ;SevenSeg.c: 27: data->state = _7Seg_INIT;
  1129  0079E0  C001  FFD9         	movff	initSevenSeg@data,fsr2l
  1130  0079E4  C002  FFDA         	movff	initSevenSeg@data+1,fsr2h
  1131  0079E8  0E00               	movlw	0
  1132  0079EA  6EDF               	movwf	indf2,c
  1133  0079EC  0012               	return	
  1134  0079EE                     __end_of_initSevenSeg:
  1135                           	opt stack 0
  1136                           tblptru	equ	0xFF8
  1137                           tblptrh	equ	0xFF7
  1138                           tblptrl	equ	0xFF6
  1139                           tablat	equ	0xFF5
  1140                           postinc0	equ	0xFEE
  1141                           wreg	equ	0xFE8
  1142                           postdec1	equ	0xFE5
  1143                           fsr1l	equ	0xFE1
  1144                           indf2	equ	0xFDF
  1145                           postinc2	equ	0xFDE
  1146                           postdec2	equ	0xFDD
  1147                           fsr2h	equ	0xFDA
  1148                           fsr2l	equ	0xFD9
  1149                           status	equ	0xFD8
  1150                           
  1151 ;; *************** function _initLEDStateMachine *****************
  1152 ;; Defined at:
  1153 ;;		line 7 in file "../src/PIC18/LEDSM.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  data            2    0[COMRAM] PTR struct LEDData
  1156 ;;		 -> main@ledData(5), 
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;		None               void
  1161 ;; Registers used:
  1162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1168 ;;      Params:         2       0       0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0
  1171 ;;      Totals:         2       0       0       0       0       0       0
  1172 ;;Total ram usage:        2 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    1
  1175 ;; This function calls:
  1176 ;;		_configureLED
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text9
  1183  007A9E                     __ptext9:
  1184                           	opt stack 0
  1185  007A9E                     _initLEDStateMachine:
  1186                           	opt stack 29
  1187                           
  1188                           ;LEDSM.c: 8: data->state = LED_START;
  1189                           
  1190                           ;incstack = 0
  1191  007A9E  C001  FFD9         	movff	initLEDStateMachine@data,fsr2l
  1192  007AA2  C002  FFDA         	movff	initLEDStateMachine@data+1,fsr2h
  1193  007AA6  0E00               	movlw	0
  1194  007AA8  6EDF               	movwf	indf2,c
  1195                           
  1196                           ;LEDSM.c: 9: data->currentClock = 0;
  1197  007AAA  EE20 F001          	lfsr	2,1
  1198  007AAE  5001               	movf	initLEDStateMachine@data,w,c
  1199  007AB0  26D9               	addwf	fsr2l,f,c
  1200  007AB2  5002               	movf	initLEDStateMachine@data+1,w,c
  1201  007AB4  22DA               	addwfc	fsr2h,f,c
  1202  007AB6  6ADE               	clrf	postinc2,c
  1203  007AB8  6ADE               	clrf	postinc2,c
  1204  007ABA  6ADE               	clrf	postinc2,c
  1205  007ABC  6ADD               	clrf	postdec2,c
  1206                           
  1207                           ;LEDSM.c: 10: configureLED();
  1208  007ABE  ECE5  F03C         	call	_configureLED	;wreg free
  1209  007AC2  0012               	return	
  1210  007AC4                     __end_of_initLEDStateMachine:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           postinc0	equ	0xFEE
  1217                           wreg	equ	0xFE8
  1218                           postdec1	equ	0xFE5
  1219                           fsr1l	equ	0xFE1
  1220                           indf2	equ	0xFDF
  1221                           postinc2	equ	0xFDE
  1222                           postdec2	equ	0xFDD
  1223                           fsr2h	equ	0xFDA
  1224                           fsr2l	equ	0xFD9
  1225                           status	equ	0xFD8
  1226                           
  1227 ;; *************** function _configureLED *****************
  1228 ;; Defined at:
  1229 ;;		line 15 in file "../src/PIC18/Blinky.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;		None               void
  1236 ;; Registers used:
  1237 ;;		None
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1243 ;;      Params:         0       0       0       0       0       0       0
  1244 ;;      Locals:         0       0       0       0       0       0       0
  1245 ;;      Temps:          0       0       0       0       0       0       0
  1246 ;;      Totals:         0       0       0       0       0       0       0
  1247 ;;Total ram usage:        0 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_initLEDStateMachine
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text10
  1257  0079CA                     __ptext10:
  1258                           	opt stack 0
  1259  0079CA                     _configureLED:
  1260                           	opt stack 29
  1261                           
  1262                           ;Blinky.c: 16: TRISBbits.TRISB0 = 0;
  1263                           
  1264                           ;incstack = 0
  1265  0079CA  9093               	bcf	3987,0,c	;volatile
  1266  0079CC  0012               	return	
  1267  0079CE                     __end_of_configureLED:
  1268                           	opt stack 0
  1269                           tblptru	equ	0xFF8
  1270                           tblptrh	equ	0xFF7
  1271                           tblptrl	equ	0xFF6
  1272                           tablat	equ	0xFF5
  1273                           postinc0	equ	0xFEE
  1274                           wreg	equ	0xFE8
  1275                           postdec1	equ	0xFE5
  1276                           fsr1l	equ	0xFE1
  1277                           indf2	equ	0xFDF
  1278                           postinc2	equ	0xFDE
  1279                           postdec2	equ	0xFDD
  1280                           fsr2h	equ	0xFDA
  1281                           fsr2l	equ	0xFD9
  1282                           status	equ	0xFD8
  1283                           
  1284 ;; *************** function _initClock *****************
  1285 ;; Defined at:
  1286 ;;		line 4 in file "../src/PIC18/Clock.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;		None               void
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1300 ;;      Params:         0       0       0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    1
  1307 ;; This function calls:
  1308 ;;		_OpenTimer0
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text11
  1315  007A28                     __ptext11:
  1316                           	opt stack 0
  1317  007A28                     _initClock:
  1318                           	opt stack 29
  1319                           
  1320                           ;Clock.c: 5: clock = 0;
  1321                           
  1322                           ;incstack = 0
  1323  007A28  0E00               	movlw	0
  1324  007A2A  6E31               	movwf	Clock@clock,c
  1325  007A2C  0E00               	movlw	0
  1326  007A2E  6E32               	movwf	Clock@clock+1,c
  1327  007A30  0E00               	movlw	0
  1328  007A32  6E33               	movwf	Clock@clock+2,c
  1329  007A34  0E00               	movlw	0
  1330  007A36  6E34               	movwf	Clock@clock+3,c
  1331                           
  1332                           ;Clock.c: 6: OpenTimer0( 0b01111111 &
  1333                           ;Clock.c: 7: 0b11111111 &
  1334                           ;Clock.c: 8: 0b11011111 &
  1335                           ;Clock.c: 9: 0b11110010 );
  1336  007A38  0E52               	movlw	82
  1337  007A3A  EC3F  F03D         	call	_OpenTimer0
  1338                           
  1339                           ;Clock.c: 11: INTCONbits.TMR0IF = 0;
  1340  007A3E  94F2               	bcf	intcon,2,c	;volatile
  1341  007A40  0012               	return	
  1342  007A42                     __end_of_initClock:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           intcon	equ	0xFF2
  1349                           postinc0	equ	0xFEE
  1350                           wreg	equ	0xFE8
  1351                           postdec1	equ	0xFE5
  1352                           fsr1l	equ	0xFE1
  1353                           indf2	equ	0xFDF
  1354                           postinc2	equ	0xFDE
  1355                           postdec2	equ	0xFDD
  1356                           fsr2h	equ	0xFDA
  1357                           fsr2l	equ	0xFD9
  1358                           status	equ	0xFD8
  1359                           
  1360 ;; *************** function _OpenTimer0 *****************
  1361 ;; Defined at:
  1362 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  config          1    wreg     unsigned char 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  config          1    0[COMRAM] unsigned char 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;		None               void
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1376 ;;      Params:         0       0       0       0       0       0       0
  1377 ;;      Locals:         1       0       0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0
  1379 ;;      Totals:         1       0       0       0       0       0       0
  1380 ;;Total ram usage:        1 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_initClock
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           	psect	text12
  1390  007A7E                     __ptext12:
  1391                           	opt stack 0
  1392  007A7E                     _OpenTimer0:
  1393                           	opt stack 29
  1394                           
  1395                           ;incstack = 0
  1396                           ;OpenTimer0@config stored from wreg
  1397  007A7E  6E01               	movwf	OpenTimer0@config,c
  1398  007A80  5001               	movf	OpenTimer0@config,w,c
  1399  007A82  0B7F               	andlw	127
  1400  007A84  6ED5               	movwf	4053,c	;volatile
  1401  007A86  0E00               	movlw	0
  1402  007A88  6ED7               	movwf	4055,c	;volatile
  1403  007A8A  0E00               	movlw	0
  1404  007A8C  6ED6               	movwf	4054,c	;volatile
  1405  007A8E  94F2               	bcf	intcon,2,c	;volatile
  1406  007A90  AE01               	btfss	OpenTimer0@config,7,c
  1407  007A92  D002               	goto	l206
  1408  007A94  8AF2               	bsf	intcon,5,c	;volatile
  1409  007A96  D001               	goto	l207
  1410  007A98                     l206:
  1411  007A98  9AF2               	bcf	intcon,5,c	;volatile
  1412  007A9A                     l207:
  1413  007A9A  8ED5               	bsf	4053,7,c	;volatile
  1414  007A9C  0012               	return	
  1415  007A9E                     __end_of_OpenTimer0:
  1416                           	opt stack 0
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           tblptrl	equ	0xFF6
  1420                           tablat	equ	0xFF5
  1421                           intcon	equ	0xFF2
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           postdec1	equ	0xFE5
  1425                           fsr1l	equ	0xFE1
  1426                           indf2	equ	0xFDF
  1427                           postinc2	equ	0xFDE
  1428                           postdec2	equ	0xFDD
  1429                           fsr2h	equ	0xFDA
  1430                           fsr2l	equ	0xFD9
  1431                           status	equ	0xFD8
  1432                           
  1433 ;; *************** function _OpenUSART *****************
  1434 ;; Defined at:
  1435 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  config          1    wreg     unsigned char 
  1438 ;;  spbrg           2    0[COMRAM] unsigned int 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  config          1    5[COMRAM] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		wreg, status,2
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1450 ;;      Params:         2       0       0       0       0       0       0
  1451 ;;      Locals:         1       0       0       0       0       0       0
  1452 ;;      Temps:          3       0       0       0       0       0       0
  1453 ;;      Totals:         6       0       0       0       0       0       0
  1454 ;;Total ram usage:        6 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; This function calls:
  1457 ;;		Nothing
  1458 ;; This function is called by:
  1459 ;;		_main
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text13
  1464  007BE0                     __ptext13:
  1465                           	opt stack 0
  1466  007BE0                     _OpenUSART:
  1467                           	opt stack 30
  1468                           
  1469                           ;incstack = 0
  1470                           ;OpenUSART@config stored from wreg
  1471  007BE0  6E06               	movwf	OpenUSART@config,c
  1472  007BE2  0E00               	movlw	0
  1473  007BE4  6EAC               	movwf	4012,c	;volatile
  1474  007BE6  0E00               	movlw	0
  1475  007BE8  6EAB               	movwf	4011,c	;volatile
  1476  007BEA  B006               	btfsc	OpenUSART@config,0,c
  1477  007BEC  88AC               	bsf	4012,4,c	;volatile
  1478  007BEE  A206               	btfss	OpenUSART@config,1,c
  1479  007BF0  D002               	goto	l929
  1480  007BF2  8CAC               	bsf	4012,6,c	;volatile
  1481  007BF4  8CAB               	bsf	4011,6,c	;volatile
  1482  007BF6                     l929:
  1483  007BF6  B406               	btfsc	OpenUSART@config,2,c
  1484  007BF8  8EAC               	bsf	4012,7,c	;volatile
  1485  007BFA  A606               	btfss	OpenUSART@config,3,c
  1486  007BFC  D002               	goto	l232
  1487  007BFE  88AB               	bsf	4011,4,c	;volatile
  1488  007C00  D001               	goto	l937
  1489  007C02                     l232:
  1490  007C02  8AAB               	bsf	4011,5,c	;volatile
  1491  007C04                     l937:
  1492  007C04  B806               	btfsc	OpenUSART@config,4,c
  1493  007C06  84AC               	bsf	4012,2,c	;volatile
  1494  007C08  989E               	bcf	3998,4,c	;volatile
  1495  007C0A  BA06               	btfsc	OpenUSART@config,5,c
  1496  007C0C  86AB               	bsf	4011,3,c	;volatile
  1497  007C0E  AC06               	btfss	OpenUSART@config,6,c
  1498  007C10  D002               	goto	l236
  1499  007C12  8A9D               	bsf	3997,5,c	;volatile
  1500  007C14  D001               	goto	l237
  1501  007C16                     l236:
  1502  007C16  9A9D               	bcf	3997,5,c	;volatile
  1503  007C18                     l237:
  1504  007C18  9A9E               	bcf	3998,5,c	;volatile
  1505  007C1A  AE06               	btfss	OpenUSART@config,7,c
  1506  007C1C  D002               	goto	l238
  1507  007C1E  889D               	bsf	3997,4,c	;volatile
  1508  007C20  D001               	goto	l239
  1509  007C22                     l238:
  1510  007C22  989D               	bcf	3997,4,c	;volatile
  1511  007C24                     l239:
  1512  007C24  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1513  007C28  C002  F003         	movff	OpenUSART@spbrg+1,??_OpenUSART
  1514  007C2C  C003  F004         	movff	??_OpenUSART,??_OpenUSART+1
  1515  007C30  6A05               	clrf	(??_OpenUSART+2)& (0+255),c
  1516  007C32  5004               	movf	??_OpenUSART+1,w,c
  1517  007C34  6EB0               	movwf	4016,c	;volatile
  1518  007C36  8AAC               	bsf	4012,5,c	;volatile
  1519  007C38  8EAB               	bsf	4011,7,c	;volatile
  1520  007C3A  9C94               	bcf	3988,6,c	;volatile
  1521  007C3C  8E94               	bsf	3988,7,c	;volatile
  1522  007C3E  B8AC               	btfsc	4012,4,c	;volatile
  1523  007C40  BEAC               	btfsc	4012,7,c	;volatile
  1524  007C42  D001               	goto	l241
  1525  007C44  8C94               	bsf	3988,6,c	;volatile
  1526  007C46                     l241:
  1527  007C46  0012               	return	
  1528  007C48                     __end_of_OpenUSART:
  1529                           	opt stack 0
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           intcon	equ	0xFF2
  1535                           postinc0	equ	0xFEE
  1536                           wreg	equ	0xFE8
  1537                           postdec1	equ	0xFE5
  1538                           fsr1l	equ	0xFE1
  1539                           indf2	equ	0xFDF
  1540                           postinc2	equ	0xFDE
  1541                           postdec2	equ	0xFDD
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _OpenSPI *****************
  1547 ;; Defined at:
  1548 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_open.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  sync_mode       1    wreg     unsigned char 
  1551 ;;  bus_mode        1    0[COMRAM] unsigned char 
  1552 ;;  smp_phase       1    1[COMRAM] unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  sync_mode       1    2[COMRAM] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;		None               void
  1557 ;; Registers used:
  1558 ;;		wreg, status,2, status,0
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1564 ;;      Params:         2       0       0       0       0       0       0
  1565 ;;      Locals:         1       0       0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0       0       0
  1567 ;;      Totals:         3       0       0       0       0       0       0
  1568 ;;Total ram usage:        3 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_main
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text14
  1578  007B26                     __ptext14:
  1579                           	opt stack 0
  1580  007B26                     _OpenSPI:
  1581                           	opt stack 30
  1582                           
  1583                           ;incstack = 0
  1584                           ;OpenSPI@sync_mode stored from wreg
  1585  007B26  6E03               	movwf	OpenSPI@sync_mode,c
  1586  007B28  0E3F               	movlw	63
  1587  007B2A  16C7               	andwf	4039,f,c	;volatile
  1588  007B2C  0E00               	movlw	0
  1589  007B2E  6EC6               	movwf	4038,c	;volatile
  1590  007B30  5003               	movf	OpenSPI@sync_mode,w,c
  1591  007B32  12C6               	iorwf	4038,f,c	;volatile
  1592  007B34  5002               	movf	OpenSPI@smp_phase,w,c
  1593  007B36  12C7               	iorwf	4039,f,c	;volatile
  1594  007B38  D005               	goto	l979
  1595  007B3A                     l167:
  1596  007B3A  8CC7               	bsf	4039,6,c	;volatile
  1597  007B3C  D015               	goto	l983
  1598  007B3E                     l169:
  1599  007B3E  8CC7               	bsf	4039,6,c	;volatile
  1600  007B40                     l170:
  1601  007B40  88C6               	bsf	4038,4,c	;volatile
  1602  007B42  D012               	goto	l983
  1603  007B44                     l979:
  1604  007B44  5001               	movf	OpenSPI@bus_mode,w,c
  1605                           
  1606                           ; Switch size 1, requested type "space"
  1607                           ; Number of cases is 3, Range of values is 0 to 3
  1608                           ; switch strategies available:
  1609                           ; Name         Instructions Cycles
  1610                           ; simple_byte           10     6 (average)
  1611                           ;	Chosen strategy is simple_byte
  1612  007B46  0A00               	xorlw	0	; case 0
  1613  007B48  B4D8               	btfsc	status,2,c
  1614  007B4A  D7F7               	goto	l167
  1615  007B4C  0A02               	xorlw	2	; case 2
  1616  007B4E  B4D8               	btfsc	status,2,c
  1617  007B50  D7F6               	goto	l169
  1618  007B52  0A01               	xorlw	1	; case 3
  1619  007B54  B4D8               	btfsc	status,2,c
  1620  007B56  D7F4               	goto	l170
  1621  007B58  D007               	goto	l983
  1622  007B5A                     l173:
  1623  007B5A  8694               	bsf	3988,3,c	;volatile
  1624  007B5C  8A92               	bsf	3986,5,c	;volatile
  1625  007B5E  D00C               	goto	l174
  1626  007B60                     l175:
  1627  007B60  8694               	bsf	3988,3,c	;volatile
  1628  007B62  D00A               	goto	l174
  1629  007B64                     l176:
  1630  007B64  9694               	bcf	3988,3,c	;volatile
  1631  007B66  D008               	goto	l174
  1632  007B68                     l983:
  1633  007B68  5003               	movf	OpenSPI@sync_mode,w,c
  1634                           
  1635                           ; Switch size 1, requested type "space"
  1636                           ; Number of cases is 2, Range of values is 4 to 5
  1637                           ; switch strategies available:
  1638                           ; Name         Instructions Cycles
  1639                           ; simple_byte            7     4 (average)
  1640                           ;	Chosen strategy is simple_byte
  1641  007B6A  0A04               	xorlw	4	; case 4
  1642  007B6C  B4D8               	btfsc	status,2,c
  1643  007B6E  D7F5               	goto	l173
  1644  007B70  0A01               	xorlw	1	; case 5
  1645  007B72  B4D8               	btfsc	status,2,c
  1646  007B74  D7F5               	goto	l175
  1647  007B76  D7F6               	goto	l176
  1648  007B78                     l174:
  1649  007B78  8894               	bsf	3988,4,c	;volatile
  1650  007B7A  9A94               	bcf	3988,5,c	;volatile
  1651  007B7C  8AC6               	bsf	4038,5,c	;volatile
  1652  007B7E  0012               	return	
  1653  007B80                     __end_of_OpenSPI:
  1654                           	opt stack 0
  1655                           tblptru	equ	0xFF8
  1656                           tblptrh	equ	0xFF7
  1657                           tblptrl	equ	0xFF6
  1658                           tablat	equ	0xFF5
  1659                           intcon	equ	0xFF2
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           postdec1	equ	0xFE5
  1663                           fsr1l	equ	0xFE1
  1664                           indf2	equ	0xFDF
  1665                           postinc2	equ	0xFDE
  1666                           postdec2	equ	0xFDD
  1667                           fsr2h	equ	0xFDA
  1668                           fsr2l	equ	0xFD9
  1669                           status	equ	0xFD8
  1670                           
  1671 ;; *************** function _LEDStateMachine *****************
  1672 ;; Defined at:
  1673 ;;		line 13 in file "../src/PIC18/LEDSM.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  data            2    4[COMRAM] PTR struct LEDData
  1676 ;;		 -> main@ledData(5), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;		None               void
  1681 ;; Registers used:
  1682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1688 ;;      Params:         2       0       0       0       0       0       0
  1689 ;;      Locals:         0       0       0       0       0       0       0
  1690 ;;      Temps:         12       0       0       0       0       0       0
  1691 ;;      Totals:        14       0       0       0       0       0       0
  1692 ;;Total ram usage:       14 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    2
  1695 ;; This function calls:
  1696 ;;		_getClock
  1697 ;;		_offLED
  1698 ;;		_onLED
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text15
  1705  007E58                     __ptext15:
  1706                           	opt stack 0
  1707  007E58                     _LEDStateMachine:
  1708                           	opt stack 28
  1709                           
  1710                           ;LEDSM.c: 14: switch(data->state){
  1711                           
  1712                           ;incstack = 0
  1713  007E58  D0C4               	goto	l1051
  1714  007E5A                     l1029:
  1715                           
  1716                           ;LEDSM.c: 16: data->state = LED_OFF;
  1717  007E5A  C005  FFD9         	movff	LEDStateMachine@data,fsr2l
  1718  007E5E  C006  FFDA         	movff	LEDStateMachine@data+1,fsr2h
  1719  007E62  0E02               	movlw	2
  1720  007E64  6EDF               	movwf	indf2,c
  1721                           
  1722                           ;LEDSM.c: 17: data->currentClock = 0;
  1723  007E66  EE20 F001          	lfsr	2,1
  1724  007E6A  5005               	movf	LEDStateMachine@data,w,c
  1725  007E6C  26D9               	addwf	fsr2l,f,c
  1726  007E6E  5006               	movf	LEDStateMachine@data+1,w,c
  1727  007E70  22DA               	addwfc	fsr2h,f,c
  1728  007E72  6ADE               	clrf	postinc2,c
  1729  007E74  6ADE               	clrf	postinc2,c
  1730  007E76  6ADE               	clrf	postinc2,c
  1731  007E78  6ADD               	clrf	postdec2,c
  1732                           
  1733                           ;LEDSM.c: 18: break;
  1734  007E7A  D0C1               	goto	l101
  1735  007E7C                     l1033:
  1736                           
  1737                           ;LEDSM.c: 21: if(getClock() - data->currentClock >= 488){
  1738  007E7C  EE20 F001          	lfsr	2,1
  1739  007E80  5005               	movf	LEDStateMachine@data,w,c
  1740  007E82  26D9               	addwf	fsr2l,f,c
  1741  007E84  5006               	movf	LEDStateMachine@data+1,w,c
  1742  007E86  22DA               	addwfc	fsr2h,f,c
  1743  007E88  CFDE F007          	movff	postinc2,??_LEDStateMachine
  1744  007E8C  CFDE F008          	movff	postinc2,??_LEDStateMachine+1
  1745  007E90  CFDE F009          	movff	postinc2,??_LEDStateMachine+2
  1746  007E94  CFDE F00A          	movff	postinc2,??_LEDStateMachine+3
  1747  007E98  1E07               	comf	??_LEDStateMachine,f,c
  1748  007E9A  1E08               	comf	??_LEDStateMachine+1,f,c
  1749  007E9C  1E09               	comf	??_LEDStateMachine+2,f,c
  1750  007E9E  1E0A               	comf	??_LEDStateMachine+3,f,c
  1751  007EA0  2A07               	incf	??_LEDStateMachine,f,c
  1752  007EA2  0E00               	movlw	0
  1753  007EA4  2208               	addwfc	??_LEDStateMachine+1,f,c
  1754  007EA6  2209               	addwfc	??_LEDStateMachine+2,f,c
  1755  007EA8  220A               	addwfc	??_LEDStateMachine+3,f,c
  1756  007EAA  EC62  F03D         	call	_getClock	;wreg free
  1757  007EAE  C001  F00B         	movff	?_getClock,??_LEDStateMachine+4
  1758  007EB2  C002  F00C         	movff	?_getClock+1,??_LEDStateMachine+5
  1759  007EB6  C003  F00D         	movff	?_getClock+2,??_LEDStateMachine+6
  1760  007EBA  C004  F00E         	movff	?_getClock+3,??_LEDStateMachine+7
  1761  007EBE  5007               	movf	??_LEDStateMachine,w,c
  1762  007EC0  240B               	addwf	??_LEDStateMachine+4,w,c
  1763  007EC2  6E0F               	movwf	(??_LEDStateMachine+8)& (0+255),c
  1764  007EC4  5008               	movf	??_LEDStateMachine+1,w,c
  1765  007EC6  200C               	addwfc	??_LEDStateMachine+5,w,c
  1766  007EC8  6E10               	movwf	(??_LEDStateMachine+9)& (0+255),c
  1767  007ECA  5009               	movf	??_LEDStateMachine+2,w,c
  1768  007ECC  200D               	addwfc	??_LEDStateMachine+6,w,c
  1769  007ECE  6E11               	movwf	(??_LEDStateMachine+10)& (0+255),c
  1770  007ED0  500A               	movf	??_LEDStateMachine+3,w,c
  1771  007ED2  200E               	addwfc	??_LEDStateMachine+7,w,c
  1772  007ED4  6E12               	movwf	(??_LEDStateMachine+11)& (0+255),c
  1773  007ED6  0EE8               	movlw	232
  1774  007ED8  5C0F               	subwf	??_LEDStateMachine+8,w,c
  1775  007EDA  0E01               	movlw	1
  1776  007EDC  5810               	subwfb	??_LEDStateMachine+9,w,c
  1777  007EDE  0E00               	movlw	0
  1778  007EE0  5811               	subwfb	??_LEDStateMachine+10,w,c
  1779  007EE2  0E00               	movlw	0
  1780  007EE4  5812               	subwfb	??_LEDStateMachine+11,w,c
  1781  007EE6  A0D8               	btfss	status,0,c
  1782  007EE8  D08A               	goto	l101
  1783                           
  1784                           ;LEDSM.c: 22: data->currentClock = getClock();
  1785  007EEA  EC62  F03D         	call	_getClock	;wreg free
  1786  007EEE  C001  F007         	movff	?_getClock,??_LEDStateMachine
  1787  007EF2  C002  F008         	movff	?_getClock+1,??_LEDStateMachine+1
  1788  007EF6  C003  F009         	movff	?_getClock+2,??_LEDStateMachine+2
  1789  007EFA  C004  F00A         	movff	?_getClock+3,??_LEDStateMachine+3
  1790  007EFE  EE20 F001          	lfsr	2,1
  1791  007F02  5005               	movf	LEDStateMachine@data,w,c
  1792  007F04  26D9               	addwf	fsr2l,f,c
  1793  007F06  5006               	movf	LEDStateMachine@data+1,w,c
  1794  007F08  22DA               	addwfc	fsr2h,f,c
  1795  007F0A  C007  FFDE         	movff	??_LEDStateMachine,postinc2
  1796  007F0E  C008  FFDE         	movff	??_LEDStateMachine+1,postinc2
  1797  007F12  C009  FFDE         	movff	??_LEDStateMachine+2,postinc2
  1798  007F16  C00A  FFDD         	movff	??_LEDStateMachine+3,postdec2
  1799  007F1A  06D9               	decf	fsr2l,f,c
  1800  007F1C  06D9               	decf	fsr2l,f,c
  1801                           
  1802                           ;LEDSM.c: 23: offLED();
  1803  007F1E  ECE1  F03C         	call	_offLED	;wreg free
  1804                           
  1805                           ;LEDSM.c: 24: data->state = LED_ON;
  1806  007F22  C005  FFD9         	movff	LEDStateMachine@data,fsr2l
  1807  007F26  C006  FFDA         	movff	LEDStateMachine@data+1,fsr2h
  1808  007F2A  0E01               	movlw	1
  1809  007F2C  D058               	goto	L2
  1810  007F2E                     l1041:
  1811                           
  1812                           ;LEDSM.c: 30: if(getClock() - data->currentClock >= 488){
  1813  007F2E  EE20 F001          	lfsr	2,1
  1814  007F32  5005               	movf	LEDStateMachine@data,w,c
  1815  007F34  26D9               	addwf	fsr2l,f,c
  1816  007F36  5006               	movf	LEDStateMachine@data+1,w,c
  1817  007F38  22DA               	addwfc	fsr2h,f,c
  1818  007F3A  CFDE F007          	movff	postinc2,??_LEDStateMachine
  1819  007F3E  CFDE F008          	movff	postinc2,??_LEDStateMachine+1
  1820  007F42  CFDE F009          	movff	postinc2,??_LEDStateMachine+2
  1821  007F46  CFDE F00A          	movff	postinc2,??_LEDStateMachine+3
  1822  007F4A  1E07               	comf	??_LEDStateMachine,f,c
  1823  007F4C  1E08               	comf	??_LEDStateMachine+1,f,c
  1824  007F4E  1E09               	comf	??_LEDStateMachine+2,f,c
  1825  007F50  1E0A               	comf	??_LEDStateMachine+3,f,c
  1826  007F52  2A07               	incf	??_LEDStateMachine,f,c
  1827  007F54  0E00               	movlw	0
  1828  007F56  2208               	addwfc	??_LEDStateMachine+1,f,c
  1829  007F58  2209               	addwfc	??_LEDStateMachine+2,f,c
  1830  007F5A  220A               	addwfc	??_LEDStateMachine+3,f,c
  1831  007F5C  EC62  F03D         	call	_getClock	;wreg free
  1832  007F60  C001  F00B         	movff	?_getClock,??_LEDStateMachine+4
  1833  007F64  C002  F00C         	movff	?_getClock+1,??_LEDStateMachine+5
  1834  007F68  C003  F00D         	movff	?_getClock+2,??_LEDStateMachine+6
  1835  007F6C  C004  F00E         	movff	?_getClock+3,??_LEDStateMachine+7
  1836  007F70  5007               	movf	??_LEDStateMachine,w,c
  1837  007F72  240B               	addwf	??_LEDStateMachine+4,w,c
  1838  007F74  6E0F               	movwf	(??_LEDStateMachine+8)& (0+255),c
  1839  007F76  5008               	movf	??_LEDStateMachine+1,w,c
  1840  007F78  200C               	addwfc	??_LEDStateMachine+5,w,c
  1841  007F7A  6E10               	movwf	(??_LEDStateMachine+9)& (0+255),c
  1842  007F7C  5009               	movf	??_LEDStateMachine+2,w,c
  1843  007F7E  200D               	addwfc	??_LEDStateMachine+6,w,c
  1844  007F80  6E11               	movwf	(??_LEDStateMachine+10)& (0+255),c
  1845  007F82  500A               	movf	??_LEDStateMachine+3,w,c
  1846  007F84  200E               	addwfc	??_LEDStateMachine+7,w,c
  1847  007F86  6E12               	movwf	(??_LEDStateMachine+11)& (0+255),c
  1848  007F88  0EE8               	movlw	232
  1849  007F8A  5C0F               	subwf	??_LEDStateMachine+8,w,c
  1850  007F8C  0E01               	movlw	1
  1851  007F8E  5810               	subwfb	??_LEDStateMachine+9,w,c
  1852  007F90  0E00               	movlw	0
  1853  007F92  5811               	subwfb	??_LEDStateMachine+10,w,c
  1854  007F94  0E00               	movlw	0
  1855  007F96  5812               	subwfb	??_LEDStateMachine+11,w,c
  1856  007F98  A0D8               	btfss	status,0,c
  1857  007F9A  D031               	goto	l101
  1858                           
  1859                           ;LEDSM.c: 31: data->currentClock = getClock();
  1860  007F9C  EC62  F03D         	call	_getClock	;wreg free
  1861  007FA0  C001  F007         	movff	?_getClock,??_LEDStateMachine
  1862  007FA4  C002  F008         	movff	?_getClock+1,??_LEDStateMachine+1
  1863  007FA8  C003  F009         	movff	?_getClock+2,??_LEDStateMachine+2
  1864  007FAC  C004  F00A         	movff	?_getClock+3,??_LEDStateMachine+3
  1865  007FB0  EE20 F001          	lfsr	2,1
  1866  007FB4  5005               	movf	LEDStateMachine@data,w,c
  1867  007FB6  26D9               	addwf	fsr2l,f,c
  1868  007FB8  5006               	movf	LEDStateMachine@data+1,w,c
  1869  007FBA  22DA               	addwfc	fsr2h,f,c
  1870  007FBC  C007  FFDE         	movff	??_LEDStateMachine,postinc2
  1871  007FC0  C008  FFDE         	movff	??_LEDStateMachine+1,postinc2
  1872  007FC4  C009  FFDE         	movff	??_LEDStateMachine+2,postinc2
  1873  007FC8  C00A  FFDD         	movff	??_LEDStateMachine+3,postdec2
  1874  007FCC  06D9               	decf	fsr2l,f,c
  1875  007FCE  06D9               	decf	fsr2l,f,c
  1876                           
  1877                           ;LEDSM.c: 32: onLED();
  1878  007FD0  ECE3  F03C         	call	_onLED	;wreg free
  1879                           
  1880                           ;LEDSM.c: 33: data->state = LED_OFF;
  1881  007FD4  C005  FFD9         	movff	LEDStateMachine@data,fsr2l
  1882  007FD8  C006  FFDA         	movff	LEDStateMachine@data+1,fsr2h
  1883  007FDC  0E02               	movlw	2
  1884  007FDE                     L2:
  1885  007FDE  6EDF               	movwf	indf2,c
  1886                           
  1887                           ;LEDSM.c: 34: break;
  1888  007FE0  D00E               	goto	l101
  1889  007FE2                     l1051:
  1890  007FE2  C005  FFD9         	movff	LEDStateMachine@data,fsr2l
  1891  007FE6  C006  FFDA         	movff	LEDStateMachine@data+1,fsr2h
  1892  007FEA  50DF               	movf	indf2,w,c
  1893                           
  1894                           ; Switch size 1, requested type "space"
  1895                           ; Number of cases is 3, Range of values is 0 to 2
  1896                           ; switch strategies available:
  1897                           ; Name         Instructions Cycles
  1898                           ; simple_byte           10     6 (average)
  1899                           ;	Chosen strategy is simple_byte
  1900  007FEC  0A00               	xorlw	0	; case 0
  1901  007FEE  B4D8               	btfsc	status,2,c
  1902  007FF0  D734               	goto	l1029
  1903  007FF2  0A01               	xorlw	1	; case 1
  1904  007FF4  B4D8               	btfsc	status,2,c
  1905  007FF6  D79B               	goto	l1041
  1906  007FF8  0A03               	xorlw	3	; case 2
  1907  007FFA  B4D8               	btfsc	status,2,c
  1908  007FFC  D73F               	goto	l1033
  1909  007FFE                     l101:
  1910  007FFE  0012               	return	
  1911  008000                     __end_of_LEDStateMachine:
  1912                           	opt stack 0
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           intcon	equ	0xFF2
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           indf2	equ	0xFDF
  1923                           postinc2	equ	0xFDE
  1924                           postdec2	equ	0xFDD
  1925                           fsr2h	equ	0xFDA
  1926                           fsr2l	equ	0xFD9
  1927                           status	equ	0xFD8
  1928                           
  1929 ;; *************** function _onLED *****************
  1930 ;; Defined at:
  1931 ;;		line 19 in file "../src/PIC18/Blinky.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;		None               void
  1938 ;; Registers used:
  1939 ;;		None
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1945 ;;      Params:         0       0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_LEDStateMachine
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text16
  1959  0079C6                     __ptext16:
  1960                           	opt stack 0
  1961  0079C6                     _onLED:
  1962                           	opt stack 29
  1963                           
  1964                           ;Blinky.c: 20: PORTBbits.RB0 = 1;
  1965                           
  1966                           ;incstack = 0
  1967  0079C6  8081               	bsf	3969,0,c	;volatile
  1968  0079C8  0012               	return	
  1969  0079CA                     __end_of_onLED:
  1970                           	opt stack 0
  1971                           tblptru	equ	0xFF8
  1972                           tblptrh	equ	0xFF7
  1973                           tblptrl	equ	0xFF6
  1974                           tablat	equ	0xFF5
  1975                           intcon	equ	0xFF2
  1976                           postinc0	equ	0xFEE
  1977                           wreg	equ	0xFE8
  1978                           postdec1	equ	0xFE5
  1979                           fsr1l	equ	0xFE1
  1980                           indf2	equ	0xFDF
  1981                           postinc2	equ	0xFDE
  1982                           postdec2	equ	0xFDD
  1983                           fsr2h	equ	0xFDA
  1984                           fsr2l	equ	0xFD9
  1985                           status	equ	0xFD8
  1986                           
  1987 ;; *************** function _offLED *****************
  1988 ;; Defined at:
  1989 ;;		line 23 in file "../src/PIC18/Blinky.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;		None               void
  1996 ;; Registers used:
  1997 ;;		None
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2003 ;;      Params:         0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_LEDStateMachine
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text17
  2017  0079C2                     __ptext17:
  2018                           	opt stack 0
  2019  0079C2                     _offLED:
  2020                           	opt stack 29
  2021                           
  2022                           ;Blinky.c: 24: PORTBbits.RB0 = 0;
  2023                           
  2024                           ;incstack = 0
  2025  0079C2  9081               	bcf	3969,0,c	;volatile
  2026  0079C4  0012               	return	
  2027  0079C6                     __end_of_offLED:
  2028                           	opt stack 0
  2029                           tblptru	equ	0xFF8
  2030                           tblptrh	equ	0xFF7
  2031                           tblptrl	equ	0xFF6
  2032                           tablat	equ	0xFF5
  2033                           intcon	equ	0xFF2
  2034                           postinc0	equ	0xFEE
  2035                           wreg	equ	0xFE8
  2036                           postdec1	equ	0xFE5
  2037                           fsr1l	equ	0xFE1
  2038                           indf2	equ	0xFDF
  2039                           postinc2	equ	0xFDE
  2040                           postdec2	equ	0xFDD
  2041                           fsr2h	equ	0xFDA
  2042                           fsr2l	equ	0xFD9
  2043                           status	equ	0xFD8
  2044                           
  2045 ;; *************** function _getClock *****************
  2046 ;; Defined at:
  2047 ;;		line 18 in file "../src/PIC18/Clock.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;		None
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  4    0[COMRAM] unsigned long 
  2054 ;; Registers used:
  2055 ;;		wreg, status,2, status,0, cstack
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2061 ;;      Params:         4       0       0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0
  2063 ;;      Temps:          0       0       0       0       0       0       0
  2064 ;;      Totals:         4       0       0       0       0       0       0
  2065 ;;Total ram usage:        4 bytes
  2066 ;; Hardware stack levels used:    1
  2067 ;; Hardware stack levels required when called:    1
  2068 ;; This function calls:
  2069 ;;		_clearTimer0OverflowFlag
  2070 ;;		_isTimer0Overflowed
  2071 ;; This function is called by:
  2072 ;;		_LEDStateMachine
  2073 ;;		_sevenSegSM
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text18
  2078  007AC4                     __ptext18:
  2079                           	opt stack 0
  2080  007AC4                     _getClock:
  2081                           	opt stack 28
  2082                           
  2083                           ;Clock.c: 19: if(isTimer0Overflowed()){
  2084                           
  2085                           ;incstack = 0
  2086  007AC4  ECE9  F03C         	call	_isTimer0Overflowed	;wreg free
  2087  007AC8  0900               	iorlw	0
  2088  007ACA  B4D8               	btfsc	status,2,c
  2089  007ACC  D008               	goto	l881
  2090                           
  2091                           ;Clock.c: 20: clock++;
  2092  007ACE  0E01               	movlw	1
  2093  007AD0  2631               	addwf	Clock@clock,f,c
  2094  007AD2  0E00               	movlw	0
  2095  007AD4  2232               	addwfc	Clock@clock+1,f,c
  2096  007AD6  2233               	addwfc	Clock@clock+2,f,c
  2097  007AD8  2234               	addwfc	Clock@clock+3,f,c
  2098                           
  2099                           ;Clock.c: 21: clearTimer0OverflowFlag();
  2100  007ADA  ECDF  F03C         	call	_clearTimer0OverflowFlag	;wreg free
  2101  007ADE                     l881:
  2102                           
  2103                           ;Clock.c: 22: }
  2104                           ;Clock.c: 23: return clock;
  2105  007ADE  C031  F001         	movff	Clock@clock,?_getClock
  2106  007AE2  C032  F002         	movff	Clock@clock+1,?_getClock+1
  2107  007AE6  C033  F003         	movff	Clock@clock+2,?_getClock+2
  2108  007AEA  C034  F004         	movff	Clock@clock+3,?_getClock+3
  2109  007AEE  0012               	return	
  2110  007AF0                     __end_of_getClock:
  2111                           	opt stack 0
  2112                           tblptru	equ	0xFF8
  2113                           tblptrh	equ	0xFF7
  2114                           tblptrl	equ	0xFF6
  2115                           tablat	equ	0xFF5
  2116                           intcon	equ	0xFF2
  2117                           postinc0	equ	0xFEE
  2118                           wreg	equ	0xFE8
  2119                           postdec1	equ	0xFE5
  2120                           fsr1l	equ	0xFE1
  2121                           indf2	equ	0xFDF
  2122                           postinc2	equ	0xFDE
  2123                           postdec2	equ	0xFDD
  2124                           fsr2h	equ	0xFDA
  2125                           fsr2l	equ	0xFD9
  2126                           status	equ	0xFD8
  2127                           
  2128 ;; *************** function _isTimer0Overflowed *****************
  2129 ;; Defined at:
  2130 ;;		line 29 in file "../src/PIC18/Clock.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      unsigned char 
  2137 ;; Registers used:
  2138 ;;		wreg
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2144 ;;      Params:         0       0       0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0
  2147 ;;      Totals:         0       0       0       0       0       0       0
  2148 ;;Total ram usage:        0 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_getClock
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text19
  2158  0079D2                     __ptext19:
  2159                           	opt stack 0
  2160  0079D2                     _isTimer0Overflowed:
  2161                           	opt stack 28
  2162                           
  2163                           ;Clock.c: 30: return INTCONbits.TMR0IF;
  2164                           
  2165                           ;incstack = 0
  2166  0079D2  A4F2               	btfss	intcon,2,c	;volatile
  2167  0079D4  D002               	goto	u10
  2168  0079D6  0E01               	movlw	1
  2169  0079D8  D001               	goto	l76
  2170  0079DA                     u10:
  2171  0079DA  0E00               	movlw	0
  2172  0079DC                     l76:
  2173  0079DC  0012               	return	
  2174  0079DE                     __end_of_isTimer0Overflowed:
  2175                           	opt stack 0
  2176                           tblptru	equ	0xFF8
  2177                           tblptrh	equ	0xFF7
  2178                           tblptrl	equ	0xFF6
  2179                           tablat	equ	0xFF5
  2180                           intcon	equ	0xFF2
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           postdec1	equ	0xFE5
  2184                           fsr1l	equ	0xFE1
  2185                           indf2	equ	0xFDF
  2186                           postinc2	equ	0xFDE
  2187                           postdec2	equ	0xFDD
  2188                           fsr2h	equ	0xFDA
  2189                           fsr2l	equ	0xFD9
  2190                           status	equ	0xFD8
  2191                           
  2192 ;; *************** function _clearTimer0OverflowFlag *****************
  2193 ;; Defined at:
  2194 ;;		line 33 in file "../src/PIC18/Clock.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;		None
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;		None
  2199 ;; Return value:  Size  Location     Type
  2200 ;;		None               void
  2201 ;; Registers used:
  2202 ;;		None
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2208 ;;      Params:         0       0       0       0       0       0       0
  2209 ;;      Locals:         0       0       0       0       0       0       0
  2210 ;;      Temps:          0       0       0       0       0       0       0
  2211 ;;      Totals:         0       0       0       0       0       0       0
  2212 ;;Total ram usage:        0 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_getClock
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text20
  2222  0079BE                     __ptext20:
  2223                           	opt stack 0
  2224  0079BE                     _clearTimer0OverflowFlag:
  2225                           	opt stack 28
  2226                           
  2227                           ;Clock.c: 34: INTCONbits.TMR0IF = 0;
  2228                           
  2229                           ;incstack = 0
  2230  0079BE  94F2               	bcf	intcon,2,c	;volatile
  2231  0079C0  0012               	return	
  2232  0079C2                     __end_of_clearTimer0OverflowFlag:
  2233                           	opt stack 0
  2234  0000                     tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           intcon	equ	0xFF2
  2239                           postinc0	equ	0xFEE
  2240                           wreg	equ	0xFE8
  2241                           postdec1	equ	0xFE5
  2242                           fsr1l	equ	0xFE1
  2243                           indf2	equ	0xFDF
  2244                           postinc2	equ	0xFDE
  2245                           postdec2	equ	0xFDD
  2246                           fsr2h	equ	0xFDA
  2247                           fsr2l	equ	0xFD9
  2248                           status	equ	0xFD8
  2249                           tblptru	equ	0xFF8
  2250                           tblptrh	equ	0xFF7
  2251                           tblptrl	equ	0xFF6
  2252                           tablat	equ	0xFF5
  2253                           intcon	equ	0xFF2
  2254                           postinc0	equ	0xFEE
  2255                           wreg	equ	0xFE8
  2256                           postdec1	equ	0xFE5
  2257                           fsr1l	equ	0xFE1
  2258                           indf2	equ	0xFDF
  2259                           postinc2	equ	0xFDE
  2260                           postdec2	equ	0xFDD
  2261                           fsr2h	equ	0xFDA
  2262                           fsr2l	equ	0xFD9
  2263                           status	equ	0xFD8
  2264                           
  2265                           	psect	rparam
  2266  0000                     tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           intcon	equ	0xFF2
  2271                           postinc0	equ	0xFEE
  2272                           wreg	equ	0xFE8
  2273                           postdec1	equ	0xFE5
  2274                           fsr1l	equ	0xFE1
  2275                           indf2	equ	0xFDF
  2276                           postinc2	equ	0xFDE
  2277                           postdec2	equ	0xFDD
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     32      57
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sevenSegSM@data	PTR struct SevenSegData size(2) Largest target is 7
		 -> main@sevenSegData(COMRAM[7]), 

    initSevenSeg@data	PTR struct SevenSegData size(2) Largest target is 7
		 -> main@sevenSegData(COMRAM[7]), 

    uartLoopbackSM@data	PTR struct LoopbackData size(2) Largest target is 2
		 -> main@loopbackData(COMRAM[2]), 

    initUartLoopback@data	PTR struct LoopbackData size(2) Largest target is 2
		 -> main@loopbackData(COMRAM[2]), 

    LEDStateMachine@data	PTR struct LEDData size(2) Largest target is 5
		 -> main@ledData(COMRAM[5]), 

    initLEDStateMachine@data	PTR struct LEDData size(2) Largest target is 5
		 -> main@ledData(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_LEDStateMachine
    _main->_sevenSegSM
    _uartLoopbackSM->_ReadUSART
    _uartLoopbackSM->_WriteUSART
    _sevenSegSM->_getClock
    _initClock->_OpenTimer0
    _LEDStateMachine->_getClock

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    1227
                                             18 COMRAM    14    14      0
                    _LEDStateMachine
                            _OpenSPI
                          _OpenUSART
                          _initClock
                _initLEDStateMachine
                       _initSevenSeg
                   _initUartLoopback
                         _sevenSegSM
                     _turnOnSevenSeg
                     _uartLoopbackSM
 ---------------------------------------------------------------------------------
 (1) _uartLoopbackSM                                       2     0      2     148
                                              1 COMRAM     2     0      2
                          _ReadUSART
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _turnOnSevenSeg                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sevenSegSM                                          14    12      2     238
                                              4 COMRAM    14    12      2
                           _WriteSPI
                           _getClock
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUartLoopback                                     2     0      2      73
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initSevenSeg                                         2     0      2      58
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initLEDStateMachine                                  2     0      2      73
                                              0 COMRAM     2     0      2
                       _configureLED
 ---------------------------------------------------------------------------------
 (2) _configureLED                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0      30
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     193
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenSPI                                              3     1      2     146
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LEDStateMachine                                     14    12      2     178
                                              4 COMRAM    14    12      2
                           _getClock
                             _offLED
                              _onLED
 ---------------------------------------------------------------------------------
 (2) _onLED                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _offLED                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getClock                                             4     0      4       0
                                              0 COMRAM     4     0      4
            _clearTimer0OverflowFlag
                 _isTimer0Overflowed
 ---------------------------------------------------------------------------------
 (3) _isTimer0Overflowed                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clearTimer0OverflowFlag                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDStateMachine
     _getClock
       _clearTimer0OverflowFlag
       _isTimer0Overflowed
     _offLED
     _onLED
   _OpenSPI
   _OpenUSART
   _initClock
     _OpenTimer0
   _initLEDStateMachine
     _configureLED
   _initSevenSeg
   _initUartLoopback
   _sevenSegSM
     _WriteSPI
     _getClock
       _clearTimer0OverflowFlag
       _isTimer0Overflowed
   _turnOnSevenSeg
   _uartLoopbackSM
     _ReadUSART
     _WriteUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     20      39       1       44.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      15        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Oct 30 12:18:07 2014

                   ?_configureLED 0001                       _SSPSTATbits 000FC7  
                              l76 79DC                                u10 79DA  
                             l101 7FFE                               l122 7BDE  
                             l116 7B82                               l206 7A98  
                             l207 7A9A                               l151 7E56  
                             l119 7BA4                               l232 7C02  
                             l241 7C46                               l170 7B40  
                             l250 7A6E                               l236 7C16  
                             l173 7B5A                               l237 7C18  
                             l174 7B78                               l238 7C22  
                             l175 7B60                               l167 7B3A  
                             l239 7C24                               l191 7A22  
                             l176 7B64                               l169 7B3E  
                             l189 7A26                               l907 7A0A  
                             l881 7ADE                               l937 7C04  
                             l929 7BF6                               l983 7B68  
                             l979 7B44                               fsr2 000FD9  
                             wreg 000FE8                  _initUartLoopback 7A42  
                     main@ledData 0015                      __CFG_LVP$OFF 000000  
                    __CFG_WDT$OFF 000000                              l1041 7F2E  
                            l1033 7E7C                              l1025 7BC8  
                            l1105 7C96                              l1051 7FE2  
                            l1029 7E5A                              l1063 7D2E  
                            l1055 7CBE                              l1073 7E32  
                            l1069 7E08                              l1077 7E40  
                   __CFG_DEBUG$ON 000000                              _PIE1 000F9D  
                    __CFG_PWRT$ON 000000                              _main 7C48  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            start 0000                    ??_configureLED 0001  
                 __end_of_OpenSPI 7B80          __size_of_LEDStateMachine 01A8  
    __size_of_initLEDStateMachine 0026                             ?_main 0001  
                           _T0CON 000FD5                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           _onLED 79C6                             _clock 0035  
                           tablat 000FF5                             status 000FD8  
                  WriteUSART@data 0001                   __initialization 7AF0  
                    __end_of_main 7CBC                            ??_main 0013  
                   __activetblptr 000002                     ?_initSevenSeg 0001  
                          ?_onLED 0001                  __end_of_WriteSPI 7A28  
                      _OpenTimer0 7A7E                __size_of_ReadUSART 001E  
                          _SPBRGH 000FB0                            _SSPBUF 000FC9  
                __end_of_getClock 7AF0                         ??_OpenSPI 0003  
              __size_of_OpenUSART 0068                  OpenTimer0@config 0001  
                          _offLED 79C2                            clear_0 7AF6  
                 WriteSPI@TempVar 0001                    ??_initSevenSeg 0003  
                initSevenSeg@data 0001                      __pdataCOMRAM 0021  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                 ??_LEDStateMachine 0007  
            __end_of_configureLED 79CE                        __accesstop 0080  
         __end_of__initialization 7B1C          ?_clearTimer0OverflowFlag 0001  
        __end_of_initUartLoopback 7A60                        _WriteUSART 79FE  
                  __pcstackCOMRAM 0001                     __end_of_onLED 79CA  
               __end_of_ReadUSART 7A7E                     ReadUSART@data 0001  
                         ??_onLED 0001                 __end_of_OpenUSART 7C48  
      __end_of_isTimer0Overflowed 79DE                       ?_OpenTimer0 0001  
             _initLEDStateMachine 7A9E                __size_of_initClock 001A  
         __size_of_uartLoopbackSM 0060                           ?_offLED 0001  
            ?_initLEDStateMachine 0001                         ?_WriteSPI 0001  
                       ?_getClock 0001                           _SSPCON1 000FC6  
                         _SSPSTAT 000FC7              __end_of_initSevenSeg 79EE  
                         _OpenSPI 7B26                           __Hparam 0000  
                         __Lparam 0000                       ?_WriteUSART 0001  
                 __size_of_offLED 0004             ??_initLEDStateMachine 0003  
                         __pcinit 7AF0                           __ramtop 0600  
                      ??_WriteSPI 0001           __size_of_turnOnSevenSeg 0004  
             __size_of_OpenTimer0 0020                           __ptext0 7C48  
                         __ptext1 7B80                           __ptext2 79FE  
                         __ptext3 7A60                           __ptext4 79CE  
                         __ptext5 7CBC                           __ptext6 7A10  
                         __ptext7 7A42                           __ptext8 79DE  
                         __ptext9 7A9E                 __end_of_initClock 7A42  
                       _T0CONbits 000FD5             __size_of_configureLED 0004  
                      ??_getClock 0005              end_of_initialization 7B1C  
                   __Lmediumconst 0000                         _RCSTAbits 000FAB  
                      _sevenSegSM 7CBC                           postdec1 000FE5  
                         postdec2 000FDD                  WriteSPI@data_out 0002  
                    _configureLED 79CA                           postinc0 000FEE  
                         postinc2 000FDE                   _LEDStateMachine 7E58  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94               __size_of_WriteUSART 0012  
                       _TXSTAbits 000FAC                 ?_initUartLoopback 0001  
                  _uartLoopbackSM 7B80              initUartLoopback@data 0001  
              ??_initUartLoopback 0003                     __pidataCOMRAM 79EE  
                  __end_of_offLED 79C6                  OpenSPI@smp_phase 0002  
__size_of_clearTimer0OverflowFlag 0004               start_initialization 7AF0  
                       _ReadUSART 7A60               LEDStateMachine@data 0005  
                OpenSPI@sync_mode 0003             __size_of_initSevenSeg 0010  
                    ??_OpenTimer0 0001                         _OpenUSART 7BE0  
                __CFG_OSC$INTIO67 000000            __end_of_uartLoopbackSM 7BE0  
         __end_of_LEDStateMachine 8000                _isTimer0Overflowed 79D2  
                     ?_sevenSegSM 0005                          ??_offLED 0001  
             ?_isTimer0Overflowed 0001                    _turnOnSevenSeg 79CE  
                  sevenSegSM@data 0005                __end_of_OpenTimer0 7A9E  
               __size_of_WriteSPI 0018                      _initSevenSeg 79DE  
                     __pbssCOMRAM 0031                        ?_ReadUSART 0001  
               __size_of_getClock 002C              ??_isTimer0Overflowed 0001  
                      ?_OpenUSART 0001                  main@loopbackData 0013  
                 ?_uartLoopbackSM 0002                          ?_OpenSPI 0001  
                    ??_WriteUSART 0001            __end_of_turnOnSevenSeg 79D2  
                       _initClock 7A28                    __size_of_onLED 0004  
             __size_of_sevenSegSM 019C                __end_of_WriteUSART 7A10  
         initLEDStateMachine@data 0001                          _PIE1bits 000F9D  
                ?_LEDStateMachine 0005                       _hexPatterns 0021  
     __end_of_initLEDStateMachine 7AC4                          _PIR1bits 000F9E  
                 ?_turnOnSevenSeg 0001                uartLoopbackSM@data 0002  
         _clearTimer0OverflowFlag 79BE                  main@sevenSegData 001A  
                 OpenSPI@bus_mode 0001                       ??_ReadUSART 0001  
                      ?_initClock 0001                         copy_data0 7B10  
                     ??_OpenUSART 0003                   OpenUSART@config 0006  
                        __Hrparam 0000                          __Lrparam 0000  
                __size_of_OpenSPI 005A                          _WriteSPI 7A10  
       __size_of_initUartLoopback 001E                          _getClock 7AC4  
                        __ptext10 79CA                          __ptext11 7A28  
                        __ptext20 79BE                          __ptext12 7A7E  
                        __ptext13 7BE0                          __ptext14 7B26  
                        __ptext15 7E58                          __ptext16 79C6  
                        __ptext17 79C2                          __ptext18 7AC4  
                        __ptext19 79D2                     __size_of_main 0074  
                    ??_sevenSegSM 0007         ??_clearTimer0OverflowFlag 0001  
                      _INTCONbits 000FF2                    OpenUSART@spbrg 0001  
                     ??_initClock 0002                __end_of_sevenSegSM 7E58  
                ??_uartLoopbackSM 0004                        Clock@clock 0031  
                      _OSCCONbits 000FD3                       _SSPCON1bits 000FC6  
 __end_of_clearTimer0OverflowFlag 79C2       __size_of_isTimer0Overflowed 000C  
                ??_turnOnSevenSeg 0001                      _USART_Status 0039  
